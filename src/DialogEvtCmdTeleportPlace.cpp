// -*- C++ -*-
//
// generated by wxGlade not found
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#include <wx/wx.h>
#include "DialogEvtCmdTeleportPlace.h"

// begin wxGlade: ::extracode
// end wxGlade


DialogEvtCmdTeleportPlace::DialogEvtCmdTeleportPlace(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxRESIZE_BORDER)
{
    // begin wxGlade: DialogEvtCmdTeleportPlace::DialogEvtCmdTeleportPlace
    szSwitch_staticbox = new wxStaticBox(this, wxID_ANY, _("Enable switch after teleporting"));
    szPosition_staticbox = new wxStaticBox(this, wxID_ANY, _("Teleport position"));
    const wxString rbOperation_choices[] = {
        _("Add teleport"),
        _("Remove teleport"),
    };
    rbOperation = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 2, rbOperation_choices, 1, wxRA_SPECIFY_ROWS);
    tcPosition = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    btnPosition = new wxButton(this, wxID_ANY, _("..."), wxDefaultPosition, wxDefaultSize, wxBU_EXACTFIT);
    chbSwitch = new wxCheckBox(this, wxID_ANY, _("Enable"));
    tcSwitch = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    btnSwitch = new wxButton(this, wxID_ANY, _("..."), wxDefaultPosition, wxDefaultSize, wxBU_EXACTFIT);
    btnOK = new wxButton(this, wxID_OK, wxEmptyString);
    btnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    btnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DialogEvtCmdTeleportPlace::set_properties()
{
    // begin wxGlade: DialogEvtCmdTeleportPlace::set_properties
    SetTitle(_("Change teleport place"));
    rbOperation->SetSelection(0);
    tcPosition->SetMinSize(wxSize(125, -1));
    tcSwitch->SetMinSize(wxSize(125, -1));
    btnOK->SetDefault();
    // end wxGlade
}


void DialogEvtCmdTeleportPlace::do_layout()
{
    // begin wxGlade: DialogEvtCmdTeleportPlace::do_layout
    wxBoxSizer* szTeleportPlace = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* szBottom = new wxBoxSizer(wxHORIZONTAL);
    szSwitch_staticbox->Lower();
    wxStaticBoxSizer* szSwitch = new wxStaticBoxSizer(szSwitch_staticbox, wxHORIZONTAL);
    szPosition_staticbox->Lower();
    wxStaticBoxSizer* szPosition = new wxStaticBoxSizer(szPosition_staticbox, wxHORIZONTAL);
    szTeleportPlace->Add(rbOperation, 0, wxEXPAND|wxLEFT|wxRIGHT, 1);
    szPosition->Add(tcPosition, 1, wxALIGN_CENTER_VERTICAL, 0);
    szPosition->Add(btnPosition, 0, wxALIGN_CENTER_VERTICAL, 0);
    szTeleportPlace->Add(szPosition, 0, wxEXPAND|wxLEFT|wxRIGHT, 1);
    szSwitch->Add(chbSwitch, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT, 1);
    szSwitch->Add(tcSwitch, 1, wxALIGN_CENTER_VERTICAL|wxLEFT, 1);
    szSwitch->Add(btnSwitch, 0, wxALIGN_CENTER_VERTICAL, 0);
    szTeleportPlace->Add(szSwitch, 0, wxBOTTOM|wxEXPAND|wxLEFT|wxRIGHT, 1);
    szBottom->Add(btnOK, 0, wxALIGN_BOTTOM|wxALL, 1);
    szBottom->Add(btnCancel, 0, wxALIGN_BOTTOM|wxALL, 1);
    szBottom->Add(btnHelp, 0, wxALIGN_BOTTOM|wxALL, 1);
    szTeleportPlace->Add(szBottom, 1, wxALIGN_RIGHT|wxBOTTOM|wxRIGHT, 3);
    SetSizer(szTeleportPlace);
    szTeleportPlace->Fit(this);
    Layout();
    // end wxGlade
}

