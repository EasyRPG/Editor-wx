// -*- C++ -*-
//
// generated by wxGlade not found
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#include <wx/wx.h>
#include "DialogMaterial.h"

// begin wxGlade: ::extracode
// end wxGlade


DialogMaterial::DialogMaterial(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxRESIZE_BORDER)
{
    // begin wxGlade: DialogMaterial::DialogMaterial
    const wxString listFolders_choices[] = {
        _("Backdrop"),
        _("Battle"),
        _("CharSet"),
        _("ChipSet"),
        _("FaceSet"),
        _("GameOver"),
        _("Monster"),
        _("Movie"),
        _("Music"),
        _("Panorama"),
        _("Picture"),
        _("Sound"),
        _("System"),
        _("Title"),
    };
    listFolders = new wxListBox(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 14, listFolders_choices, wxLB_SINGLE);
    const wxString listFiles_choices[] = {
        _("<set by wxGlade>"),
    };
    listFiles = new wxListBox(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 1, listFiles_choices, wxLB_SINGLE);
    btnImport = new wxButton(this, wxID_ANY, _("Import..."));
    btnExport = new wxButton(this, wxID_ANY, _("Export..."));
    btnDelete = new wxButton(this, wxID_ANY, _("Delete..."));
    const wxString rbFormat_choices[] = {
        _("PNG"),
        _("XYZ"),
    };
    rbFormat = new wxRadioBox(this, wxID_ANY, _("Import/export as"), wxDefaultPosition, wxDefaultSize, 2, rbFormat_choices, 1, wxRA_SPECIFY_COLS);
    btnClose = new wxButton(this, wxID_CLOSE, wxEmptyString);
    btnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DialogMaterial::set_properties()
{
    // begin wxGlade: DialogMaterial::set_properties
    SetTitle(_("Material Manager"));
    listFolders->SetSelection(0);
    listFiles->SetSelection(0);
    rbFormat->SetSelection(0);
    btnClose->SetDefault();
    // end wxGlade
}


void DialogMaterial::do_layout()
{
    // begin wxGlade: DialogMaterial::do_layout
    wxBoxSizer* szMaterial = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* szBottom = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* szTop = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* szRight = new wxBoxSizer(wxVERTICAL);
    szTop->Add(listFolders, 1, wxALL|wxEXPAND, 1);
    szTop->Add(listFiles, 1, wxALL|wxEXPAND, 1);
    szRight->Add(btnImport, 0, wxALL|wxEXPAND, 1);
    szRight->Add(btnExport, 0, wxALL|wxEXPAND, 1);
    szRight->Add(btnDelete, 0, wxALL|wxEXPAND, 1);
    szRight->Add(0, 0, 1, wxEXPAND, 0);
    szRight->Add(rbFormat, 0, wxBOTTOM|wxEXPAND|wxLEFT|wxRIGHT, 1);
    szTop->Add(szRight, 0, wxEXPAND, 0);
    szMaterial->Add(szTop, 1, wxEXPAND, 0);
    szBottom->Add(btnClose, 0, wxALL, 1);
    szBottom->Add(btnHelp, 0, wxALL, 1);
    szMaterial->Add(szBottom, 0, wxALIGN_RIGHT|wxBOTTOM|wxRIGHT, 3);
    SetSizer(szMaterial);
    szMaterial->Fit(this);
    Layout();
    // end wxGlade
}

