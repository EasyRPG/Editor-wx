// -*- C++ -*-
//
// generated by wxGlade not found
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#include <wx/wx.h>
#include "DialogEvtCmdMoveScreen.h"

// begin wxGlade: ::extracode
// end wxGlade


DialogEvtCmdMoveScreen::DialogEvtCmdMoveScreen(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxRESIZE_BORDER)
{
    // begin wxGlade: DialogEvtCmdMoveScreen::DialogEvtCmdMoveScreen
    szTiles_staticbox = new wxStaticBox(this, wxID_ANY, _("Number of tiles"));
    szSpeed_staticbox = new wxStaticBox(this, wxID_ANY, _("Movement speed"));
    szOptions_staticbox = new wxStaticBox(this, wxID_ANY, _("Options"));
    szDirection_staticbox = new wxStaticBox(this, wxID_ANY, _("Direction"));
    const wxString rbOperation_choices[] = {
        _("Fix"),
        _("Cancel fix"),
        _("Move position"),
        _("Return to origin"),
    };
    rbOperation = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 4, rbOperation_choices, 0, wxRA_SPECIFY_ROWS);
    rbtnUp = new wxRadioButton(this, wxID_ANY, _("Up"));
    rbtnLeft = new wxRadioButton(this, wxID_ANY, _("Left"));
    rbtnRight = new wxRadioButton(this, wxID_ANY, _("Right"));
    rbtnDown = new wxRadioButton(this, wxID_ANY, _("Down"));
    spinTiles = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    const wxString chSpeed_choices[] = {
        _("<set by wxGlade>"),
    };
    chSpeed = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 1, chSpeed_choices);
    chbWait = new wxCheckBox(this, wxID_ANY, _("Wait until end movement"));
    btnOK = new wxButton(this, wxID_OK, wxEmptyString);
    btnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    btnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DialogEvtCmdMoveScreen::set_properties()
{
    // begin wxGlade: DialogEvtCmdMoveScreen::set_properties
    SetTitle(_("Move screen"));
    rbOperation->SetSelection(0);
    spinTiles->SetMinSize(wxSize(90, -1));
    chSpeed->SetMinSize(wxSize(50, -1));
    chSpeed->SetSelection(0);
    btnOK->SetDefault();
    // end wxGlade
}


void DialogEvtCmdMoveScreen::do_layout()
{
    // begin wxGlade: DialogEvtCmdMoveScreen::do_layout
    wxBoxSizer* szMoveScreen = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* szBottom = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* szMiddle = new wxBoxSizer(wxHORIZONTAL);
    szOptions_staticbox->Lower();
    wxStaticBoxSizer* szOptions = new wxStaticBoxSizer(szOptions_staticbox, wxHORIZONTAL);
    szSpeed_staticbox->Lower();
    wxStaticBoxSizer* szSpeed = new wxStaticBoxSizer(szSpeed_staticbox, wxHORIZONTAL);
    wxBoxSizer* szTop = new wxBoxSizer(wxHORIZONTAL);
    szTiles_staticbox->Lower();
    wxStaticBoxSizer* szTiles = new wxStaticBoxSizer(szTiles_staticbox, wxHORIZONTAL);
    szDirection_staticbox->Lower();
    wxStaticBoxSizer* szDirection = new wxStaticBoxSizer(szDirection_staticbox, wxVERTICAL);
    wxGridSizer* gszDirection = new wxGridSizer(3, 3, 2, 2);
    szTop->Add(rbOperation, 0, wxLEFT|wxRIGHT, 1);
    gszDirection->Add(0, 0, 1, wxEXPAND, 0);
    gszDirection->Add(rbtnUp, 0, wxEXPAND, 0);
    gszDirection->Add(0, 0, 1, wxEXPAND, 0);
    gszDirection->Add(rbtnLeft, 0, wxEXPAND, 0);
    gszDirection->Add(0, 0, 1, wxEXPAND, 0);
    gszDirection->Add(rbtnRight, 0, wxEXPAND, 0);
    gszDirection->Add(0, 0, 1, wxEXPAND, 0);
    gszDirection->Add(rbtnDown, 0, wxEXPAND, 0);
    gszDirection->Add(0, 0, 1, wxEXPAND, 0);
    szDirection->Add(gszDirection, 1, wxEXPAND, 0);
    szTop->Add(szDirection, 0, wxEXPAND|wxLEFT|wxRIGHT, 1);
    szTiles->Add(spinTiles, 1, 0, 0);
    szTop->Add(szTiles, 1, wxEXPAND|wxLEFT|wxRIGHT, 1);
    szMoveScreen->Add(szTop, 0, wxEXPAND, 0);
    szSpeed->Add(chSpeed, 1, wxALIGN_CENTER_VERTICAL, 0);
    szMiddle->Add(szSpeed, 1, wxBOTTOM|wxEXPAND|wxLEFT|wxRIGHT, 1);
    szOptions->Add(chbWait, 1, wxALIGN_CENTER_VERTICAL, 0);
    szMiddle->Add(szOptions, 1, wxBOTTOM|wxEXPAND|wxLEFT|wxRIGHT, 1);
    szMoveScreen->Add(szMiddle, 0, wxEXPAND, 0);
    szBottom->Add(btnOK, 0, wxALIGN_BOTTOM|wxALL, 1);
    szBottom->Add(btnCancel, 0, wxALIGN_BOTTOM|wxALL, 1);
    szBottom->Add(btnHelp, 0, wxALIGN_BOTTOM|wxALL, 1);
    szMoveScreen->Add(szBottom, 1, wxALIGN_RIGHT|wxBOTTOM|wxRIGHT, 3);
    SetSizer(szMoveScreen);
    szMoveScreen->Fit(this);
    Layout();
    // end wxGlade
}

