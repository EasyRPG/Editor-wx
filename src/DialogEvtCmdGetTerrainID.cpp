// -*- C++ -*-
//
// generated by wxGlade not found
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#include <wx/wx.h>
#include "DialogEvtCmdGetTerrainID.h"

// begin wxGlade: ::extracode
// end wxGlade


DialogEvtCmdGetTerrainID::DialogEvtCmdGetTerrainID(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxRESIZE_BORDER)
{
    // begin wxGlade: DialogEvtCmdGetTerrainID::DialogEvtCmdGetTerrainID
    szPlace_staticbox = new wxStaticBox(this, wxID_ANY, _("Place"));
    szStoreVariableID_staticbox = new wxStaticBox(this, wxID_ANY, _("Store ID in variable"));
    szPlaceVariable_staticbox = new wxStaticBox(this, wxID_ANY, _("Origin variable"));
    rbtnPlaceSpecify = new wxRadioButton(this, wxID_ANY, _("Specify"));
    tcPlaceSpecify = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    btnPlaceSpecify = new wxButton(this, wxID_ANY, _("..."), wxDefaultPosition, wxDefaultSize, wxBU_EXACTFIT);
    rbtnPlaceVariable = new wxRadioButton(this, wxID_ANY, _("Variable"));
    stlPlaceVariableX = new wxStaticText(this, wxID_ANY, _("X ordinate:"));
    tcPlaceVariableX = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    btnPlaceVariableX = new wxButton(this, wxID_ANY, _("..."), wxDefaultPosition, wxDefaultSize, wxBU_EXACTFIT);
    stPlaceVariableY = new wxStaticText(this, wxID_ANY, _("Y ordinate:"));
    tcPlaceVariableY = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    btnPlaceVariableY = new wxButton(this, wxID_ANY, _("..."), wxDefaultPosition, wxDefaultSize, wxBU_EXACTFIT);
    tcStoreVariableID = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    btnStoreVariableID = new wxButton(this, wxID_ANY, _("..."), wxDefaultPosition, wxDefaultSize, wxBU_EXACTFIT);
    btnOK = new wxButton(this, wxID_OK, wxEmptyString);
    btnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    btnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DialogEvtCmdGetTerrainID::set_properties()
{
    // begin wxGlade: DialogEvtCmdGetTerrainID::set_properties
    SetTitle(_("Get terrain ID"));
    tcPlaceSpecify->SetMinSize(wxSize(50, -1));
    tcPlaceVariableX->SetMinSize(wxSize(50, -1));
    tcPlaceVariableY->SetMinSize(wxSize(50, -1));
    tcStoreVariableID->SetMinSize(wxSize(50, -1));
    btnOK->SetDefault();
    // end wxGlade
}


void DialogEvtCmdGetTerrainID::do_layout()
{
    // begin wxGlade: DialogEvtCmdGetTerrainID::do_layout
    wxBoxSizer* szGetTerrainID = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* szBottom = new wxBoxSizer(wxHORIZONTAL);
    szStoreVariableID_staticbox->Lower();
    wxStaticBoxSizer* szStoreVariableID = new wxStaticBoxSizer(szStoreVariableID_staticbox, wxHORIZONTAL);
    szPlace_staticbox->Lower();
    wxStaticBoxSizer* szPlace = new wxStaticBoxSizer(szPlace_staticbox, wxVERTICAL);
    szPlaceVariable_staticbox->Lower();
    wxStaticBoxSizer* szPlaceVariable = new wxStaticBoxSizer(szPlaceVariable_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* gszPlaceVariable = new wxFlexGridSizer(2, 2, 2, 2);
    wxBoxSizer* szPlaceVariableY = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* szPlaceVariableX = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* szPlaceSpecify = new wxBoxSizer(wxHORIZONTAL);
    szPlaceSpecify->Add(rbtnPlaceSpecify, 0, wxALIGN_CENTER_VERTICAL|wxBOTTOM|wxRIGHT, 1);
    szPlaceSpecify->Add(tcPlaceSpecify, 1, wxALIGN_CENTER_VERTICAL|wxBOTTOM|wxLEFT, 1);
    szPlaceSpecify->Add(btnPlaceSpecify, 0, wxALIGN_CENTER_VERTICAL|wxBOTTOM, 1);
    szPlace->Add(szPlaceSpecify, 0, wxEXPAND, 0);
    szPlace->Add(rbtnPlaceVariable, 0, wxEXPAND|wxTOP, 1);
    gszPlaceVariable->Add(stlPlaceVariableX, 0, wxALIGN_CENTER_VERTICAL, 0);
    szPlaceVariableX->Add(tcPlaceVariableX, 1, wxALIGN_CENTER_VERTICAL, 0);
    szPlaceVariableX->Add(btnPlaceVariableX, 0, wxALIGN_CENTER_VERTICAL, 0);
    gszPlaceVariable->Add(szPlaceVariableX, 1, wxEXPAND, 0);
    gszPlaceVariable->Add(stPlaceVariableY, 0, wxALIGN_CENTER_VERTICAL, 0);
    szPlaceVariableY->Add(tcPlaceVariableY, 1, wxALIGN_CENTER_VERTICAL, 0);
    szPlaceVariableY->Add(btnPlaceVariableY, 0, wxALIGN_CENTER_VERTICAL, 0);
    gszPlaceVariable->Add(szPlaceVariableY, 1, wxEXPAND, 0);
    gszPlaceVariable->AddGrowableCol(1);
    szPlaceVariable->Add(gszPlaceVariable, 1, wxEXPAND, 0);
    szPlace->Add(szPlaceVariable, 0, wxEXPAND, 0);
    szGetTerrainID->Add(szPlace, 0, wxBOTTOM|wxEXPAND|wxLEFT|wxRIGHT, 1);
    szStoreVariableID->Add(tcStoreVariableID, 1, wxALIGN_CENTER_VERTICAL, 0);
    szStoreVariableID->Add(btnStoreVariableID, 0, wxALIGN_CENTER_VERTICAL, 0);
    szGetTerrainID->Add(szStoreVariableID, 0, wxEXPAND|wxLEFT|wxRIGHT, 1);
    szBottom->Add(btnOK, 0, wxALIGN_BOTTOM|wxALL, 1);
    szBottom->Add(btnCancel, 0, wxALIGN_BOTTOM|wxALL, 1);
    szBottom->Add(btnHelp, 0, wxALIGN_BOTTOM|wxALL, 1);
    szGetTerrainID->Add(szBottom, 1, wxALIGN_RIGHT|wxBOTTOM|wxRIGHT, 3);
    SetSizer(szGetTerrainID);
    szGetTerrainID->Fit(this);
    Layout();
    // end wxGlade
}

