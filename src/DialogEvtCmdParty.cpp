// -*- C++ -*-
//
// generated by wxGlade not found
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#include <wx/wx.h>
#include "DialogEvtCmdParty.h"

// begin wxGlade: ::extracode
// end wxGlade


DialogEvtCmdParty::DialogEvtCmdParty(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxRESIZE_BORDER)
{
    // begin wxGlade: DialogEvtCmdParty::DialogEvtCmdParty
    szActor_staticbox = new wxStaticBox(this, wxID_ANY, _("Actor to change"));
    const wxString rbOperation_choices[] = {
        _("Add actor"),
        _("Delete actor"),
    };
    rbOperation = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 2, rbOperation_choices, 1, wxRA_SPECIFY_ROWS);
    rbtnActorFixed = new wxRadioButton(this, wxID_ANY, _("Fixed"));
    const wxString chActorFixed_choices[] = {
        _("<set by wxGlade>"),
    };
    chActorFixed = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 1, chActorFixed_choices);
    rbtnActorVariable = new wxRadioButton(this, wxID_ANY, _("Variable"));
    tcActorVariable = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    btnActorVariable = new wxButton(this, wxID_ANY, _("..."), wxDefaultPosition, wxDefaultSize, wxBU_EXACTFIT);
    btnOK = new wxButton(this, wxID_OK, wxEmptyString);
    btnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    btnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DialogEvtCmdParty::set_properties()
{
    // begin wxGlade: DialogEvtCmdParty::set_properties
    SetTitle(_("Change party"));
    rbOperation->SetSelection(0);
    chActorFixed->SetMinSize(wxSize(50, -1));
    chActorFixed->SetSelection(0);
    tcActorVariable->SetMinSize(wxSize(50, -1));
    btnOK->SetDefault();
    // end wxGlade
}


void DialogEvtCmdParty::do_layout()
{
    // begin wxGlade: DialogEvtCmdParty::do_layout
    wxBoxSizer* szParty = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* szBottom = new wxBoxSizer(wxHORIZONTAL);
    szActor_staticbox->Lower();
    wxStaticBoxSizer* szActor = new wxStaticBoxSizer(szActor_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* gszActor = new wxFlexGridSizer(2, 2, 2, 2);
    wxBoxSizer* szActorVariable = new wxBoxSizer(wxHORIZONTAL);
    szParty->Add(rbOperation, 0, wxEXPAND|wxLEFT|wxRIGHT, 1);
    gszActor->Add(rbtnActorFixed, 0, wxALIGN_CENTER_VERTICAL|wxEXPAND, 0);
    gszActor->Add(chActorFixed, 0, wxALIGN_CENTER_VERTICAL|wxEXPAND, 0);
    gszActor->Add(rbtnActorVariable, 0, wxALIGN_CENTER_VERTICAL|wxEXPAND, 0);
    szActorVariable->Add(tcActorVariable, 1, wxALIGN_CENTER_VERTICAL, 0);
    szActorVariable->Add(btnActorVariable, 0, wxALIGN_CENTER_VERTICAL, 0);
    gszActor->Add(szActorVariable, 1, wxEXPAND, 0);
    gszActor->AddGrowableCol(1);
    szActor->Add(gszActor, 1, wxEXPAND, 0);
    szParty->Add(szActor, 0, wxBOTTOM|wxEXPAND|wxLEFT|wxRIGHT, 1);
    szBottom->Add(btnOK, 0, wxALIGN_BOTTOM|wxALL, 1);
    szBottom->Add(btnCancel, 0, wxALIGN_BOTTOM|wxALL, 1);
    szBottom->Add(btnHelp, 0, wxALIGN_BOTTOM|wxALL, 1);
    szParty->Add(szBottom, 1, wxALIGN_RIGHT|wxBOTTOM|wxRIGHT, 3);
    SetSizer(szParty);
    szParty->Fit(this);
    Layout();
    // end wxGlade
}

