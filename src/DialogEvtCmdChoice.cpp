// -*- C++ -*-
//
// generated by wxGlade not found
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#include <wx/wx.h>
#include "DialogEvtCmdChoice.h"

// begin wxGlade: ::extracode
// end wxGlade


DialogEvtCmdChoice::DialogEvtCmdChoice(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxRESIZE_BORDER)
{
    // begin wxGlade: DialogEvtCmdChoice::DialogEvtCmdChoice
    szOption2_staticbox = new wxStaticBox(this, wxID_ANY, _("Option 2"));
    szOption3_staticbox = new wxStaticBox(this, wxID_ANY, _("Option 3"));
    szOption4_staticbox = new wxStaticBox(this, wxID_ANY, _("Option 4"));
    szOption1_staticbox = new wxStaticBox(this, wxID_ANY, _("Option 1"));
    tcOption1 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    tcOption2 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    tcOption3 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    tcOption4 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    const wxString rbCancel_choices[] = {
        _("Cancel"),
        _("Option 1"),
        _("Option 2"),
        _("Option 3"),
        _("Option 4"),
        _("Condition"),
    };
    rbCancel = new wxRadioBox(this, wxID_ANY, _("On cancel"), wxDefaultPosition, wxDefaultSize, 6, rbCancel_choices, 1, wxRA_SPECIFY_COLS);
    btnOK = new wxButton(this, wxID_OK, wxEmptyString);
    btnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    btnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DialogEvtCmdChoice::set_properties()
{
    // begin wxGlade: DialogEvtCmdChoice::set_properties
    SetTitle(_("Select option"));
    tcOption1->SetMinSize(wxSize(50, -1));
    tcOption2->SetMinSize(wxSize(50, -1));
    tcOption3->SetMinSize(wxSize(50, -1));
    tcOption4->SetMinSize(wxSize(50, -1));
    rbCancel->SetSelection(2);
    btnOK->SetDefault();
    // end wxGlade
}


void DialogEvtCmdChoice::do_layout()
{
    // begin wxGlade: DialogEvtCmdChoice::do_layout
    wxBoxSizer* szChoice = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* szBottom = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* szTop = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* szTop02 = new wxBoxSizer(wxVERTICAL);
    szOption4_staticbox->Lower();
    wxStaticBoxSizer* szOption4 = new wxStaticBoxSizer(szOption4_staticbox, wxHORIZONTAL);
    szOption3_staticbox->Lower();
    wxStaticBoxSizer* szOption3 = new wxStaticBoxSizer(szOption3_staticbox, wxHORIZONTAL);
    szOption2_staticbox->Lower();
    wxStaticBoxSizer* szOption2 = new wxStaticBoxSizer(szOption2_staticbox, wxHORIZONTAL);
    szOption1_staticbox->Lower();
    wxStaticBoxSizer* szOption1 = new wxStaticBoxSizer(szOption1_staticbox, wxHORIZONTAL);
    szOption1->Add(tcOption1, 1, wxALIGN_CENTER_VERTICAL, 0);
    szTop02->Add(szOption1, 1, wxEXPAND|wxLEFT|wxRIGHT, 1);
    szOption2->Add(tcOption2, 1, wxALIGN_CENTER_VERTICAL, 0);
    szTop02->Add(szOption2, 1, wxEXPAND|wxLEFT|wxRIGHT, 1);
    szOption3->Add(tcOption3, 1, wxALIGN_CENTER_VERTICAL, 0);
    szTop02->Add(szOption3, 1, wxEXPAND|wxLEFT|wxRIGHT, 1);
    szOption4->Add(tcOption4, 1, wxALIGN_CENTER_VERTICAL, 0);
    szTop02->Add(szOption4, 1, wxBOTTOM|wxEXPAND|wxLEFT|wxRIGHT, 1);
    szTop->Add(szTop02, 1, wxEXPAND, 0);
    szTop->Add(rbCancel, 0, wxBOTTOM|wxLEFT|wxRIGHT, 1);
    szChoice->Add(szTop, 1, wxEXPAND, 0);
    szBottom->Add(btnOK, 0, wxALL, 1);
    szBottom->Add(btnCancel, 0, wxALL, 1);
    szBottom->Add(btnHelp, 0, wxALL, 1);
    szChoice->Add(szBottom, 0, wxALIGN_RIGHT|wxBOTTOM|wxRIGHT, 3);
    SetSizer(szChoice);
    szChoice->Fit(this);
    Layout();
    // end wxGlade
}

