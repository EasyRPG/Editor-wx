// -*- C++ -*-
//
// generated by wxGlade not found
//
// Example for compiling a single file project under Linux using g++:
//  g++ MyApp.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp
//
// Example for compiling a multi file project under Linux using g++:
//  g++ main.cpp $(wx-config --libs) $(wx-config --cxxflags) -o MyApp Dialog1.cpp Frame1.cpp
//

#include <wx/wx.h>
#include "DialogEvtCmdConditions.h"

// begin wxGlade: ::extracode
// end wxGlade


DialogEvtCmdConditions::DialogEvtCmdConditions(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxRESIZE_BORDER)
{
    // begin wxGlade: DialogEvtCmdConditions::DialogEvtCmdConditions
    nbConditions = new wxNotebook(this, wxID_ANY);
    nbConditions2 = new wxPanel(nbConditions, wxID_ANY);
    szConditionsTop_staticbox = new wxStaticBox(this, wxID_ANY, _("Conditions"));
    szOptions_staticbox = new wxStaticBox(this, wxID_ANY, _("Options"));
    pnConditions1 = new wxPanel(nbConditions, wxID_ANY);
    rbtnSwitch = new wxRadioButton(pnConditions1, wxID_ANY, _("Switch"));
    tcSwitch = new wxTextCtrl(pnConditions1, wxID_ANY, wxEmptyString);
    btnSwitch = new wxButton(pnConditions1, wxID_ANY, _("..."), wxDefaultPosition, wxDefaultSize, wxBU_EXACTFIT);
    stSwitch = new wxStaticText(pnConditions1, wxID_ANY, _(":"));
    const wxString chSwitch_choices[] = {
        _("<set by wxGlade>"),
    };
    chSwitch = new wxChoice(pnConditions1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 1, chSwitch_choices);
    rbtnVariable = new wxRadioButton(pnConditions1, wxID_ANY, _("Variable"));
    tcVariable = new wxTextCtrl(pnConditions1, wxID_ANY, wxEmptyString);
    btnVariable = new wxButton(pnConditions1, wxID_ANY, _("..."), wxDefaultPosition, wxDefaultSize, wxBU_EXACTFIT);
    stVariable = new wxStaticText(pnConditions1, wxID_ANY, _(":"));
    rbtnVariableFixed = new wxRadioButton(pnConditions1, wxID_ANY, _("Fixed"));
    spinVariableFiexd = new wxSpinCtrl(pnConditions1, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    rbtnVariableVariable = new wxRadioButton(pnConditions1, wxID_ANY, _("Variable"));
    tcVariableVariable = new wxTextCtrl(pnConditions1, wxID_ANY, wxEmptyString);
    btnVariableVariable = new wxButton(pnConditions1, wxID_ANY, _("..."), wxDefaultPosition, wxDefaultSize, wxBU_EXACTFIT);
    const wxString chVariable_choices[] = {
        _("<set by wxGlade>"),
    };
    chVariable = new wxChoice(pnConditions1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 1, chVariable_choices);
    rbtnTimer = new wxRadioButton(pnConditions1, wxID_ANY, _("Timer"));
    spinTimerMinutes = new wxSpinCtrl(pnConditions1, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    stTimerMinutes = new wxStaticText(pnConditions1, wxID_ANY, _(":"));
    spinTimerSeconds = new wxSpinCtrl(pnConditions1, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    stTimerSeconds = new wxStaticText(pnConditions1, wxID_ANY, _("sec."));
    const wxString chTimer_choices[] = {
        _("<set by wxGlade>"),
    };
    chTimer = new wxChoice(pnConditions1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 1, chTimer_choices);
    rbtnMoney = new wxRadioButton(pnConditions1, wxID_ANY, _("Money"));
    spinMoney = new wxSpinCtrl(pnConditions1, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    const wxString chMoney_choices[] = {
        _("<set by wxGlade>"),
    };
    chMoney = new wxChoice(pnConditions1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 1, chMoney_choices);
    rbtnItem = new wxRadioButton(nbConditions2, wxID_ANY, _("Item"));
    const wxString chItem_choices[] = {
        _("<set by wxGlade>"),
    };
    chItem = new wxChoice(nbConditions2, wxID_ANY, wxDefaultPosition, wxDefaultSize, 1, chItem_choices);
    const wxString chItem2_choices[] = {
        _("<set by wxGlade>"),
    };
    chItem2 = new wxChoice(nbConditions2, wxID_ANY, wxDefaultPosition, wxDefaultSize, 1, chItem2_choices);
    rbtnoActor = new wxRadioButton(nbConditions2, wxID_ANY, _("Actor"));
    const wxString chActor_choices[] = {
        _("<set by wxGlade>"),
    };
    chActor = new wxChoice(nbConditions2, wxID_ANY, wxDefaultPosition, wxDefaultSize, 1, chActor_choices);
    tcActor2 = new wxTextCtrl(nbConditions2, wxID_ANY, wxEmptyString);
    btnActor = new wxButton(nbConditions2, wxID_ANY, _("..."), wxDefaultPosition, wxDefaultSize, wxBU_EXACTFIT);
    rbtnGroup = new wxRadioButton(nbConditions2, wxID_ANY, _("Group"));
    const wxString chGroup_choices[] = {
        _("<set by wxGlade>"),
    };
    chGroup = new wxChoice(nbConditions2, wxID_ANY, wxDefaultPosition, wxDefaultSize, 1, chGroup_choices);
    stGroup = new wxStaticText(nbConditions2, wxID_ANY, _(":"));
    const wxString chGroup2_choices[] = {
        _("<set by wxGlade>"),
    };
    chGroup2 = new wxChoice(nbConditions2, wxID_ANY, wxDefaultPosition, wxDefaultSize, 1, chGroup2_choices);
    stGroup2 = new wxStaticText(nbConditions2, wxID_ANY, _("direction"));
    rbtnVehicle = new wxRadioButton(nbConditions2, wxID_ANY, _("Vehicle"));
    const wxString chVehicle_choices[] = {
        _("<set by wxGlade>"),
    };
    chVehicle = new wxChoice(nbConditions2, wxID_ANY, wxDefaultPosition, wxDefaultSize, 1, chVehicle_choices);
    stVehicle = new wxStaticText(nbConditions2, wxID_ANY, _("boarded"));
    rbtnKey = new wxRadioButton(nbConditions2, wxID_ANY, _("Pressed decision key"));
    rbtnMusic = new wxRadioButton(nbConditions2, wxID_ANY, _("Playing music"));
    chbElse = new wxCheckBox(this, wxID_ANY, _("Exception if conditions are insatisfied"));
    btnOK = new wxButton(this, wxID_OK, wxEmptyString);
    btnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    btnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DialogEvtCmdConditions::set_properties()
{
    // begin wxGlade: DialogEvtCmdConditions::set_properties
    SetTitle(_("Conditions"));
    tcSwitch->SetMinSize(wxSize(100, -1));
    chSwitch->SetMinSize(wxSize(90, -1));
    chSwitch->SetSelection(0);
    tcVariable->SetMinSize(wxSize(100, -1));
    spinVariableFiexd->SetMinSize(wxSize(50, -1));
    tcVariableVariable->SetMinSize(wxSize(50, -1));
    chVariable->SetMinSize(wxSize(50, -1));
    chVariable->SetSelection(0);
    spinTimerMinutes->SetMinSize(wxSize(50, -1));
    spinTimerSeconds->SetMinSize(wxSize(50, -1));
    chTimer->SetMinSize(wxSize(50, -1));
    chTimer->SetSelection(0);
    spinMoney->SetMinSize(wxSize(60, -1));
    chMoney->SetMinSize(wxSize(50, -1));
    chMoney->SetSelection(0);
    chItem->SetMinSize(wxSize(50, -1));
    chItem->SetSelection(0);
    chItem2->SetMinSize(wxSize(90, -1));
    chItem2->SetSelection(0);
    chActor->SetMinSize(wxSize(50, -1));
    chActor->SetSelection(0);
    tcActor2->SetMinSize(wxSize(50, -1));
    chGroup->SetMinSize(wxSize(50, -1));
    chGroup->SetSelection(0);
    chGroup2->SetMinSize(wxSize(90, -1));
    chGroup2->SetSelection(0);
    chVehicle->SetMinSize(wxSize(90, -1));
    chVehicle->SetSelection(0);
    btnOK->SetDefault();
    // end wxGlade
}


void DialogEvtCmdConditions::do_layout()
{
    // begin wxGlade: DialogEvtCmdConditions::do_layout
    wxBoxSizer* szConditions = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* szBottom = new wxBoxSizer(wxHORIZONTAL);
    szOptions_staticbox->Lower();
    wxStaticBoxSizer* szOptions = new wxStaticBoxSizer(szOptions_staticbox, wxHORIZONTAL);
    szConditionsTop_staticbox->Lower();
    wxStaticBoxSizer* szConditionsTop = new wxStaticBoxSizer(szConditionsTop_staticbox, wxHORIZONTAL);
    wxBoxSizer* szConditions2 = new wxBoxSizer(wxVERTICAL);
    wxFlexGridSizer* gszConditions2 = new wxFlexGridSizer(5, 2, 3, 2);
    wxBoxSizer* szVehicle = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* szGroup = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* szActor2 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* szActor = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* szItem = new wxBoxSizer(wxHORIZONTAL);
    wxFlexGridSizer* gszConditions1 = new wxFlexGridSizer(6, 2, 2, 2);
    wxBoxSizer* szMoney = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* szTimer = new wxBoxSizer(wxHORIZONTAL);
    wxFlexGridSizer* gszVariable = new wxFlexGridSizer(2, 2, 2, 2);
    wxBoxSizer* szVariableVariable = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* szVariable = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* szSwitch = new wxBoxSizer(wxHORIZONTAL);
    gszConditions1->Add(rbtnSwitch, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxTOP, 1);
    szSwitch->Add(tcSwitch, 1, wxALIGN_CENTER_VERTICAL, 0);
    szSwitch->Add(btnSwitch, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT, 1);
    szSwitch->Add(stSwitch, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 1);
    szSwitch->Add(chSwitch, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 1);
    gszConditions1->Add(szSwitch, 1, wxBOTTOM|wxEXPAND|wxTOP, 1);
    gszConditions1->Add(rbtnVariable, 0, wxALIGN_CENTER_VERTICAL|wxLEFT, 1);
    szVariable->Add(tcVariable, 1, wxALIGN_CENTER_VERTICAL, 0);
    szVariable->Add(btnVariable, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT, 1);
    szVariable->Add(stVariable, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 1);
    szVariable->Add(90, 0, 0, wxEXPAND|wxLEFT|wxRIGHT, 1);
    gszConditions1->Add(szVariable, 1, wxEXPAND|wxTOP, 1);
    gszConditions1->Add(0, 0, 1, wxEXPAND, 0);
    gszVariable->Add(rbtnVariableFixed, 0, wxALIGN_CENTER_VERTICAL, 0);
    gszVariable->Add(spinVariableFiexd, 1, wxALIGN_CENTER_VERTICAL|wxEXPAND, 1);
    gszVariable->Add(rbtnVariableVariable, 0, wxALIGN_CENTER_VERTICAL, 0);
    szVariableVariable->Add(tcVariableVariable, 1, wxALIGN_CENTER_VERTICAL, 0);
    szVariableVariable->Add(btnVariableVariable, 0, wxALIGN_CENTER_VERTICAL, 0);
    gszVariable->Add(szVariableVariable, 1, wxEXPAND, 0);
    gszVariable->AddGrowableCol(1);
    gszConditions1->Add(gszVariable, 1, wxALL|wxEXPAND, 1);
    gszConditions1->Add(0, 0, 1, wxEXPAND, 0);
    gszConditions1->Add(chVariable, 0, wxALIGN_CENTER_VERTICAL|wxBOTTOM|wxEXPAND|wxRIGHT|wxTOP, 1);
    gszConditions1->Add(rbtnTimer, 0, wxALIGN_CENTER_VERTICAL|wxLEFT, 1);
    szTimer->Add(spinTimerMinutes, 0, wxALIGN_CENTER_VERTICAL|wxRIGHT, 1);
    szTimer->Add(stTimerMinutes, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 1);
    szTimer->Add(spinTimerSeconds, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 1);
    szTimer->Add(stTimerSeconds, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 1);
    szTimer->Add(chTimer, 1, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 1);
    gszConditions1->Add(szTimer, 1, wxBOTTOM|wxEXPAND|wxTOP, 1);
    gszConditions1->Add(rbtnMoney, 0, wxALIGN_CENTER_VERTICAL|wxBOTTOM|wxLEFT, 1);
    szMoney->Add(spinMoney, 0, wxBOTTOM|wxRIGHT, 1);
    szMoney->Add(chMoney, 3, wxALIGN_CENTER_VERTICAL|wxBOTTOM|wxLEFT|wxRIGHT, 1);
    gszConditions1->Add(szMoney, 1, wxBOTTOM|wxEXPAND|wxTOP, 1);
    pnConditions1->SetSizer(gszConditions1);
    gszConditions1->AddGrowableCol(1);
    gszConditions2->Add(rbtnItem, 0, wxALIGN_CENTER_VERTICAL, 0);
    szItem->Add(chItem, 1, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 1);
    szItem->Add(chItem2, 0, wxALIGN_CENTER_VERTICAL|wxLEFT, 1);
    gszConditions2->Add(szItem, 1, wxEXPAND, 0);
    gszConditions2->Add(rbtnoActor, 0, wxALIGN_CENTER_VERTICAL, 0);
    szActor->Add(chActor, 1, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 1);
    szActor->Add(90, 0, 0, wxEXPAND, 0);
    gszConditions2->Add(szActor, 1, wxEXPAND, 0);
    gszConditions2->Add(0, 0, 1, wxEXPAND, 0);
    szActor2->Add(tcActor2, 1, wxALIGN_CENTER_VERTICAL|wxLEFT, 1);
    szActor2->Add(btnActor, 0, wxALIGN_CENTER_VERTICAL, 0);
    gszConditions2->Add(szActor2, 1, wxEXPAND, 0);
    gszConditions2->Add(rbtnGroup, 0, wxALIGN_CENTER_VERTICAL, 0);
    szGroup->Add(chGroup, 1, wxALIGN_CENTER_VERTICAL|wxEXPAND|wxLEFT|wxRIGHT, 1);
    szGroup->Add(stGroup, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 1);
    szGroup->Add(chGroup2, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 1);
    szGroup->Add(stGroup2, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 1);
    gszConditions2->Add(szGroup, 1, wxEXPAND, 0);
    gszConditions2->Add(rbtnVehicle, 0, wxALIGN_CENTER_VERTICAL, 0);
    szVehicle->Add(chVehicle, 0, wxLEFT|wxRIGHT, 1);
    szVehicle->Add(stVehicle, 0, wxALIGN_CENTER_VERTICAL|wxLEFT|wxRIGHT, 1);
    gszConditions2->Add(szVehicle, 1, wxEXPAND, 0);
    gszConditions2->AddGrowableCol(1);
    szConditions2->Add(gszConditions2, 0, wxALL|wxEXPAND, 1);
    szConditions2->Add(rbtnKey, 0, wxALIGN_CENTER_VERTICAL|wxALL|wxEXPAND, 1);
    szConditions2->Add(rbtnMusic, 0, wxALIGN_CENTER_VERTICAL|wxALL|wxEXPAND, 1);
    nbConditions2->SetSizer(szConditions2);
    nbConditions->AddPage(pnConditions1, _("1"));
    nbConditions->AddPage(nbConditions2, _("2"));
    szConditionsTop->Add(nbConditions, 1, wxEXPAND, 0);
    szConditions->Add(szConditionsTop, 0, wxEXPAND|wxLEFT|wxRIGHT, 1);
    szOptions->Add(chbElse, 0, 0, 0);
    szConditions->Add(szOptions, 0, wxBOTTOM|wxEXPAND|wxLEFT|wxRIGHT, 1);
    szBottom->Add(btnOK, 0, wxALIGN_BOTTOM|wxALL, 1);
    szBottom->Add(btnCancel, 0, wxALIGN_BOTTOM|wxALL, 1);
    szBottom->Add(btnHelp, 0, wxALIGN_BOTTOM|wxALL, 1);
    szConditions->Add(szBottom, 1, wxALIGN_RIGHT|wxBOTTOM|wxRIGHT, 3);
    SetSizer(szConditions);
    szConditions->Fit(this);
    Layout();
    // end wxGlade
}

