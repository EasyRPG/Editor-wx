// -*- C++ -*- generated by wxGlade 0.6.1 on Wed Dec  5 22:26:15 2007

#include "easyrpg.h"

// begin wxGlade: ::extracode
// end wxGlade



EasyRPGDialogDatabase::EasyRPGDialogDatabase(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogDatabase::EasyRPGDialogDatabase
    EasyRPGDatabaseNotebook = new wxNotebook(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0);
    EasyRPGNoteBookCommonEvents = new wxPanel(EasyRPGDatabaseNotebook, wxID_ANY);
    EasyRPGNotebookSystem = new wxPanel(EasyRPGDatabaseNotebook, wxID_ANY);
    EasyRPGNotebookText = new wxPanel(EasyRPGDatabaseNotebook, wxID_ANY);
    notebook_2 = new wxNotebook(EasyRPGNotebookText, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0);
    notebook_2_pane_5 = new wxPanel(notebook_2, wxID_ANY);
    notebook_2_pane_4 = new wxPanel(notebook_2, wxID_ANY);
    notebook_2_pane_3 = new wxPanel(notebook_2, wxID_ANY);
    notebook_2_pane_2 = new wxPanel(notebook_2, wxID_ANY);
    notebook_2_pane_1 = new wxPanel(notebook_2, wxID_ANY);
    EasyRPGNotebookTilesets = new wxPanel(EasyRPGDatabaseNotebook, wxID_ANY);
    notebook_4 = new wxNotebook(EasyRPGNotebookTilesets, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0);
    notebook_4_pane_2 = new wxPanel(notebook_4, wxID_ANY);
    notebook_4_pane_1 = new wxPanel(notebook_4, wxID_ANY);
    EasyRPGNotebookTerrains = new wxPanel(EasyRPGDatabaseNotebook, wxID_ANY);
    EasyRPGNotebookAnimations = new wxPanel(EasyRPGDatabaseNotebook, wxID_ANY);
    EasyRPGNotebookStates = new wxPanel(EasyRPGDatabaseNotebook, wxID_ANY);
    EasyRPGNotebookArmors = new wxPanel(EasyRPGDatabaseNotebook, wxID_ANY);
    EasyRPGNotebookTroops = new wxPanel(EasyRPGDatabaseNotebook, wxID_ANY);
    notebook_3 = new wxNotebook(EasyRPGNotebookTroops, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0);
    notebook_3_pane_1 = new wxPanel(notebook_3, wxID_ANY);
    EasyRPGNotebookEnemies = new wxPanel(EasyRPGDatabaseNotebook, wxID_ANY);
    EasyRPGNotebookItems = new wxPanel(EasyRPGDatabaseNotebook, wxID_ANY);
    EasyRPGNotebookSkills = new wxPanel(EasyRPGDatabaseNotebook, wxID_ANY);
    EasyRPGNotebookActors = new wxPanel(EasyRPGDatabaseNotebook, wxID_ANY);
    sizer_23_staticbox = new wxStaticBox(EasyRPGNotebookActors, -1, _("Title"));
    sizer_13_staticbox = new wxStaticBox(EasyRPGNotebookActors, -1, _("Walking graphic"));
    sizer_14_staticbox = new wxStaticBox(EasyRPGNotebookActors, -1, _("Startup level"));
    sizer_15_staticbox = new wxStaticBox(EasyRPGNotebookActors, -1, _("Max level"));
    sizer_16_staticbox = new wxStaticBox(EasyRPGNotebookActors, -1, _("Critical hit rate"));
    sizer_2_staticbox = new wxStaticBox(EasyRPGNotebookActors, -1, _("Startup equipment"));
    sizer_25_staticbox = new wxStaticBox(EasyRPGNotebookActors, -1, _("Face graphic"));
    sizer_26_staticbox = new wxStaticBox(EasyRPGNotebookActors, -1, _("Options"));
    sizer_178_staticbox = new wxStaticBox(EasyRPGNotebookActors, -1, _("Max HP"));
    sizer_179_staticbox = new wxStaticBox(EasyRPGNotebookActors, -1, _("Max MP"));
    sizer_180_staticbox = new wxStaticBox(EasyRPGNotebookActors, -1, _("Attack"));
    sizer_181_staticbox = new wxStaticBox(EasyRPGNotebookActors, -1, _("Defense"));
    sizer_182_staticbox = new wxStaticBox(EasyRPGNotebookActors, -1, _("Intelligence"));
    sizer_183_staticbox = new wxStaticBox(EasyRPGNotebookActors, -1, _("Agility"));
    sizer_18_staticbox = new wxStaticBox(EasyRPGNotebookActors, -1, _("Capacity curves"));
    sizer_8_staticbox = new wxStaticBox(EasyRPGNotebookActors, -1, _("Experience curve"));
    sizer_9_staticbox = new wxStaticBox(EasyRPGNotebookActors, -1, _("Animation without weapons"));
    sizer_10_staticbox = new wxStaticBox(EasyRPGNotebookActors, -1, _("Skills"));
    sizer_20_staticbox = new wxStaticBox(EasyRPGNotebookActors, -1, _("States rate"));
    sizer_21_staticbox = new wxStaticBox(EasyRPGNotebookActors, -1, _("Armors rate"));
    sizer_114_staticbox = new wxStaticBox(EasyRPGNotebookSkills, -1, _("Name"));
    sizer_115_staticbox = new wxStaticBox(EasyRPGNotebookSkills, -1, _("Type"));
    sizer_116_staticbox = new wxStaticBox(EasyRPGNotebookSkills, -1, _("MP usage"));
    sizer_107_staticbox = new wxStaticBox(EasyRPGNotebookSkills, -1, _("Description"));
    sizer_108_staticbox = new wxStaticBox(EasyRPGNotebookSkills, -1, _("Ratio"));
    sizer_112_staticbox = new wxStaticBox(EasyRPGNotebookSkills, -1, _("Cast message"));
    sizer_113_staticbox = new wxStaticBox(EasyRPGNotebookSkills, -1, _("Fail message"));
    sizer_111_staticbox = new wxStaticBox(EasyRPGNotebookSkills, -1, _("Animation"));
    sizer_118_staticbox = new wxStaticBox(EasyRPGNotebookSkills, -1, _("Attack influence"));
    sizer_119_staticbox = new wxStaticBox(EasyRPGNotebookSkills, -1, _("Magic influence"));
    sizer_120_staticbox = new wxStaticBox(EasyRPGNotebookSkills, -1, _("Variancy"));
    sizer_121_staticbox = new wxStaticBox(EasyRPGNotebookSkills, -1, _("Effect rate"));
    sizer_123_staticbox = new wxStaticBox(EasyRPGNotebookSkills, -1, _("Affect Capacities"));
    sizer_122_staticbox = new wxStaticBox(EasyRPGNotebookSkills, -1, _("Success rate"));
    sizer_124_staticbox = new wxStaticBox(EasyRPGNotebookSkills, -1, _("Change states"));
    sizer_110_staticbox = new wxStaticBox(EasyRPGNotebookSkills, -1, _("Armors"));
    sizer_131_staticbox = new wxStaticBox(EasyRPGNotebookItems, -1, _("Name"));
    sizer_132_staticbox = new wxStaticBox(EasyRPGNotebookItems, -1, _("Type"));
    sizer_133_staticbox = new wxStaticBox(EasyRPGNotebookItems, -1, _("Cost"));
    sizer_134_staticbox = new wxStaticBox(EasyRPGNotebookItems, -1, _("Times used"));
    sizer_135_staticbox = new wxStaticBox(EasyRPGNotebookItems, -1, _("Description"));
    sizer_136_staticbox = new wxStaticBox(EasyRPGNotebookItems, -1, _("Can be used by"));
    sizer_137_staticbox = new wxStaticBox(EasyRPGNotebookItems, -1, _("Change states"));
    sizer_141_staticbox = new wxStaticBox(EasyRPGNotebookItems, -1, _("HP recover"));
    sizer_142_staticbox = new wxStaticBox(EasyRPGNotebookItems, -1, _("MP recover"));
    sizer_143_staticbox = new wxStaticBox(EasyRPGNotebookItems, -1, _("Options"));
    sizer_151_staticbox = new wxStaticBox(EasyRPGNotebookEnemies, -1, _("Name"));
    sizer_153_staticbox = new wxStaticBox(EasyRPGNotebookEnemies, -1, _("Max HP"));
    sizer_155_staticbox = new wxStaticBox(EasyRPGNotebookEnemies, -1, _("Attack"));
    sizer_157_staticbox = new wxStaticBox(EasyRPGNotebookEnemies, -1, _("Intelligence"));
    sizer_154_staticbox = new wxStaticBox(EasyRPGNotebookEnemies, -1, _("Max MP"));
    sizer_156_staticbox = new wxStaticBox(EasyRPGNotebookEnemies, -1, _("Defence"));
    sizer_158_staticbox = new wxStaticBox(EasyRPGNotebookEnemies, -1, _("Agility"));
    sizer_152_staticbox = new wxStaticBox(EasyRPGNotebookEnemies, -1, _("Parameters"));
    sizer_159_staticbox = new wxStaticBox(EasyRPGNotebookEnemies, -1, _("Enemy graphic"));
    sizer_171_staticbox = new wxStaticBox(EasyRPGNotebookEnemies, -1, _("Get EXP"));
    sizer_172_staticbox = new wxStaticBox(EasyRPGNotebookEnemies, -1, _("Get money"));
    sizer_173_staticbox = new wxStaticBox(EasyRPGNotebookEnemies, -1, _("Get item"));
    sizer_174_staticbox = new wxStaticBox(EasyRPGNotebookEnemies, -1, _("Get item chance"));
    sizer_168_staticbox = new wxStaticBox(EasyRPGNotebookEnemies, -1, _("On success"));
    sizer_162_staticbox = new wxStaticBox(EasyRPGNotebookEnemies, -1, _("Critical hit rate"));
    sizer_163_staticbox = new wxStaticBox(EasyRPGNotebookEnemies, -1, _("Options"));
    sizer_166_staticbox = new wxStaticBox(EasyRPGNotebookEnemies, -1, _("Actions"));
    sizer_164_staticbox = new wxStaticBox(EasyRPGNotebookEnemies, -1, _("Armors influence"));
    sizer_165_staticbox = new wxStaticBox(EasyRPGNotebookEnemies, -1, _("States influence"));
    sizer_177_staticbox = new wxStaticBox(EasyRPGNotebookTroops, -1, _("Name"));
    sizer_28_staticbox = new wxStaticBox(EasyRPGNotebookTroops, -1, _("Encounters on"));
    sizer_29_staticbox = new wxStaticBox(EasyRPGNotebookTroops, -1, _("Battle events"));
    sizer_185_staticbox = new wxStaticBox(EasyRPGNotebookArmors, -1, _("Name"));
    sizer_49_staticbox = new wxStaticBox(EasyRPGNotebookArmors, -1, _("Effect rate"));
    sizer_190_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("Name"));
    sizer_191_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("Type"));
    sizer_192_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("Colour"));
    sizer_193_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("Priority"));
    sizer_194_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("Action range"));
    sizer_49_copy_1_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("Effect Rate"));
    sizer_221_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("Natural healing"));
    sizer_206_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("After hit healing"));
    sizer_201_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("Heal method"));
    sizer_209_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("Decrease capacities"));
    sizer_212_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("Attack chance"));
    sizer_198_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("Skill exceptions"));
    sizer_217_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("Actor hit"));
    sizer_217_copy_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("Enemy hit"));
    sizer_217_copy_1_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("Message if already in this state"));
    sizer_217_copy_2_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("Normal state by one"));
    sizer_217_copy_3_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("Recover message"));
    sizer_204_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("HP reduction in every torn"));
    sizer_205_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("HP reduction on move"));
    sizer_202_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("HP reduction"));
    sizer_213_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("MP reduction in every torn"));
    sizer_214_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("MP reduction on move"));
    sizer_203_staticbox = new wxStaticBox(EasyRPGNotebookStates, -1, _("MP reduction"));
    sizer_218_staticbox = new wxStaticBox(EasyRPGNotebookAnimations, -1, _("Name"));
    sizer_219_staticbox = new wxStaticBox(EasyRPGNotebookAnimations, -1, _("Animation graphic"));
    sizer_220_staticbox = new wxStaticBox(EasyRPGNotebookAnimations, -1, _("Enemy target (for testing)"));
    sizer_226_staticbox = new wxStaticBox(EasyRPGNotebookAnimations, -1, _("# of frames"));
    sizer_227_staticbox = new wxStaticBox(EasyRPGNotebookAnimations, -1, _("Frames"));
    sizer_228_staticbox = new wxStaticBox(EasyRPGNotebookAnimations, -1, _("Sounds, shaking and blinking timing"));
    sizer_229_staticbox = new wxStaticBox(EasyRPGNotebookAnimations, -1, _("Range"));
    sizer_230_staticbox = new wxStaticBox(EasyRPGNotebookAnimations, -1, _("Y ordinate"));
    sizer_233_staticbox = new wxStaticBox(EasyRPGNotebookTerrains, -1, _("Name"));
    sizer_234_staticbox = new wxStaticBox(EasyRPGNotebookTerrains, -1, _("Damage"));
    sizer_235_staticbox = new wxStaticBox(EasyRPGNotebookTerrains, -1, _("% appearance"));
    sizer_236_staticbox = new wxStaticBox(EasyRPGNotebookTerrains, -1, _("Battle background graphic"));
    sizer_239_staticbox = new wxStaticBox(EasyRPGNotebookTerrains, -1, _("Vehicle permissions"));
    sizer_242_staticbox = new wxStaticBox(EasyRPGNotebookTilesets, -1, _("Name"));
    sizer_243_staticbox = new wxStaticBox(EasyRPGNotebookTilesets, -1, _("Tileset grahic"));
    sizer_247_staticbox = new wxStaticBox(notebook_4_pane_1, -1, _("Modify"));
    sizer_248_staticbox = new wxStaticBox(notebook_4_pane_1, -1, _("Water animation"));
    sizer_249_staticbox = new wxStaticBox(notebook_4_pane_1, -1, _("Terrain"));
    sizer_250_staticbox = new wxStaticBox(notebook_4_pane_2, -1, _("Modify"));
    sizer_257_staticbox = new wxStaticBox(notebook_2_pane_1, -1, _("Start battle"));
    sizer_257_copy_10_staticbox = new wxStaticBox(notebook_2_pane_1, -1, _("Priority attack"));
    sizer_257_copy_10_copy_staticbox = new wxStaticBox(notebook_2_pane_1, -1, _("Successful escape"));
    sizer_257_copy_10_copy_1_staticbox = new wxStaticBox(notebook_2_pane_1, -1, _("Failed escape"));
    sizer_257_copy_10_copy_2_staticbox = new wxStaticBox(notebook_2_pane_1, -1, _("Victory"));
    sizer_257_copy_10_copy_3_staticbox = new wxStaticBox(notebook_2_pane_1, -1, _("Dead group"));
    sizer_257_copy_1_staticbox = new wxStaticBox(notebook_2_pane_1, -1, _("Experience"));
    sizer_257_copy_9_staticbox = new wxStaticBox(notebook_2_pane_1, -1, _("Obtained money"));
    sizer_257_copy_2_staticbox = new wxStaticBox(notebook_2_pane_1, -1, _("Obtained object"));
    sizer_256_staticbox = new wxStaticBox(notebook_2_pane_1, -1, _("Battle messages 1"));
    sizer_257_copy_staticbox = new wxStaticBox(notebook_2_pane_1, -1, _("Normal attack"));
    sizer_257_copy_10_copy_4_staticbox = new wxStaticBox(notebook_2_pane_1, -1, _("Actor death"));
    sizer_257_copy_10_copy_5_staticbox = new wxStaticBox(notebook_2_pane_1, -1, _("Enemy death"));
    sizer_257_copy_3_staticbox = new wxStaticBox(notebook_2_pane_1, -1, _("Defense"));
    sizer_257_copy_4_staticbox = new wxStaticBox(notebook_2_pane_1, -1, _("State control"));
    sizer_257_copy_5_staticbox = new wxStaticBox(notebook_2_pane_1, -1, _("Strength gain"));
    sizer_257_copy_6_staticbox = new wxStaticBox(notebook_2_pane_1, -1, _("Autodestruction"));
    sizer_257_copy_7_staticbox = new wxStaticBox(notebook_2_pane_1, -1, _("Enemy escape"));
    sizer_257_copy_8_staticbox = new wxStaticBox(notebook_2_pane_1, -1, _("Transformation"));
    sizer_256_copy_staticbox = new wxStaticBox(notebook_2_pane_1, -1, _("Battle messages 2"));
    sizer_257_copy_11_staticbox = new wxStaticBox(notebook_2_pane_2, -1, _("Actor attack"));
    sizer_257_copy_12_staticbox = new wxStaticBox(notebook_2_pane_2, -1, _("Failed actor attack"));
    sizer_257_copy_13_staticbox = new wxStaticBox(notebook_2_pane_2, -1, _("Enemy attack"));
    sizer_257_copy_14_staticbox = new wxStaticBox(notebook_2_pane_2, -1, _("Failed enemy attack"));
    sizer_257_copy_15_staticbox = new wxStaticBox(notebook_2_pane_2, -1, _("Failed skill A"));
    sizer_257_copy_17_staticbox = new wxStaticBox(notebook_2_pane_2, -1, _("Failed skill B"));
    sizer_257_copy_16_staticbox = new wxStaticBox(notebook_2_pane_2, -1, _("Failed skill C"));
    sizer_257_copy_18_staticbox = new wxStaticBox(notebook_2_pane_2, -1, _("Evade physical attack"));
    sizer_257_copy_19_staticbox = new wxStaticBox(notebook_2_pane_2, -1, _("Use item"));
    sizer_256_copy_1_staticbox = new wxStaticBox(notebook_2_pane_2, -1, _("Battle messages 3"));
    sizer_257_copy_20_staticbox = new wxStaticBox(notebook_2_pane_2, -1, _("Recover HP"));
    sizer_257_copy_21_staticbox = new wxStaticBox(notebook_2_pane_2, -1, _("Parameter up"));
    sizer_257_copy_22_staticbox = new wxStaticBox(notebook_2_pane_2, -1, _("Parameter down"));
    sizer_257_copy_23_staticbox = new wxStaticBox(notebook_2_pane_2, -1, _("Parameter absorption (allied)"));
    sizer_257_copy_24_staticbox = new wxStaticBox(notebook_2_pane_2, -1, _("Parameter absorption (enemy)"));
    sizer_257_copy_25_staticbox = new wxStaticBox(notebook_2_pane_2, -1, _("Defense up"));
    sizer_257_copy_26_staticbox = new wxStaticBox(notebook_2_pane_2, -1, _("Defense down"));
    sizer_257_copy_27_staticbox = new wxStaticBox(notebook_2_pane_2, -1, _("Level up"));
    sizer_257_copy_28_staticbox = new wxStaticBox(notebook_2_pane_2, -1, _("Learn skill"));
    sizer_256_copy_2_staticbox = new wxStaticBox(notebook_2_pane_2, -1, _("Battle messages 4"));
    sizer_257_copy_10_copy_6_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Buy selection"));
    sizer_257_copy_10_copy_7_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Buy selection (second time and later)"));
    sizer_257_copy_10_copy_7_copy_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Buy"));
    sizer_257_copy_10_copy_7_copy_1_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Sell"));
    sizer_257_copy_10_copy_7_copy_2_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Exit"));
    sizer_257_copy_10_copy_8_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Item to buy selection"));
    sizer_257_copy_10_copy_9_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Item to buy number selection"));
    sizer_257_copy_10_copy_10_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Buy completed"));
    sizer_257_copy_10_copy_11_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Item to sell selection"));
    sizer_257_copy_10_copy_12_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Item to sell number selection"));
    sizer_257_copy_10_copy_13_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Sell completed"));
    sizer_256_copy_3_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Commerce messages type A"));
    sizer_257_copy_10_copy_6_copy_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Buy selection"));
    sizer_257_copy_10_copy_7_copy_3_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Buy selection (second time and later)"));
    sizer_257_copy_10_copy_7_copy_copy_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Buy"));
    sizer_257_copy_10_copy_7_copy_1_copy_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Sell"));
    sizer_257_copy_10_copy_7_copy_2_copy_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Exit"));
    sizer_257_copy_10_copy_8_copy_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Item to buy selection"));
    sizer_257_copy_10_copy_9_copy_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Item to buy number selection"));
    sizer_257_copy_10_copy_10_copy_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Buy completed"));
    sizer_257_copy_10_copy_11_copy_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Item to sell selection"));
    sizer_257_copy_10_copy_12_copy_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Item to sell number selection"));
    sizer_257_copy_10_copy_13_copy_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Sell completed"));
    sizer_256_copy_3_copy_staticbox = new wxStaticBox(notebook_2_pane_3, -1, _("Commerce messages type B"));
    sizer_257_copy_10_copy_6_copy_1_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Buy selection"));
    sizer_257_copy_10_copy_7_copy_4_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Buy selection (second time and later)"));
    sizer_257_copy_10_copy_7_copy_copy_1_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Buy"));
    sizer_257_copy_10_copy_7_copy_1_copy_1_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Sell"));
    sizer_257_copy_10_copy_7_copy_2_copy_1_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Exit"));
    sizer_257_copy_10_copy_8_copy_1_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Item to buy selection"));
    sizer_257_copy_10_copy_9_copy_1_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Item to buy number selection"));
    sizer_257_copy_10_copy_10_copy_1_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Buy completed"));
    sizer_257_copy_10_copy_11_copy_1_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Item to sell selection"));
    sizer_257_copy_10_copy_12_copy_1_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Item to sell number selection"));
    sizer_257_copy_10_copy_13_copy_1_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Sell completed"));
    sizer_256_copy_3_copy_1_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Commerce messages type C"));
    sizer_276_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Selected inn"));
    sizer_257_copy_10_copy_7_copy_6_copy_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Stay"));
    sizer_257_copy_10_copy_7_copy_6_copy_1_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Don't stay"));
    sizer_274_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Inn messages type A"));
    sizer_276_copy_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Selected inn"));
    sizer_257_copy_10_copy_7_copy_6_copy_copy_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Stay"));
    sizer_257_copy_10_copy_7_copy_6_copy_1_copy_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Don't stay"));
    sizer_274_copy_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Inn messages type B"));
    sizer_257_copy_10_copy_7_copy_6_copy_2_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Possessed items"));
    sizer_257_copy_10_copy_7_copy_6_copy_3_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Equipped items"));
    sizer_257_copy_10_copy_7_copy_6_copy_4_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Currency"));
    sizer_262_staticbox = new wxStaticBox(notebook_2_pane_4, -1, _("Commerce vocabulary"));
    sizer_257_copy_10_copy_30_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Level"));
    sizer_257_copy_10_copy_31_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Level (shorter)"));
    sizer_257_copy_10_copy_32_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("HP"));
    sizer_257_copy_10_copy_33_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("HP (shorter)"));
    sizer_257_copy_10_copy_34_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("MP"));
    sizer_257_copy_10_copy_35_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("MP (shorter)"));
    sizer_257_copy_10_copy_36_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Normal"));
    sizer_257_copy_10_copy_37_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("EXP (shorter)"));
    sizer_257_copy_10_copy_38_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("MP cost"));
    sizer_257_copy_10_copy_39_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Weapons"));
    sizer_257_copy_10_copy_40_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Attack"));
    sizer_257_copy_10_copy_41_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Shield"));
    sizer_257_copy_10_copy_42_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Defense"));
    sizer_257_copy_10_copy_43_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Armor"));
    sizer_257_copy_10_copy_44_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Intelligence"));
    sizer_257_copy_10_copy_45_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Helmet"));
    sizer_257_copy_10_copy_46_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Agility"));
    sizer_257_copy_10_copy_47_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Other"));
    sizer_263_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Armors, equipment, etc."));
    sizer_257_copy_10_copy_48_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Fight"));
    sizer_257_copy_10_copy_49_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Attack"));
    sizer_257_copy_10_copy_50_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Equipment"));
    sizer_257_copy_10_copy_51_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("New game"));
    sizer_257_copy_10_copy_52_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Automatic"));
    sizer_257_copy_10_copy_53_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Defense"));
    sizer_257_copy_10_copy_54_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Save"));
    sizer_257_copy_10_copy_55_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Load"));
    sizer_257_copy_10_copy_56_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Escape"));
    sizer_257_copy_10_copy_57_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Objects"));
    sizer_257_copy_10_copy_58_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Exit"));
    sizer_257_copy_10_copy_59_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("End"));
    sizer_257_copy_10_copy_60_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Skills"));
    sizer_265_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Commands"));
    sizer_257_copy_10_copy_61_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Save slot selection"));
    sizer_257_copy_10_copy_62_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Load slot selection"));
    sizer_257_copy_10_copy_63_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Confirm exit"));
    sizer_257_copy_10_copy_64_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("File"));
    sizer_257_copy_10_copy_65_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("OK"));
    sizer_257_copy_10_copy_66_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Cancel"));
    sizer_266_staticbox = new wxStaticBox(notebook_2_pane_5, -1, _("Save, load, exit"));
    sizer_285_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Small ship"));
    sizer_286_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Big ship"));
    sizer_287_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Aeroship"));
    sizer_271_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Vehicle graphic"));
    sizer_272_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Title graphic"));
    sizer_273_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Game over graphic"));
    sizer_288_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Actor 1"));
    sizer_288_copy_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Actor 2"));
    sizer_288_copy_1_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Actor 3"));
    sizer_288_copy_2_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Actor 4"));
    sizer_278_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Starting group"));
    sizer_219_copy_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Title"));
    sizer_219_copy_1_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Small ship"));
    sizer_219_copy_2_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Battle"));
    sizer_219_copy_3_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Big ship"));
    sizer_219_copy_4_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("victory"));
    sizer_219_copy_5_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Aeroship"));
    sizer_219_copy_6_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Inn"));
    sizer_219_copy_7_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Game over"));
    sizer_279_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("System music"));
    sizer_219_copy_8_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Cursor"));
    sizer_219_copy_9_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Start battle"));
    sizer_219_copy_10_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Actor damage"));
    sizer_219_copy_11_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("OK"));
    sizer_219_copy_12_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Escape"));
    sizer_219_copy_13_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Dodge"));
    sizer_219_copy_14_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Cancel"));
    sizer_219_copy_15_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Enemy attack"));
    sizer_219_copy_16_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Enemy death"));
    sizer_219_copy_17_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Error"));
    sizer_219_copy_18_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Enemy damage"));
    sizer_219_copy_19_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Use object"));
    sizer_280_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("System sound"));
    sizer_281_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("System graphic"));
    sizer_288_copy_3_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Erase screen"));
    sizer_288_copy_4_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Show screen"));
    sizer_282_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Transition type"));
    sizer_288_copy_5_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Erase screen"));
    sizer_288_copy_6_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Show screen"));
    sizer_283_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Start battle"));
    sizer_288_copy_7_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Erase screen"));
    sizer_288_copy_8_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("Show screen"));
    sizer_284_staticbox = new wxStaticBox(EasyRPGNotebookSystem, -1, _("End battle"));
    sizer_291_staticbox = new wxStaticBox(EasyRPGNoteBookCommonEvents, -1, _("Name"));
    sizer_292_staticbox = new wxStaticBox(EasyRPGNoteBookCommonEvents, -1, _("Activation conditions"));
    sizer_293_staticbox = new wxStaticBox(EasyRPGNoteBookCommonEvents, -1, _("Condition event activation switch"));
    sizer_294_staticbox = new wxStaticBox(EasyRPGNoteBookCommonEvents, -1, _("Event execution contents"));
    sizer_22_staticbox = new wxStaticBox(EasyRPGNotebookActors, -1, _("Name"));
    EasyRPGActorsLabelActors = new wxStaticText(EasyRPGNotebookActors, wxID_ANY, _("Actors"), wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE);
    const wxString EasyRPGActorsListBoxActors_choices[] = {
        _("0001:Generic hero"),
        _("0002:OMFG LOL")
    };
    EasyRPGActorsListBoxActors = new wxListBox(EasyRPGNotebookActors, wxID_ANY, wxDefaultPosition, wxDefaultSize, 2, EasyRPGActorsListBoxActors_choices, 0);
    EasyRPGActorsButtonMaxNumber = new wxButton(EasyRPGNotebookActors, wxID_ANY, _("Max number..."));
    text_ctrl_3 = new wxTextCtrl(EasyRPGNotebookActors, wxID_ANY, wxEmptyString);
    text_ctrl_4 = new wxTextCtrl(EasyRPGNotebookActors, wxID_ANY, wxEmptyString);
    bitmap_1 = new wxStaticBitmap(EasyRPGNotebookActors, wxID_ANY, wxBitmap(wxT("chara.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    checkbox_3 = new wxCheckBox(EasyRPGNotebookActors, wxID_ANY, _("Translucent"));
    button_2 = new wxButton(EasyRPGNotebookActors, wxID_ANY, _("Select..."));
    spin_ctrl_1 = new wxSpinCtrl(EasyRPGNotebookActors, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    spin_ctrl_2 = new wxSpinCtrl(EasyRPGNotebookActors, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    checkbox_1 = new wxCheckBox(EasyRPGNotebookActors, wxID_ANY, _("1/"));
    spin_ctrl_3 = new wxSpinCtrl(EasyRPGNotebookActors, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_1 = new wxStaticText(EasyRPGNotebookActors, wxID_ANY, _("Weapon:"));
    const wxString choice_1_choices[] = {
        
    };
    choice_1 = new wxChoice(EasyRPGNotebookActors, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_1_choices, 0);
    label_2 = new wxStaticText(EasyRPGNotebookActors, wxID_ANY, _("Shield:"));
    const wxString choice_2_choices[] = {
        
    };
    choice_2 = new wxChoice(EasyRPGNotebookActors, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_2_choices, 0);
    label_3 = new wxStaticText(EasyRPGNotebookActors, wxID_ANY, _("Armor:"));
    const wxString choice_3_choices[] = {
        
    };
    choice_3 = new wxChoice(EasyRPGNotebookActors, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_3_choices, 0);
    label_4 = new wxStaticText(EasyRPGNotebookActors, wxID_ANY, _("Helmet:"));
    const wxString choice_4_choices[] = {
        
    };
    choice_4 = new wxChoice(EasyRPGNotebookActors, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_4_choices, 0);
    label_5 = new wxStaticText(EasyRPGNotebookActors, wxID_ANY, _("Accessory:"));
    const wxString choice_5_choices[] = {
        
    };
    choice_5 = new wxChoice(EasyRPGNotebookActors, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_5_choices, 0);
    bitmap_2 = new wxStaticBitmap(EasyRPGNotebookActors, wxID_ANY, wxBitmap(wxT("face.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    button_3 = new wxButton(EasyRPGNotebookActors, wxID_ANY, _("Select..."));
    checkbox_4 = new wxCheckBox(EasyRPGNotebookActors, wxID_ANY, _("2 swords mode"));
    checkbox_5 = new wxCheckBox(EasyRPGNotebookActors, wxID_ANY, _("Fixed equipment"));
    checkbox_6 = new wxCheckBox(EasyRPGNotebookActors, wxID_ANY, _("Controlled by AI"));
    checkbox_7 = new wxCheckBox(EasyRPGNotebookActors, wxID_ANY, _("Strong defense"));
    bitmap_14 = new wxStaticBitmap(EasyRPGNotebookActors, wxID_ANY, wxBitmap(wxT("curve.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    bitmap_14_copy = new wxStaticBitmap(EasyRPGNotebookActors, wxID_ANY, wxBitmap(wxT("curve.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    bitmap_14_copy_1 = new wxStaticBitmap(EasyRPGNotebookActors, wxID_ANY, wxBitmap(wxT("curve.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    bitmap_14_copy_2 = new wxStaticBitmap(EasyRPGNotebookActors, wxID_ANY, wxBitmap(wxT("curve.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    bitmap_14_copy_3 = new wxStaticBitmap(EasyRPGNotebookActors, wxID_ANY, wxBitmap(wxT("curve.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    bitmap_14_copy_4 = new wxStaticBitmap(EasyRPGNotebookActors, wxID_ANY, wxBitmap(wxT("curve.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    text_ctrl_1 = new wxTextCtrl(EasyRPGNotebookActors, wxID_ANY, wxEmptyString);
    button_1 = new wxButton(EasyRPGNotebookActors, wxID_ANY, _("Select..."));
    const wxString choice_6_choices[] = {
        
    };
    choice_6 = new wxChoice(EasyRPGNotebookActors, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_6_choices, 0);
    list_ctrl_1 = new wxListCtrl(EasyRPGNotebookActors, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLC_REPORT|wxSUNKEN_BORDER);
    checkbox_2 = new wxCheckBox(EasyRPGNotebookActors, wxID_ANY, _("Battle command:"));
    text_ctrl_2 = new wxTextCtrl(EasyRPGNotebookActors, wxID_ANY, wxEmptyString);
    const wxString list_box_1_choices[] = {
        
    };
    list_box_1 = new wxListBox(EasyRPGNotebookActors, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_1_choices, 0);
    const wxString list_box_2_choices[] = {
        
    };
    list_box_2 = new wxListBox(EasyRPGNotebookActors, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_2_choices, 0);
    label_25 = new wxStaticText(EasyRPGNotebookSkills, wxID_ANY, _("Skills"), wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE);
    const wxString list_box_7_choices[] = {
        
    };
    list_box_7 = new wxListBox(EasyRPGNotebookSkills, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_7_choices, 0);
    button_31 = new wxButton(EasyRPGNotebookSkills, wxID_ANY, _("Max number..."));
    text_ctrl_14 = new wxTextCtrl(EasyRPGNotebookSkills, wxID_ANY, wxEmptyString);
    const wxString choice_19_choices[] = {
        
    };
    choice_19 = new wxChoice(EasyRPGNotebookSkills, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_19_choices, 0);
    spin_ctrl_12 = new wxSpinCtrl(EasyRPGNotebookSkills, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    text_ctrl_12 = new wxTextCtrl(EasyRPGNotebookSkills, wxID_ANY, wxEmptyString);
    const wxString choice_17_choices[] = {
        
    };
    choice_17 = new wxChoice(EasyRPGNotebookSkills, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_17_choices, 0);
    label_26 = new wxStaticText(EasyRPGNotebookSkills, wxID_ANY, _("(Character name)"));
    text_ctrl_13 = new wxTextCtrl(EasyRPGNotebookSkills, wxID_ANY, wxEmptyString);
    text_ctrl_15 = new wxTextCtrl(EasyRPGNotebookSkills, wxID_ANY, wxEmptyString);
    button_32 = new wxButton(EasyRPGNotebookSkills, wxID_ANY, _("Cast"));
    button_33 = new wxButton(EasyRPGNotebookSkills, wxID_ANY, _("Throw"));
    button_34 = new wxButton(EasyRPGNotebookSkills, wxID_ANY, _("Use"));
    label_27 = new wxStaticText(EasyRPGNotebookSkills, wxID_ANY, _("(Character name)"));
    text_ctrl_16 = new wxTextCtrl(EasyRPGNotebookSkills, wxID_ANY, wxEmptyString);
    bitmap_11 = new wxStaticBitmap(EasyRPGNotebookSkills, wxID_ANY, wxBitmap(wxT("background.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    const wxString choice_18_choices[] = {
        
    };
    choice_18 = new wxChoice(EasyRPGNotebookSkills, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_18_choices, 0);
    slider_1 = new wxSlider(EasyRPGNotebookSkills, wxID_ANY, 0, 0, 10, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL|wxSL_AUTOTICKS|wxSL_LABELS);
    slider_6 = new wxSlider(EasyRPGNotebookSkills, wxID_ANY, 0, 0, 10, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL|wxSL_AUTOTICKS|wxSL_LABELS);
    slider_7 = new wxSlider(EasyRPGNotebookSkills, wxID_ANY, 0, 0, 10, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL|wxSL_AUTOTICKS|wxSL_LABELS);
    spin_ctrl_13 = new wxSpinCtrl(EasyRPGNotebookSkills, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    checkbox_10 = new wxCheckBox(EasyRPGNotebookSkills, wxID_ANY, _("HP"));
    checkbox_10_copy = new wxCheckBox(EasyRPGNotebookSkills, wxID_ANY, _("MP"));
    checkbox_10_copy_1 = new wxCheckBox(EasyRPGNotebookSkills, wxID_ANY, _("Attack"));
    checkbox_10_copy_2 = new wxCheckBox(EasyRPGNotebookSkills, wxID_ANY, _("Defense"));
    checkbox_10_copy_3 = new wxCheckBox(EasyRPGNotebookSkills, wxID_ANY, _("Intelligence"));
    checkbox_10_copy_4 = new wxCheckBox(EasyRPGNotebookSkills, wxID_ANY, _("Agility"));
    checkbox_10_copy_5 = new wxCheckBox(EasyRPGNotebookSkills, wxID_ANY, _("Take HP/MP"));
    checkbox_10_copy_6 = new wxCheckBox(EasyRPGNotebookSkills, wxID_ANY, _("Ignore defense"));
    spin_ctrl_14 = new wxSpinCtrl(EasyRPGNotebookSkills, wxID_ANY, wxT("100"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_28 = new wxStaticText(EasyRPGNotebookSkills, wxID_ANY, _("%"));
    const wxString list_box_8_choices[] = {
        
    };
    list_box_8 = new wxListBox(EasyRPGNotebookSkills, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_8_choices, 0);
    const wxString list_box_9_choices[] = {
        
    };
    list_box_9 = new wxListBox(EasyRPGNotebookSkills, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_9_choices, 0);
    checkbox_22 = new wxCheckBox(EasyRPGNotebookSkills, wxID_ANY, _("Defense up/down"));
    label_25_copy = new wxStaticText(EasyRPGNotebookItems, wxID_ANY, _("Items"), wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE);
    const wxString list_box_7_copy_choices[] = {
        
    };
    list_box_7_copy = new wxListBox(EasyRPGNotebookItems, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_7_copy_choices, 0);
    button_31_copy = new wxButton(EasyRPGNotebookItems, wxID_ANY, _("Max number..."));
    text_ctrl_17 = new wxTextCtrl(EasyRPGNotebookItems, wxID_ANY, wxEmptyString);
    const wxString choice_20_choices[] = {
        
    };
    choice_20 = new wxChoice(EasyRPGNotebookItems, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_20_choices, 0);
    spin_ctrl_15 = new wxSpinCtrl(EasyRPGNotebookItems, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    const wxString choice_21_choices[] = {
        
    };
    choice_21 = new wxChoice(EasyRPGNotebookItems, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_21_choices, 0);
    text_ctrl_18 = new wxTextCtrl(EasyRPGNotebookItems, wxID_ANY, wxEmptyString);
    const wxString radio_box_5_choices[] = {
        _("One character"),
        _("Whole group")
    };
    radio_box_5 = new wxRadioBox(EasyRPGNotebookItems, wxID_ANY, _("Action range"), wxDefaultPosition, wxDefaultSize, 2, radio_box_5_choices, 2, wxRA_SPECIFY_COLS);
    const wxString list_box_10_choices[] = {
        
    };
    list_box_10 = new wxListBox(EasyRPGNotebookItems, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_10_choices, 0);
    const wxString list_box_11_choices[] = {
        
    };
    list_box_11 = new wxListBox(EasyRPGNotebookItems, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_11_choices, 0);
    label_29 = new wxStaticText(EasyRPGNotebookItems, wxID_ANY, _("Max"));
    spin_ctrl_16 = new wxSpinCtrl(EasyRPGNotebookItems, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_30 = new wxStaticText(EasyRPGNotebookItems, wxID_ANY, _("% +"));
    spin_ctrl_17 = new wxSpinCtrl(EasyRPGNotebookItems, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_31 = new wxStaticText(EasyRPGNotebookItems, wxID_ANY, _("HP"));
    label_32 = new wxStaticText(EasyRPGNotebookItems, wxID_ANY, _("Max"));
    spin_ctrl_18 = new wxSpinCtrl(EasyRPGNotebookItems, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_33 = new wxStaticText(EasyRPGNotebookItems, wxID_ANY, _("% +"));
    spin_ctrl_19 = new wxSpinCtrl(EasyRPGNotebookItems, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_34 = new wxStaticText(EasyRPGNotebookItems, wxID_ANY, _("MP"));
    checkbox_23 = new wxCheckBox(EasyRPGNotebookItems, wxID_ANY, _("Disabled in battle"));
    checkbox_24 = new wxCheckBox(EasyRPGNotebookItems, wxID_ANY, _("Only suitable in fallen characters"));
    label_25_copy_copy = new wxStaticText(EasyRPGNotebookEnemies, wxID_ANY, _("Enemies"), wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE);
    const wxString list_box_7_copy_copy_choices[] = {
        
    };
    list_box_7_copy_copy = new wxListBox(EasyRPGNotebookEnemies, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_7_copy_copy_choices, 0);
    button_31_copy_copy = new wxButton(EasyRPGNotebookEnemies, wxID_ANY, _("Max number..."));
    text_ctrl_19 = new wxTextCtrl(EasyRPGNotebookEnemies, wxID_ANY, wxEmptyString);
    spin_ctrl_20 = new wxSpinCtrl(EasyRPGNotebookEnemies, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    spin_ctrl_20_copy = new wxSpinCtrl(EasyRPGNotebookEnemies, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    spin_ctrl_20_copy_1 = new wxSpinCtrl(EasyRPGNotebookEnemies, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    spin_ctrl_20_copy_2 = new wxSpinCtrl(EasyRPGNotebookEnemies, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    spin_ctrl_20_copy_3 = new wxSpinCtrl(EasyRPGNotebookEnemies, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    spin_ctrl_20_copy_4 = new wxSpinCtrl(EasyRPGNotebookEnemies, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    bitmap_12 = new wxStaticBitmap(EasyRPGNotebookEnemies, wxID_ANY, wxBitmap(wxT("background.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    checkbox_25 = new wxCheckBox(EasyRPGNotebookEnemies, wxID_ANY, _("Transparent"));
    checkbox_26 = new wxCheckBox(EasyRPGNotebookEnemies, wxID_ANY, _("Flying"));
    button_35 = new wxButton(EasyRPGNotebookEnemies, wxID_ANY, _("Select..."));
    spin_ctrl_22 = new wxSpinCtrl(EasyRPGNotebookEnemies, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    spin_ctrl_23 = new wxSpinCtrl(EasyRPGNotebookEnemies, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    const wxString choice_22_choices[] = {
        
    };
    choice_22 = new wxChoice(EasyRPGNotebookEnemies, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_22_choices, 0);
    spin_ctrl_24 = new wxSpinCtrl(EasyRPGNotebookEnemies, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_35 = new wxStaticText(EasyRPGNotebookEnemies, wxID_ANY, _("%"));
    checkbox_27 = new wxCheckBox(EasyRPGNotebookEnemies, wxID_ANY, _("1 /"));
    spin_ctrl_21 = new wxSpinCtrl(EasyRPGNotebookEnemies, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    checkbox_28 = new wxCheckBox(EasyRPGNotebookEnemies, wxID_ANY, _("Fails often"));
    list_ctrl_3 = new wxListCtrl(EasyRPGNotebookEnemies, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLC_REPORT|wxSUNKEN_BORDER);
    const wxString list_box_12_choices[] = {
        
    };
    list_box_12 = new wxListBox(EasyRPGNotebookEnemies, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_12_choices, 0);
    const wxString list_box_13_choices[] = {
        
    };
    list_box_13 = new wxListBox(EasyRPGNotebookEnemies, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_13_choices, 0);
    label_25_copy_copy_1 = new wxStaticText(EasyRPGNotebookTroops, wxID_ANY, _("Troops"), wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE);
    const wxString list_box_7_copy_copy_1_choices[] = {
        
    };
    list_box_7_copy_copy_1 = new wxListBox(EasyRPGNotebookTroops, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_7_copy_copy_1_choices, 0);
    button_31_copy_copy_1 = new wxButton(EasyRPGNotebookTroops, wxID_ANY, _("Max number..."));
    text_ctrl_20 = new wxTextCtrl(EasyRPGNotebookTroops, wxID_ANY, wxEmptyString);
    button_36 = new wxButton(EasyRPGNotebookTroops, wxID_ANY, _("Autocomplete"));
    button_37 = new wxButton(EasyRPGNotebookTroops, wxID_ANY, _("Test battle..."));
    button_38 = new wxButton(EasyRPGNotebookTroops, wxID_ANY, _("Change background..."));
    bitmap_13 = new wxStaticBitmap(EasyRPGNotebookTroops, wxID_ANY, wxBitmap(wxT("battle.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    button_39 = new wxButton(EasyRPGNotebookTroops, wxID_ANY, _("<Add"));
    button_39_copy = new wxButton(EasyRPGNotebookTroops, wxID_ANY, _("Remove"));
    button_39_copy_1 = new wxButton(EasyRPGNotebookTroops, wxID_ANY, _("Empty"));
    button_39_copy_2 = new wxButton(EasyRPGNotebookTroops, wxID_ANY, _("Align"));
    const wxString list_box_14_choices[] = {
        
    };
    list_box_14 = new wxListBox(EasyRPGNotebookTroops, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_14_choices, 0);
    const wxString list_box_15_choices[] = {
        
    };
    list_box_15 = new wxListBox(EasyRPGNotebookTroops, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_15_choices, 0);
    button_40 = new wxButton(EasyRPGNotebookTroops, wxID_ANY, _("New page"));
    button_40_copy = new wxButton(EasyRPGNotebookTroops, wxID_ANY, _("Copy"));
    button_40_copy_1 = new wxButton(EasyRPGNotebookTroops, wxID_ANY, _("Paste"));
    button_40_copy_2 = new wxButton(EasyRPGNotebookTroops, wxID_ANY, _("Delete"));
    label_6 = new wxStaticText(notebook_3_pane_1, wxID_ANY, _("Conditions"));
    text_ctrl_21 = new wxTextCtrl(notebook_3_pane_1, wxID_ANY, wxEmptyString);
    button_41 = new wxButton(notebook_3_pane_1, wxID_ANY, _("..."));
    const wxString list_box_16_choices[] = {
        
    };
    list_box_16 = new wxListBox(notebook_3_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_16_choices, 0);
    label_25_copy_copy_2 = new wxStaticText(EasyRPGNotebookArmors, wxID_ANY, _("Armors"), wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE);
    const wxString list_box_7_copy_copy_2_choices[] = {
        
    };
    list_box_7_copy_copy_2 = new wxListBox(EasyRPGNotebookArmors, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_7_copy_copy_2_choices, 0);
    button_31_copy_copy_2 = new wxButton(EasyRPGNotebookArmors, wxID_ANY, _("Max number..."));
    text_ctrl_22 = new wxTextCtrl(EasyRPGNotebookArmors, wxID_ANY, wxEmptyString);
    const wxString radio_box_6_choices[] = {
        _("Weapon attribute"),
        _("Magic attribute")
    };
    radio_box_6 = new wxRadioBox(EasyRPGNotebookArmors, wxID_ANY, _("Classification"), wxDefaultPosition, wxDefaultSize, 2, radio_box_6_choices, 1, wxRA_SPECIFY_COLS);
    label_7 = new wxStaticText(EasyRPGNotebookArmors, wxID_ANY, _("A"));
    spin_ctrl_7 = new wxSpinCtrl(EasyRPGNotebookArmors, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_7_copy_5 = new wxStaticText(EasyRPGNotebookArmors, wxID_ANY, _("%"));
    label_7_copy = new wxStaticText(EasyRPGNotebookArmors, wxID_ANY, _("B"));
    spin_ctrl_7_copy_1 = new wxSpinCtrl(EasyRPGNotebookArmors, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_7_copy_5_copy = new wxStaticText(EasyRPGNotebookArmors, wxID_ANY, _("%"));
    label_7_copy_1 = new wxStaticText(EasyRPGNotebookArmors, wxID_ANY, _("C"));
    spin_ctrl_7_copy_2 = new wxSpinCtrl(EasyRPGNotebookArmors, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_7_copy_5_copy_1 = new wxStaticText(EasyRPGNotebookArmors, wxID_ANY, _("%"));
    label_7_copy_2 = new wxStaticText(EasyRPGNotebookArmors, wxID_ANY, _("D"));
    spin_ctrl_7_copy_3 = new wxSpinCtrl(EasyRPGNotebookArmors, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_7_copy_5_copy_2 = new wxStaticText(EasyRPGNotebookArmors, wxID_ANY, _("%"));
    label_7_copy_3 = new wxStaticText(EasyRPGNotebookArmors, wxID_ANY, _("E"));
    spin_ctrl_7_copy_4 = new wxSpinCtrl(EasyRPGNotebookArmors, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_7_copy_5_copy_3 = new wxStaticText(EasyRPGNotebookArmors, wxID_ANY, _("%"));
    label_25_copy_copy_3 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("States"), wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE);
    const wxString list_box_7_copy_copy_3_choices[] = {
        
    };
    list_box_7_copy_copy_3 = new wxListBox(EasyRPGNotebookStates, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_7_copy_copy_3_choices, 0);
    button_31_copy_copy_3 = new wxButton(EasyRPGNotebookStates, wxID_ANY, _("Max Number..."));
    text_ctrl_23 = new wxTextCtrl(EasyRPGNotebookStates, wxID_ANY, wxEmptyString);
    const wxString choice_23_choices[] = {
        
    };
    choice_23 = new wxChoice(EasyRPGNotebookStates, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_23_choices, 0);
    const wxString choice_24_choices[] = {
        
    };
    choice_24 = new wxChoice(EasyRPGNotebookStates, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_24_choices, 0);
    spin_ctrl_26 = new wxSpinCtrl(EasyRPGNotebookStates, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    const wxString choice_25_choices[] = {
        
    };
    choice_25 = new wxChoice(EasyRPGNotebookStates, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_25_choices, 0);
    label_7_copy_4 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("A"));
    spin_ctrl_7_copy_5 = new wxSpinCtrl(EasyRPGNotebookStates, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_7_copy_5_copy_4 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("%"));
    label_7_copy_copy = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("B"));
    spin_ctrl_7_copy_1_copy = new wxSpinCtrl(EasyRPGNotebookStates, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_7_copy_5_copy_copy = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("%"));
    label_7_copy_1_copy = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("C"));
    spin_ctrl_7_copy_2_copy = new wxSpinCtrl(EasyRPGNotebookStates, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_7_copy_5_copy_1_copy = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("%"));
    label_7_copy_2_copy = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("D"));
    spin_ctrl_7_copy_3_copy = new wxSpinCtrl(EasyRPGNotebookStates, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_7_copy_5_copy_2_copy = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("%"));
    label_7_copy_3_copy = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("E"));
    spin_ctrl_7_copy_4_copy = new wxSpinCtrl(EasyRPGNotebookStates, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_7_copy_5_copy_3_copy = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("%"));
    label_37 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("After"));
    spin_ctrl_29 = new wxSpinCtrl(EasyRPGNotebookStates, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_38 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("torn,"));
    spin_ctrl_30 = new wxSpinCtrl(EasyRPGNotebookStates, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_39 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("% heal chance"));
    label_40 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("Physical attack"));
    spin_ctrl_31 = new wxSpinCtrl(EasyRPGNotebookStates, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_41 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("% heal chance"));
    checkbox_8 = new wxCheckBox(EasyRPGNotebookStates, wxID_ANY, _("Attack"));
    checkbox_8_copy_2 = new wxCheckBox(EasyRPGNotebookStates, wxID_ANY, _("Intelligence"));
    checkbox_8_copy_1 = new wxCheckBox(EasyRPGNotebookStates, wxID_ANY, _("Defense"));
    checkbox_8_copy_3 = new wxCheckBox(EasyRPGNotebookStates, wxID_ANY, _("Agility"));
    spin_ctrl_27 = new wxSpinCtrl(EasyRPGNotebookStates, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_10 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("%"));
    checkbox_33 = new wxCheckBox(EasyRPGNotebookStates, wxID_ANY, _("Attack chance"));
    spin_ctrl_28 = new wxSpinCtrl(EasyRPGNotebookStates, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_11 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("on special parameter"));
    checkbox_34 = new wxCheckBox(EasyRPGNotebookStates, wxID_ANY, _("Skill chance"));
    spin_ctrl_32 = new wxSpinCtrl(EasyRPGNotebookStates, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_36 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("on special parameter"));
    label_9 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("(Actor name)"));
    text_ctrl_24 = new wxTextCtrl(EasyRPGNotebookStates, wxID_ANY, wxEmptyString);
    label_9_copy = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("(Enemy name)"));
    text_ctrl_24_copy = new wxTextCtrl(EasyRPGNotebookStates, wxID_ANY, wxEmptyString);
    label_9_copy_1 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("(Affected name)"));
    text_ctrl_24_copy_1 = new wxTextCtrl(EasyRPGNotebookStates, wxID_ANY, wxEmptyString);
    label_9_copy_2 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("(Affected name)"));
    text_ctrl_24_copy_2 = new wxTextCtrl(EasyRPGNotebookStates, wxID_ANY, wxEmptyString);
    label_9_copy_3 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("(Affected name)"));
    text_ctrl_24_copy_3 = new wxTextCtrl(EasyRPGNotebookStates, wxID_ANY, wxEmptyString);
    label_42 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("Max"));
    spin_ctrl_33 = new wxSpinCtrl(EasyRPGNotebookStates, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_42_copy = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("% +"));
    spin_ctrl_33_copy = new wxSpinCtrl(EasyRPGNotebookStates, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_42_copy_1 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("HP"));
    spin_ctrl_33_copy_1 = new wxSpinCtrl(EasyRPGNotebookStates, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_42_copy_2 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("every step"));
    spin_ctrl_33_copy_2 = new wxSpinCtrl(EasyRPGNotebookStates, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_42_copy_3 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("HP"));
    label_42_copy_4 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("Max"));
    spin_ctrl_33_copy_3 = new wxSpinCtrl(EasyRPGNotebookStates, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_42_copy_5 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("% +"));
    spin_ctrl_33_copy_4 = new wxSpinCtrl(EasyRPGNotebookStates, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_42_copy_6 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("MP"));
    spin_ctrl_33_copy_5 = new wxSpinCtrl(EasyRPGNotebookStates, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_42_copy_7 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("every step"));
    spin_ctrl_33_copy_6 = new wxSpinCtrl(EasyRPGNotebookStates, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_42_copy_8 = new wxStaticText(EasyRPGNotebookStates, wxID_ANY, _("MP"));
    label_25_copy_copy_4 = new wxStaticText(EasyRPGNotebookAnimations, wxID_ANY, _("Animations"), wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE);
    const wxString list_box_7_copy_copy_4_choices[] = {
        
    };
    list_box_7_copy_copy_4 = new wxListBox(EasyRPGNotebookAnimations, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_7_copy_copy_4_choices, 0);
    button_31_copy_copy_4 = new wxButton(EasyRPGNotebookAnimations, wxID_ANY, _("Max Number..."));
    text_ctrl_25 = new wxTextCtrl(EasyRPGNotebookAnimations, wxID_ANY, wxEmptyString);
    text_ctrl_21_copy = new wxTextCtrl(EasyRPGNotebookAnimations, wxID_ANY, wxEmptyString);
    button_41_copy = new wxButton(EasyRPGNotebookAnimations, wxID_ANY, _("..."));
    const wxString choice_26_choices[] = {
        
    };
    choice_26 = new wxChoice(EasyRPGNotebookAnimations, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_26_choices, 0);
    spin_ctrl_34 = new wxSpinCtrl(EasyRPGNotebookAnimations, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    button_42 = new wxButton(EasyRPGNotebookAnimations, wxID_ANY, _("&Previous"));
    const wxString list_box_17_choices[] = {
        
    };
    list_box_17 = new wxListBox(EasyRPGNotebookAnimations, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_17_choices, 0);
    button_43 = new wxButton(EasyRPGNotebookAnimations, wxID_ANY, _("&Next"));
    list_ctrl_4 = new wxListCtrl(EasyRPGNotebookAnimations, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLC_REPORT|wxSUNKEN_BORDER);
    bitmap_3 = new wxStaticBitmap(EasyRPGNotebookAnimations, wxID_ANY, wxBitmap(wxT("battle.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    const wxString choice_27_choices[] = {
        
    };
    choice_27 = new wxChoice(EasyRPGNotebookAnimations, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_27_choices, 0);
    const wxString choice_28_choices[] = {
        
    };
    choice_28 = new wxChoice(EasyRPGNotebookAnimations, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_28_choices, 0);
    checkbox_35 = new wxCheckBox(EasyRPGNotebookAnimations, wxID_ANY, _("Snap to grid"));
    button_44 = new wxButton(EasyRPGNotebookAnimations, wxID_ANY, _("Like previous"));
    button_45 = new wxButton(EasyRPGNotebookAnimations, wxID_ANY, _("Edit..."));
    button_46 = new wxButton(EasyRPGNotebookAnimations, wxID_ANY, _("Complete..."));
    button_47 = new wxButton(EasyRPGNotebookAnimations, wxID_ANY, _("Make all..."));
    button_48 = new wxButton(EasyRPGNotebookAnimations, wxID_ANY, _("Play"));
    const wxString list_box_18_choices[] = {
        
    };
    list_box_18 = new wxListBox(EasyRPGNotebookAnimations, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_18_choices, wxLB_MULTIPLE|wxLB_HSCROLL);
    label_25_copy_copy_5 = new wxStaticText(EasyRPGNotebookTerrains, wxID_ANY, _("Terrains"), wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE);
    const wxString list_box_7_copy_copy_5_choices[] = {
        
    };
    list_box_7_copy_copy_5 = new wxListBox(EasyRPGNotebookTerrains, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_7_copy_copy_5_choices, 0);
    button_31_copy_copy_5 = new wxButton(EasyRPGNotebookTerrains, wxID_ANY, _("Max Number..."));
    text_ctrl_26 = new wxTextCtrl(EasyRPGNotebookTerrains, wxID_ANY, wxEmptyString);
    spin_ctrl_35 = new wxSpinCtrl(EasyRPGNotebookTerrains, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    spin_ctrl_35_copy = new wxSpinCtrl(EasyRPGNotebookTerrains, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_44 = new wxStaticText(EasyRPGNotebookTerrains, wxID_ANY, _("%"));
    bitmap_13_copy = new wxStaticBitmap(EasyRPGNotebookTerrains, wxID_ANY, wxBitmap(wxT("battle.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    label_43 = new wxStaticText(EasyRPGNotebookTerrains, wxID_ANY, _("Terrain background"));
    button_49 = new wxButton(EasyRPGNotebookTerrains, wxID_ANY, _("Select..."));
    checkbox_36 = new wxCheckBox(EasyRPGNotebookTerrains, wxID_ANY, _("Small ship"));
    checkbox_37 = new wxCheckBox(EasyRPGNotebookTerrains, wxID_ANY, _("Big ship"));
    checkbox_38 = new wxCheckBox(EasyRPGNotebookTerrains, wxID_ANY, _("Aeroship"));
    checkbox_39 = new wxCheckBox(EasyRPGNotebookTerrains, wxID_ANY, _("Ship can land"));
    const wxString radio_box_7_choices[] = {
        _("Normal"),
        _("1/3 transparent"),
        _("1/2 transparent"),
        _("Fully transparent")
    };
    radio_box_7 = new wxRadioBox(EasyRPGNotebookTerrains, wxID_ANY, _("Transparency"), wxDefaultPosition, wxDefaultSize, 4, radio_box_7_choices, 1, wxRA_SPECIFY_COLS);
    label_25_copy_copy_6 = new wxStaticText(EasyRPGNotebookTilesets, wxID_ANY, _("Tilesets"), wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE);
    const wxString list_box_7_copy_copy_6_choices[] = {
        
    };
    list_box_7_copy_copy_6 = new wxListBox(EasyRPGNotebookTilesets, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_7_copy_copy_6_choices, 0);
    button_31_copy_copy_6 = new wxButton(EasyRPGNotebookTilesets, wxID_ANY, _("Max Number..."));
    text_ctrl_27 = new wxTextCtrl(EasyRPGNotebookTilesets, wxID_ANY, wxEmptyString);
    text_ctrl_28 = new wxTextCtrl(EasyRPGNotebookTilesets, wxID_ANY, wxEmptyString);
    button_50 = new wxButton(notebook_4_pane_1, wxID_ANY, _("Terrain type"));
    button_51 = new wxButton(notebook_4_pane_1, wxID_ANY, _("Blocking"));
    button_52 = new wxButton(notebook_4_pane_1, wxID_ANY, _("Four directions"));
    button_53 = new wxButton(notebook_4_pane_1, wxID_ANY, _("Change everything to..."));
    bitmap_4 = new wxStaticBitmap(notebook_4_pane_1, wxID_ANY, wxBitmap(wxT("tile.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    const wxString radio_box_8_choices[] = {
        _("1-2-3-2"),
        _("1-2-3")
    };
    radio_box_8 = new wxRadioBox(notebook_4_pane_1, wxID_ANY, _("Sequence"), wxDefaultPosition, wxDefaultSize, 2, radio_box_8_choices, 1, wxRA_SPECIFY_COLS);
    const wxString radio_box_8_copy_choices[] = {
        _("Slow"),
        _("Fast")
    };
    radio_box_8_copy = new wxRadioBox(notebook_4_pane_1, wxID_ANY, _("Speed"), wxDefaultPosition, wxDefaultSize, 2, radio_box_8_copy_choices, 1, wxRA_SPECIFY_COLS);
    const wxString list_box_19_choices[] = {
        
    };
    list_box_19 = new wxListBox(notebook_4_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_19_choices, 0);
    const wxString list_box_20_choices[] = {
        
    };
    list_box_20 = new wxListBox(notebook_4_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_20_choices, 0);
    button_54 = new wxButton(notebook_4_pane_2, wxID_ANY, _("Blocking"));
    button_54_copy = new wxButton(notebook_4_pane_2, wxID_ANY, _("Four directions"));
    button_54_copy_1 = new wxButton(notebook_4_pane_2, wxID_ANY, _("Counter flag"));
    const wxString list_box_19_copy_choices[] = {
        
    };
    list_box_19_copy = new wxListBox(notebook_4_pane_2, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_19_copy_choices, 0);
    label_45 = new wxStaticText(notebook_2_pane_1, wxID_ANY, _("(Enemy name)"));
    text_ctrl_29 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_1 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_2 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_3 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_45_copy_1 = new wxStaticText(notebook_2_pane_1, wxID_ANY, _("(X)"));
    text_ctrl_29_copy_1 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_9_copy = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_45_copy_9 = new wxStaticText(notebook_2_pane_1, wxID_ANY, _("(X) (Currency)"));
    text_ctrl_29_copy_9 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_45_copy_2 = new wxStaticText(notebook_2_pane_1, wxID_ANY, _("(Item name)"));
    text_ctrl_29_copy_2 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_45_copy = new wxStaticText(notebook_2_pane_1, wxID_ANY, _("(User name)"));
    text_ctrl_29_copy = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_4 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_5 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_45_copy_3 = new wxStaticText(notebook_2_pane_1, wxID_ANY, _("(User name)"));
    text_ctrl_29_copy_3 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_45_copy_4 = new wxStaticText(notebook_2_pane_1, wxID_ANY, _("(Enemy name)"));
    text_ctrl_29_copy_4 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_45_copy_5 = new wxStaticText(notebook_2_pane_1, wxID_ANY, _("(Enemy name)"));
    text_ctrl_29_copy_5 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_45_copy_6 = new wxStaticText(notebook_2_pane_1, wxID_ANY, _("(Enemy name)"));
    text_ctrl_29_copy_6 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_45_copy_7 = new wxStaticText(notebook_2_pane_1, wxID_ANY, _("(Enemy name)"));
    text_ctrl_29_copy_7 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_45_copy_8 = new wxStaticText(notebook_2_pane_1, wxID_ANY, _("(Enemy name)"));
    text_ctrl_29_copy_8 = new wxTextCtrl(notebook_2_pane_1, wxID_ANY, wxEmptyString);
    label_45_copy_10 = new wxStaticText(notebook_2_pane_2, wxID_ANY, _("(Enemy name) (X)"));
    text_ctrl_29_copy_11 = new wxTextCtrl(notebook_2_pane_2, wxID_ANY, wxEmptyString);
    label_45_copy_11 = new wxStaticText(notebook_2_pane_2, wxID_ANY, _("(Enemy name)"));
    text_ctrl_29_copy_12 = new wxTextCtrl(notebook_2_pane_2, wxID_ANY, wxEmptyString);
    label_45_copy_12 = new wxStaticText(notebook_2_pane_2, wxID_ANY, _("(Actor name) (X)"));
    text_ctrl_29_copy_13 = new wxTextCtrl(notebook_2_pane_2, wxID_ANY, wxEmptyString);
    label_45_copy_13 = new wxStaticText(notebook_2_pane_2, wxID_ANY, _("(Actor name)"));
    text_ctrl_29_copy_14 = new wxTextCtrl(notebook_2_pane_2, wxID_ANY, wxEmptyString);
    label_45_copy_14 = new wxStaticText(notebook_2_pane_2, wxID_ANY, _("(User name)"));
    text_ctrl_29_copy_15 = new wxTextCtrl(notebook_2_pane_2, wxID_ANY, wxEmptyString);
    label_45_copy_16 = new wxStaticText(notebook_2_pane_2, wxID_ANY, _("(User name)"));
    text_ctrl_29_copy_17 = new wxTextCtrl(notebook_2_pane_2, wxID_ANY, wxEmptyString);
    label_45_copy_15 = new wxStaticText(notebook_2_pane_2, wxID_ANY, _("(User name)"));
    text_ctrl_29_copy_16 = new wxTextCtrl(notebook_2_pane_2, wxID_ANY, wxEmptyString);
    label_45_copy_17 = new wxStaticText(notebook_2_pane_2, wxID_ANY, _("(Affected name)"));
    text_ctrl_29_copy_18 = new wxTextCtrl(notebook_2_pane_2, wxID_ANY, wxEmptyString);
    label_45_copy_18 = new wxStaticText(notebook_2_pane_2, wxID_ANY, _("(User name) (Object name)"));
    text_ctrl_29_copy_19 = new wxTextCtrl(notebook_2_pane_2, wxID_ANY, wxEmptyString);
    label_45_copy_19 = new wxStaticText(notebook_2_pane_2, wxID_ANY, _("(User name) (HP cost) (X)"));
    text_ctrl_29_copy_20 = new wxTextCtrl(notebook_2_pane_2, wxID_ANY, wxEmptyString);
    label_45_copy_20 = new wxStaticText(notebook_2_pane_2, wxID_ANY, _("(User name) (Parameter cost) (X)"));
    text_ctrl_29_copy_21 = new wxTextCtrl(notebook_2_pane_2, wxID_ANY, wxEmptyString);
    label_45_copy_21 = new wxStaticText(notebook_2_pane_2, wxID_ANY, _("(User name) (Parameter cost) (X)"));
    text_ctrl_29_copy_22 = new wxTextCtrl(notebook_2_pane_2, wxID_ANY, wxEmptyString);
    label_45_copy_22 = new wxStaticText(notebook_2_pane_2, wxID_ANY, _("(User name) (Parameter cost) (X)"));
    text_ctrl_29_copy_23 = new wxTextCtrl(notebook_2_pane_2, wxID_ANY, wxEmptyString);
    label_45_copy_23 = new wxStaticText(notebook_2_pane_2, wxID_ANY, _("(User name) (Parameter cost) (X)"));
    text_ctrl_29_copy_24 = new wxTextCtrl(notebook_2_pane_2, wxID_ANY, wxEmptyString);
    label_45_copy_24 = new wxStaticText(notebook_2_pane_2, wxID_ANY, _("(User name) (Defense)"));
    text_ctrl_29_copy_25 = new wxTextCtrl(notebook_2_pane_2, wxID_ANY, wxEmptyString);
    label_45_copy_25 = new wxStaticText(notebook_2_pane_2, wxID_ANY, _("(User name) (Defense)"));
    text_ctrl_29_copy_26 = new wxTextCtrl(notebook_2_pane_2, wxID_ANY, wxEmptyString);
    label_45_copy_26 = new wxStaticText(notebook_2_pane_2, wxID_ANY, _("(Actor name) (Level) (X)"));
    text_ctrl_29_copy_27 = new wxTextCtrl(notebook_2_pane_2, wxID_ANY, wxEmptyString);
    label_45_copy_27 = new wxStaticText(notebook_2_pane_2, wxID_ANY, _("(Skill name)"));
    text_ctrl_29_copy_28 = new wxTextCtrl(notebook_2_pane_2, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_6 = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_7 = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_7_copy = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_7_copy_1 = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_7_copy_2 = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_8 = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_9 = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_10 = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_11 = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_12 = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_13 = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_6_copy = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_7_copy_3 = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_7_copy_copy = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_7_copy_1_copy = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_7_copy_2_copy = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_8_copy = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_9_copy = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_10_copy = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_11_copy = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_12_copy = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_13_copy = new wxTextCtrl(notebook_2_pane_3, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_6_copy_1 = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_7_copy_4 = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_7_copy_copy_1 = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_7_copy_1_copy_1 = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_7_copy_2_copy_1 = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_8_copy_1 = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_9_copy_1 = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_10_copy_1 = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_11_copy_1 = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_12_copy_1 = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_13_copy_1 = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_22_copy = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    label_45_copy_9_copy = new wxStaticText(notebook_2_pane_4, wxID_ANY, _("(X) (Currency)"));
    text_ctrl_29_copy_10_copy_22_copy_1 = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_22_copy_2 = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_7_copy_6_copy = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_7_copy_6_copy_1 = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_22_copy_copy = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    label_45_copy_9_copy_copy = new wxStaticText(notebook_2_pane_4, wxID_ANY, _("(X) (Currency)"));
    text_ctrl_29_copy_10_copy_22_copy_1_copy = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_22_copy_2_copy = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_7_copy_6_copy_copy = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_7_copy_6_copy_1_copy = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_7_copy_6_copy_2 = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_7_copy_6_copy_3 = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_7_copy_6_copy_4 = new wxTextCtrl(notebook_2_pane_4, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_30 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_31 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_32 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_33 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_34 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_35 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_36 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_37 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_38 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_39 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_40 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_41 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_42 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_43 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_44 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_45 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_46 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_47 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_48 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_49 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_50 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_51 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_52 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_53 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_54 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_55 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_56 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_57 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_58 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_59 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_60 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_61 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_62 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_63 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_64 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_65 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    text_ctrl_29_copy_10_copy_66 = new wxTextCtrl(notebook_2_pane_5, wxID_ANY, wxEmptyString);
    bitmap_1_copy = new wxStaticBitmap(EasyRPGNotebookSystem, wxID_ANY, wxBitmap(wxT("chara.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    button_55 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("Select..."));
    bitmap_1_copy_1 = new wxStaticBitmap(EasyRPGNotebookSystem, wxID_ANY, wxBitmap(wxT("chara.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    button_55_copy = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("Select..."));
    bitmap_1_copy_2 = new wxStaticBitmap(EasyRPGNotebookSystem, wxID_ANY, wxBitmap(wxT("chara.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    button_55_copy_1 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("Select..."));
    bitmap_11_copy = new wxStaticBitmap(EasyRPGNotebookSystem, wxID_ANY, wxBitmap(wxT("background.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    button_55_copy_2 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("Select..."));
    bitmap_11_copy_1 = new wxStaticBitmap(EasyRPGNotebookSystem, wxID_ANY, wxBitmap(wxT("background.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    button_55_copy_2_copy = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("Select..."));
    const wxString choice_29_choices[] = {
        
    };
    choice_29 = new wxChoice(EasyRPGNotebookSystem, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_29_choices, 0);
    const wxString choice_29_copy_choices[] = {
        
    };
    choice_29_copy = new wxChoice(EasyRPGNotebookSystem, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_29_copy_choices, 0);
    const wxString choice_29_copy_1_choices[] = {
        
    };
    choice_29_copy_1 = new wxChoice(EasyRPGNotebookSystem, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_29_copy_1_choices, 0);
    const wxString choice_29_copy_2_choices[] = {
        
    };
    choice_29_copy_2 = new wxChoice(EasyRPGNotebookSystem, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_29_copy_2_choices, 0);
    text_ctrl_21_copy_copy = new wxTextCtrl(EasyRPGNotebookSystem, wxID_ANY, wxEmptyString);
    button_41_copy_copy = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("..."));
    text_ctrl_21_copy_copy_1 = new wxTextCtrl(EasyRPGNotebookSystem, wxID_ANY, wxEmptyString);
    button_41_copy_copy_1 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("..."));
    text_ctrl_21_copy_copy_2 = new wxTextCtrl(EasyRPGNotebookSystem, wxID_ANY, wxEmptyString);
    button_41_copy_copy_2 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("..."));
    text_ctrl_21_copy_copy_3 = new wxTextCtrl(EasyRPGNotebookSystem, wxID_ANY, wxEmptyString);
    button_41_copy_copy_3 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("..."));
    text_ctrl_21_copy_copy_4 = new wxTextCtrl(EasyRPGNotebookSystem, wxID_ANY, wxEmptyString);
    button_41_copy_copy_4 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("..."));
    text_ctrl_21_copy_copy_5 = new wxTextCtrl(EasyRPGNotebookSystem, wxID_ANY, wxEmptyString);
    button_41_copy_copy_5 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("..."));
    text_ctrl_21_copy_copy_6 = new wxTextCtrl(EasyRPGNotebookSystem, wxID_ANY, wxEmptyString);
    button_41_copy_copy_6 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("..."));
    text_ctrl_21_copy_copy_7 = new wxTextCtrl(EasyRPGNotebookSystem, wxID_ANY, wxEmptyString);
    button_41_copy_copy_7 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("..."));
    text_ctrl_21_copy_copy_8 = new wxTextCtrl(EasyRPGNotebookSystem, wxID_ANY, wxEmptyString);
    button_41_copy_copy_8 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("..."));
    text_ctrl_21_copy_copy_9 = new wxTextCtrl(EasyRPGNotebookSystem, wxID_ANY, wxEmptyString);
    button_41_copy_copy_9 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("..."));
    text_ctrl_21_copy_copy_10 = new wxTextCtrl(EasyRPGNotebookSystem, wxID_ANY, wxEmptyString);
    button_41_copy_copy_10 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("..."));
    text_ctrl_21_copy_copy_11 = new wxTextCtrl(EasyRPGNotebookSystem, wxID_ANY, wxEmptyString);
    button_41_copy_copy_11 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("..."));
    text_ctrl_21_copy_copy_12 = new wxTextCtrl(EasyRPGNotebookSystem, wxID_ANY, wxEmptyString);
    button_41_copy_copy_12 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("..."));
    text_ctrl_21_copy_copy_13 = new wxTextCtrl(EasyRPGNotebookSystem, wxID_ANY, wxEmptyString);
    button_41_copy_copy_13 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("..."));
    text_ctrl_21_copy_copy_14 = new wxTextCtrl(EasyRPGNotebookSystem, wxID_ANY, wxEmptyString);
    button_41_copy_copy_14 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("..."));
    text_ctrl_21_copy_copy_15 = new wxTextCtrl(EasyRPGNotebookSystem, wxID_ANY, wxEmptyString);
    button_41_copy_copy_15 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("..."));
    text_ctrl_21_copy_copy_16 = new wxTextCtrl(EasyRPGNotebookSystem, wxID_ANY, wxEmptyString);
    button_41_copy_copy_16 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("..."));
    text_ctrl_21_copy_copy_17 = new wxTextCtrl(EasyRPGNotebookSystem, wxID_ANY, wxEmptyString);
    button_41_copy_copy_17 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("..."));
    text_ctrl_21_copy_copy_18 = new wxTextCtrl(EasyRPGNotebookSystem, wxID_ANY, wxEmptyString);
    button_41_copy_copy_18 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("..."));
    text_ctrl_21_copy_copy_19 = new wxTextCtrl(EasyRPGNotebookSystem, wxID_ANY, wxEmptyString);
    button_41_copy_copy_19 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("..."));
    bitmap_11_copy_copy = new wxStaticBitmap(EasyRPGNotebookSystem, wxID_ANY, wxBitmap(wxT("system.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    button_55_copy_2_copy_1 = new wxButton(EasyRPGNotebookSystem, wxID_ANY, _("Select..."));
    const wxString choice_29_copy_3_choices[] = {
        
    };
    choice_29_copy_3 = new wxChoice(EasyRPGNotebookSystem, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_29_copy_3_choices, 0);
    const wxString choice_29_copy_4_choices[] = {
        
    };
    choice_29_copy_4 = new wxChoice(EasyRPGNotebookSystem, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_29_copy_4_choices, 0);
    const wxString choice_29_copy_5_choices[] = {
        
    };
    choice_29_copy_5 = new wxChoice(EasyRPGNotebookSystem, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_29_copy_5_choices, 0);
    const wxString choice_29_copy_6_choices[] = {
        
    };
    choice_29_copy_6 = new wxChoice(EasyRPGNotebookSystem, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_29_copy_6_choices, 0);
    const wxString choice_29_copy_7_choices[] = {
        
    };
    choice_29_copy_7 = new wxChoice(EasyRPGNotebookSystem, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_29_copy_7_choices, 0);
    const wxString choice_29_copy_8_choices[] = {
        
    };
    choice_29_copy_8 = new wxChoice(EasyRPGNotebookSystem, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_29_copy_8_choices, 0);
    label_25_copy_copy_6_copy = new wxStaticText(EasyRPGNoteBookCommonEvents, wxID_ANY, _("Common events"), wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE);
    const wxString list_box_7_copy_copy_6_copy_choices[] = {
        
    };
    list_box_7_copy_copy_6_copy = new wxListBox(EasyRPGNoteBookCommonEvents, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_7_copy_copy_6_copy_choices, 0);
    button_31_copy_copy_6_copy = new wxButton(EasyRPGNoteBookCommonEvents, wxID_ANY, _("Max Number..."));
    text_ctrl_30 = new wxTextCtrl(EasyRPGNoteBookCommonEvents, wxID_ANY, wxEmptyString);
    const wxString choice_30_choices[] = {
        
    };
    choice_30 = new wxChoice(EasyRPGNoteBookCommonEvents, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_30_choices, 0);
    checkbox_40 = new wxCheckBox(EasyRPGNoteBookCommonEvents, wxID_ANY, wxEmptyString);
    text_ctrl_21_copy_copy_20 = new wxTextCtrl(EasyRPGNoteBookCommonEvents, wxID_ANY, wxEmptyString);
    button_41_copy_copy_20 = new wxButton(EasyRPGNoteBookCommonEvents, wxID_ANY, _("..."));
    const wxString list_box_21_choices[] = {
        _("<>")
    };
    list_box_21 = new wxListBox(EasyRPGNoteBookCommonEvents, wxID_ANY, wxDefaultPosition, wxDefaultSize, 1, list_box_21_choices, 0);
    EasyRPGDatabaseButtonOK = new wxButton(this, wxID_OK, wxEmptyString);
    EasyRPGDatabaseButtonCancel = new wxButton(this, wxID_ANY, _("&Cancel"));
    EasyRPGDatabaseButtonApply = new wxButton(this, wxID_ANY, _("&Apply"));
    EasyRPGDatabaseButtonHelp = new wxButton(this, wxID_ANY, _("&Help"));

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogDatabase::set_properties()
{
    // begin wxGlade: EasyRPGDialogDatabase::set_properties
    SetTitle(_("Database"));
    EasyRPGActorsLabelActors->SetFont(wxFont(12, wxDEFAULT, wxNORMAL, wxBOLD, 0, wxT("")));
    EasyRPGActorsListBoxActors->SetSize(wxDLG_UNIT(EasyRPGActorsListBoxActors, wxSize(75, -1)));
    EasyRPGActorsListBoxActors->SetSelection(0);
    bitmap_1->SetSize(wxSize(48, 64));
    spin_ctrl_1->SetSize(wxSize(75, -1));
    spin_ctrl_2->SetSize(wxSize(75, -1));
    spin_ctrl_3->SetSize(wxSize(75, -1));
    bitmap_2->SetSize(wxSize(96, 96));
    bitmap_14->SetSize(wxSize(100, 50));
    bitmap_14_copy->SetSize(wxSize(100, 50));
    bitmap_14_copy_1->SetSize(wxSize(100, 50));
    bitmap_14_copy_2->SetSize(wxSize(100, 50));
    bitmap_14_copy_3->SetSize(wxSize(100, 50));
    bitmap_14_copy_4->SetSize(wxSize(100, 50));
    list_ctrl_1->SetSize(wxSize(75,-1));
    text_ctrl_2->SetSize(wxSize(70,-1));
    list_box_1->SetSize(wxSize(72,-1));
    list_box_2->SetSize(wxSize(72,-1));
    label_25->SetFont(wxFont(12, wxDEFAULT, wxNORMAL, wxBOLD, 0, wxT("")));
    list_box_7->SetSize(wxDLG_UNIT(list_box_7, wxSize(75, -1)));
    text_ctrl_14->SetSize(wxSize(75,-1));
    choice_19->SetSize(wxSize(75,-1));
    spin_ctrl_12->SetSize(wxSize(75, -1));
    bitmap_11->SetSize(wxSize(160, 120));
    list_box_8->SetSize(wxSize(75,-1));
    list_box_9->SetSize(wxSize(75,-1));
    label_25_copy->SetFont(wxFont(12, wxDEFAULT, wxNORMAL, wxBOLD, 0, wxT("")));
    list_box_7_copy->SetSize(wxDLG_UNIT(list_box_7_copy, wxSize(75, -1)));
    spin_ctrl_15->SetSize(wxSize(75, -1));
    radio_box_5->SetSelection(0);
    list_box_10->SetSize(wxSize(100,-1));
    list_box_11->SetSize(wxSize(100,-1));
    spin_ctrl_16->SetSize(wxSize(50, -1));
    spin_ctrl_17->SetSize(wxSize(50, -1));
    spin_ctrl_18->SetSize(wxSize(50, -1));
    spin_ctrl_19->SetSize(wxSize(50, -1));
    label_25_copy_copy->SetFont(wxFont(12, wxDEFAULT, wxNORMAL, wxBOLD, 0, wxT("")));
    list_box_7_copy_copy->SetSize(wxDLG_UNIT(list_box_7_copy_copy, wxSize(75, -1)));
    spin_ctrl_20->SetSize(wxSize(75,-1));
    spin_ctrl_20_copy->SetSize(wxSize(75,-1));
    spin_ctrl_20_copy_1->SetSize(wxSize(75,-1));
    spin_ctrl_20_copy_2->SetSize(wxSize(75,-1));
    spin_ctrl_20_copy_3->SetSize(wxSize(75,-1));
    spin_ctrl_20_copy_4->SetSize(wxSize(75,-1));
    bitmap_12->SetSize(wxSize(160, 120));
    spin_ctrl_22->SetSize(wxSize(75,-1));
    spin_ctrl_23->SetSize(wxSize(75,-1));
    spin_ctrl_24->SetSize(wxSize(75,-1));
    spin_ctrl_21->SetSize(wxSize(75,-1));
    list_box_12->SetSize(wxSize(74, -1));
    list_box_13->SetSize(wxSize(75, -1));
    label_25_copy_copy_1->SetFont(wxFont(12, wxDEFAULT, wxNORMAL, wxBOLD, 0, wxT("")));
    list_box_7_copy_copy_1->SetSize(wxDLG_UNIT(list_box_7_copy_copy_1, wxSize(75, -1)));
    bitmap_13->SetSize(wxSize(320, 160));
    list_box_15->SetSize(wxSize(100,-1));
    button_41->SetSize(wxSize(25, -1));
    list_box_16->SetSize(wxSize(101, -1));
    label_25_copy_copy_2->SetFont(wxFont(12, wxDEFAULT, wxNORMAL, wxBOLD, 0, wxT("")));
    list_box_7_copy_copy_2->SetSize(wxDLG_UNIT(list_box_7_copy_copy_2, wxSize(75, -1)));
    radio_box_6->SetSelection(0);
    spin_ctrl_7->SetSize(wxSize(60, -1));
    spin_ctrl_7_copy_1->SetSize(wxSize(60, -1));
    spin_ctrl_7_copy_2->SetSize(wxSize(60, -1));
    spin_ctrl_7_copy_3->SetSize(wxSize(60, -1));
    spin_ctrl_7_copy_4->SetSize(wxSize(60, -1));
    label_25_copy_copy_3->SetFont(wxFont(12, wxDEFAULT, wxNORMAL, wxBOLD, 0, wxT("")));
    list_box_7_copy_copy_3->SetSize(wxDLG_UNIT(list_box_7_copy_copy_3, wxSize(75, -1)));
    text_ctrl_23->SetSize(wxSize(75, -1));
    choice_23->SetSize(wxSize(75, -1));
    choice_24->SetSize(wxSize(75, -1));
    spin_ctrl_26->SetSize(wxSize(75, -1));
    choice_25->SetSize(wxSize(75,-1));
    spin_ctrl_7_copy_5->SetSize(wxSize(60, -1));
    spin_ctrl_7_copy_1_copy->SetSize(wxSize(60, -1));
    spin_ctrl_7_copy_2_copy->SetSize(wxSize(60, -1));
    spin_ctrl_7_copy_3_copy->SetSize(wxSize(60, -1));
    spin_ctrl_7_copy_4_copy->SetSize(wxSize(60, -1));
    spin_ctrl_29->SetSize(wxSize(75, -1));
    spin_ctrl_30->SetSize(wxSize(75, -1));
    spin_ctrl_31->SetSize(wxSize(75, -1));
    spin_ctrl_27->SetSize(wxSize(75, -1));
    spin_ctrl_28->SetSize(wxSize(75, -1));
    spin_ctrl_32->SetSize(wxSize(75, -1));
    spin_ctrl_33->SetSize(wxSize(75, -1));
    spin_ctrl_33_copy->SetSize(wxSize(75, -1));
    spin_ctrl_33_copy_1->SetSize(wxSize(75, -1));
    spin_ctrl_33_copy_2->SetSize(wxSize(75, -1));
    spin_ctrl_33_copy_3->SetSize(wxSize(75, -1));
    spin_ctrl_33_copy_4->SetSize(wxSize(75, -1));
    spin_ctrl_33_copy_5->SetSize(wxSize(75, -1));
    spin_ctrl_33_copy_6->SetSize(wxSize(75, -1));
    label_25_copy_copy_4->SetFont(wxFont(12, wxDEFAULT, wxNORMAL, wxBOLD, 0, wxT("")));
    list_box_7_copy_copy_4->SetSize(wxDLG_UNIT(list_box_7_copy_copy_4, wxSize(75, -1)));
    text_ctrl_25->SetSize(wxSize(75,-1));
    text_ctrl_21_copy->SetSize(wxSize(75,-1));
    button_41_copy->SetSize(wxSize(25, -1));
    choice_26->SetSize(wxSize(75,-1));
    spin_ctrl_34->SetSize(wxSize(70, -1));
    list_box_17->SetSize(wxSize(75, -1));
    bitmap_3->SetBackgroundColour(wxColour(0, 0, 0));
    choice_27->SetSize(wxSize(75, -1));
    choice_28->SetSize(wxSize(75,-1));
    list_box_18->SetSize(wxSize(-1,96));
    label_25_copy_copy_5->SetFont(wxFont(12, wxDEFAULT, wxNORMAL, wxBOLD, 0, wxT("")));
    list_box_7_copy_copy_5->SetSize(wxDLG_UNIT(list_box_7_copy_copy_5, wxSize(75, -1)));
    spin_ctrl_35->SetSize(wxSize(60,-1));
    spin_ctrl_35_copy->SetSize(wxSize(60,-1));
    bitmap_13_copy->SetSize(wxSize(320, 160));
    radio_box_7->SetSelection(0);
    label_25_copy_copy_6->SetFont(wxFont(12, wxDEFAULT, wxNORMAL, wxBOLD, 0, wxT("")));
    list_box_7_copy_copy_6->SetSize(wxDLG_UNIT(list_box_7_copy_copy_6, wxSize(75, -1)));
    bitmap_4->SetSize(wxSize(32, 32));
    radio_box_8->SetSelection(0);
    radio_box_8_copy->SetSelection(0);
    list_box_19->SetSize(wxSize(192, -1));
    list_box_19_copy->SetSize(wxSize(192, -1));
    text_ctrl_29_copy_10_copy_6_copy_1->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_7_copy_4->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_7_copy_copy_1->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_7_copy_1_copy_1->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_7_copy_2_copy_1->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_8_copy_1->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_9_copy_1->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_10_copy_1->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_11_copy_1->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_12_copy_1->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_13_copy_1->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_22_copy->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_30->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_31->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_32->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_33->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_34->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_35->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_36->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_37->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_38->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_39->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_40->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_41->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_42->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_43->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_44->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_45->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_46->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_47->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_48->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_49->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_50->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_51->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_52->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_53->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_54->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_55->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_56->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_57->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_58->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_59->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_60->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_61->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_62->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_63->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_64->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_65->SetSize(wxSize(75, -1));
    text_ctrl_29_copy_10_copy_66->SetSize(wxSize(75, -1));
    bitmap_1_copy->SetSize(wxSize(48, 64));
    bitmap_1_copy_1->SetSize(wxSize(48, 64));
    bitmap_1_copy_2->SetSize(wxSize(48, 64));
    bitmap_11_copy->SetSize(wxSize(160, 120));
    bitmap_11_copy_1->SetSize(wxSize(160, 120));
    choice_29->SetSize(wxSize(100, -1));
    choice_29_copy->SetSize(wxSize(100, -1));
    choice_29_copy_1->SetSize(wxSize(100, -1));
    choice_29_copy_2->SetSize(wxSize(100, -1));
    text_ctrl_21_copy_copy->SetSize(wxSize(80,-1));
    button_41_copy_copy->SetSize(wxSize(25, -1));
    text_ctrl_21_copy_copy_1->SetSize(wxSize(80,-1));
    button_41_copy_copy_1->SetSize(wxSize(25, -1));
    text_ctrl_21_copy_copy_2->SetSize(wxSize(80,-1));
    button_41_copy_copy_2->SetSize(wxSize(25, -1));
    text_ctrl_21_copy_copy_3->SetSize(wxSize(80,-1));
    button_41_copy_copy_3->SetSize(wxSize(25, -1));
    text_ctrl_21_copy_copy_4->SetSize(wxSize(80,-1));
    button_41_copy_copy_4->SetSize(wxSize(25, -1));
    text_ctrl_21_copy_copy_5->SetSize(wxSize(80,-1));
    button_41_copy_copy_5->SetSize(wxSize(25, -1));
    text_ctrl_21_copy_copy_6->SetSize(wxSize(80,-1));
    button_41_copy_copy_6->SetSize(wxSize(25, -1));
    text_ctrl_21_copy_copy_7->SetSize(wxSize(80,-1));
    button_41_copy_copy_7->SetSize(wxSize(25, -1));
    text_ctrl_21_copy_copy_8->SetSize(wxSize(80,-1));
    button_41_copy_copy_8->SetSize(wxSize(25, -1));
    text_ctrl_21_copy_copy_9->SetSize(wxSize(80,-1));
    button_41_copy_copy_9->SetSize(wxSize(25, -1));
    text_ctrl_21_copy_copy_10->SetSize(wxSize(80,-1));
    button_41_copy_copy_10->SetSize(wxSize(25, -1));
    text_ctrl_21_copy_copy_11->SetSize(wxSize(80,-1));
    button_41_copy_copy_11->SetSize(wxSize(25, -1));
    text_ctrl_21_copy_copy_12->SetSize(wxSize(80,-1));
    button_41_copy_copy_12->SetSize(wxSize(25, -1));
    text_ctrl_21_copy_copy_13->SetSize(wxSize(80,-1));
    button_41_copy_copy_13->SetSize(wxSize(25, -1));
    text_ctrl_21_copy_copy_14->SetSize(wxSize(80,-1));
    button_41_copy_copy_14->SetSize(wxSize(25, -1));
    text_ctrl_21_copy_copy_15->SetSize(wxSize(80,-1));
    button_41_copy_copy_15->SetSize(wxSize(25, -1));
    text_ctrl_21_copy_copy_16->SetSize(wxSize(80,-1));
    button_41_copy_copy_16->SetSize(wxSize(25, -1));
    text_ctrl_21_copy_copy_17->SetSize(wxSize(80,-1));
    button_41_copy_copy_17->SetSize(wxSize(25, -1));
    text_ctrl_21_copy_copy_18->SetSize(wxSize(80,-1));
    button_41_copy_copy_18->SetSize(wxSize(25, -1));
    text_ctrl_21_copy_copy_19->SetSize(wxSize(80,-1));
    button_41_copy_copy_19->SetSize(wxSize(25, -1));
    bitmap_11_copy_copy->SetSize(wxSize(160, 80));
    choice_29_copy_3->SetSize(wxSize(100, -1));
    choice_29_copy_4->SetSize(wxSize(100, -1));
    choice_29_copy_5->SetSize(wxSize(100, -1));
    choice_29_copy_6->SetSize(wxSize(100, -1));
    choice_29_copy_7->SetSize(wxSize(100, -1));
    choice_29_copy_8->SetSize(wxSize(100, -1));
    label_25_copy_copy_6_copy->SetFont(wxFont(12, wxDEFAULT, wxNORMAL, wxBOLD, 0, wxT("")));
    list_box_7_copy_copy_6_copy->SetSize(wxDLG_UNIT(list_box_7_copy_copy_6_copy, wxSize(75, -1)));
    button_41_copy_copy_20->SetSize(wxSize(25, -1));
    list_box_21->SetSelection(0);
    EasyRPGDatabaseButtonOK->SetDefault();
    // end wxGlade
}


void EasyRPGDialogDatabase::do_layout()
{
    // begin wxGlade: EasyRPGDialogDatabase::do_layout
    wxBoxSizer* EasyRPGDatabaseSizerMain = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* EasyRPGDatabaseSizerLower = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_125_copy_6_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_289 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_294 = new wxStaticBoxSizer(sizer_294_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_290 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_293 = new wxStaticBoxSizer(sizer_293_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_292 = new wxStaticBoxSizer(sizer_292_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_291 = new wxStaticBoxSizer(sizer_291_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_83_copy_copy_6_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_127 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_270 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_284 = new wxStaticBoxSizer(sizer_284_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_288_copy_8 = new wxStaticBoxSizer(sizer_288_copy_8_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_288_copy_7 = new wxStaticBoxSizer(sizer_288_copy_7_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_283 = new wxStaticBoxSizer(sizer_283_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_288_copy_6 = new wxStaticBoxSizer(sizer_288_copy_6_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_288_copy_5 = new wxStaticBoxSizer(sizer_288_copy_5_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_282 = new wxStaticBoxSizer(sizer_282_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_288_copy_4 = new wxStaticBoxSizer(sizer_288_copy_4_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_288_copy_3 = new wxStaticBoxSizer(sizer_288_copy_3_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_281 = new wxStaticBoxSizer(sizer_281_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_260 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_280 = new wxStaticBoxSizer(sizer_280_staticbox, wxHORIZONTAL);
    wxGridSizer* grid_sizer_14 = new wxGridSizer(4, 3, 0, 2);
    wxStaticBoxSizer* sizer_219_copy_19 = new wxStaticBoxSizer(sizer_219_copy_19_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_219_copy_18 = new wxStaticBoxSizer(sizer_219_copy_18_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_219_copy_17 = new wxStaticBoxSizer(sizer_219_copy_17_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_219_copy_16 = new wxStaticBoxSizer(sizer_219_copy_16_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_219_copy_15 = new wxStaticBoxSizer(sizer_219_copy_15_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_219_copy_14 = new wxStaticBoxSizer(sizer_219_copy_14_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_219_copy_13 = new wxStaticBoxSizer(sizer_219_copy_13_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_219_copy_12 = new wxStaticBoxSizer(sizer_219_copy_12_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_219_copy_11 = new wxStaticBoxSizer(sizer_219_copy_11_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_219_copy_10 = new wxStaticBoxSizer(sizer_219_copy_10_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_219_copy_9 = new wxStaticBoxSizer(sizer_219_copy_9_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_219_copy_8 = new wxStaticBoxSizer(sizer_219_copy_8_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_279 = new wxStaticBoxSizer(sizer_279_staticbox, wxHORIZONTAL);
    wxGridSizer* grid_sizer_13 = new wxGridSizer(4, 2, 0, 2);
    wxStaticBoxSizer* sizer_219_copy_7 = new wxStaticBoxSizer(sizer_219_copy_7_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_219_copy_6 = new wxStaticBoxSizer(sizer_219_copy_6_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_219_copy_5 = new wxStaticBoxSizer(sizer_219_copy_5_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_219_copy_4 = new wxStaticBoxSizer(sizer_219_copy_4_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_219_copy_3 = new wxStaticBoxSizer(sizer_219_copy_3_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_219_copy_2 = new wxStaticBoxSizer(sizer_219_copy_2_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_219_copy_1 = new wxStaticBoxSizer(sizer_219_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_219_copy = new wxStaticBoxSizer(sizer_219_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_278 = new wxStaticBoxSizer(sizer_278_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_288_copy_2 = new wxStaticBoxSizer(sizer_288_copy_2_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_288_copy_1 = new wxStaticBoxSizer(sizer_288_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_288_copy = new wxStaticBoxSizer(sizer_288_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_288 = new wxStaticBoxSizer(sizer_288_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_259 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_273 = new wxStaticBoxSizer(sizer_273_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_272 = new wxStaticBoxSizer(sizer_272_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_271 = new wxStaticBoxSizer(sizer_271_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_287 = new wxStaticBoxSizer(sizer_287_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_286 = new wxStaticBoxSizer(sizer_286_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_285 = new wxStaticBoxSizer(sizer_285_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_126 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_255 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_264 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_266 = new wxStaticBoxSizer(sizer_266_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_267 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_268 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_66 = new wxStaticBoxSizer(sizer_257_copy_10_copy_66_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_65 = new wxStaticBoxSizer(sizer_257_copy_10_copy_65_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_64 = new wxStaticBoxSizer(sizer_257_copy_10_copy_64_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_63 = new wxStaticBoxSizer(sizer_257_copy_10_copy_63_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_62 = new wxStaticBoxSizer(sizer_257_copy_10_copy_62_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_61 = new wxStaticBoxSizer(sizer_257_copy_10_copy_61_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_265 = new wxStaticBoxSizer(sizer_265_staticbox, wxHORIZONTAL);
    wxGridSizer* grid_sizer_10 = new wxGridSizer(4, 4, 0, 2);
    wxStaticBoxSizer* sizer_257_copy_10_copy_60 = new wxStaticBoxSizer(sizer_257_copy_10_copy_60_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_59 = new wxStaticBoxSizer(sizer_257_copy_10_copy_59_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_58 = new wxStaticBoxSizer(sizer_257_copy_10_copy_58_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_57 = new wxStaticBoxSizer(sizer_257_copy_10_copy_57_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_56 = new wxStaticBoxSizer(sizer_257_copy_10_copy_56_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_55 = new wxStaticBoxSizer(sizer_257_copy_10_copy_55_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_54 = new wxStaticBoxSizer(sizer_257_copy_10_copy_54_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_53 = new wxStaticBoxSizer(sizer_257_copy_10_copy_53_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_52 = new wxStaticBoxSizer(sizer_257_copy_10_copy_52_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_51 = new wxStaticBoxSizer(sizer_257_copy_10_copy_51_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_50 = new wxStaticBoxSizer(sizer_257_copy_10_copy_50_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_49 = new wxStaticBoxSizer(sizer_257_copy_10_copy_49_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_48 = new wxStaticBoxSizer(sizer_257_copy_10_copy_48_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_263 = new wxStaticBoxSizer(sizer_263_staticbox, wxHORIZONTAL);
    wxGridSizer* grid_sizer_9 = new wxGridSizer(9, 2, 0, 2);
    wxStaticBoxSizer* sizer_257_copy_10_copy_47 = new wxStaticBoxSizer(sizer_257_copy_10_copy_47_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_46 = new wxStaticBoxSizer(sizer_257_copy_10_copy_46_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_45 = new wxStaticBoxSizer(sizer_257_copy_10_copy_45_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_44 = new wxStaticBoxSizer(sizer_257_copy_10_copy_44_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_43 = new wxStaticBoxSizer(sizer_257_copy_10_copy_43_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_42 = new wxStaticBoxSizer(sizer_257_copy_10_copy_42_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_41 = new wxStaticBoxSizer(sizer_257_copy_10_copy_41_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_40 = new wxStaticBoxSizer(sizer_257_copy_10_copy_40_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_39 = new wxStaticBoxSizer(sizer_257_copy_10_copy_39_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_38 = new wxStaticBoxSizer(sizer_257_copy_10_copy_38_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_37 = new wxStaticBoxSizer(sizer_257_copy_10_copy_37_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_36 = new wxStaticBoxSizer(sizer_257_copy_10_copy_36_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_35 = new wxStaticBoxSizer(sizer_257_copy_10_copy_35_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_34 = new wxStaticBoxSizer(sizer_257_copy_10_copy_34_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_33 = new wxStaticBoxSizer(sizer_257_copy_10_copy_33_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_32 = new wxStaticBoxSizer(sizer_257_copy_10_copy_32_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_31 = new wxStaticBoxSizer(sizer_257_copy_10_copy_31_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_30 = new wxStaticBoxSizer(sizer_257_copy_10_copy_30_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_254 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_261 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_262 = new wxStaticBoxSizer(sizer_262_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_269 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_7_copy_6_copy_4 = new wxStaticBoxSizer(sizer_257_copy_10_copy_7_copy_6_copy_4_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_7_copy_6_copy_3 = new wxStaticBoxSizer(sizer_257_copy_10_copy_7_copy_6_copy_3_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_7_copy_6_copy_2 = new wxStaticBoxSizer(sizer_257_copy_10_copy_7_copy_6_copy_2_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_274_copy = new wxStaticBoxSizer(sizer_274_copy_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_275_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_7_copy_6_copy_1_copy = new wxStaticBoxSizer(sizer_257_copy_10_copy_7_copy_6_copy_1_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_7_copy_6_copy_copy = new wxStaticBoxSizer(sizer_257_copy_10_copy_7_copy_6_copy_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_276_copy = new wxStaticBoxSizer(sizer_276_copy_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_277_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_274 = new wxStaticBoxSizer(sizer_274_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_275 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_7_copy_6_copy_1 = new wxStaticBoxSizer(sizer_257_copy_10_copy_7_copy_6_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_7_copy_6_copy = new wxStaticBoxSizer(sizer_257_copy_10_copy_7_copy_6_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_276 = new wxStaticBoxSizer(sizer_276_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_277 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_256_copy_3_copy_1 = new wxStaticBoxSizer(sizer_256_copy_3_copy_1_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_13_copy_1 = new wxStaticBoxSizer(sizer_257_copy_10_copy_13_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_12_copy_1 = new wxStaticBoxSizer(sizer_257_copy_10_copy_12_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_11_copy_1 = new wxStaticBoxSizer(sizer_257_copy_10_copy_11_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_10_copy_1 = new wxStaticBoxSizer(sizer_257_copy_10_copy_10_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_9_copy_1 = new wxStaticBoxSizer(sizer_257_copy_10_copy_9_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_8_copy_1 = new wxStaticBoxSizer(sizer_257_copy_10_copy_8_copy_1_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_258_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_7_copy_2_copy_1 = new wxStaticBoxSizer(sizer_257_copy_10_copy_7_copy_2_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_7_copy_1_copy_1 = new wxStaticBoxSizer(sizer_257_copy_10_copy_7_copy_1_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_7_copy_copy_1 = new wxStaticBoxSizer(sizer_257_copy_10_copy_7_copy_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_7_copy_4 = new wxStaticBoxSizer(sizer_257_copy_10_copy_7_copy_4_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_6_copy_1 = new wxStaticBoxSizer(sizer_257_copy_10_copy_6_copy_1_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_253 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_256_copy_3_copy = new wxStaticBoxSizer(sizer_256_copy_3_copy_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_13_copy = new wxStaticBoxSizer(sizer_257_copy_10_copy_13_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_12_copy = new wxStaticBoxSizer(sizer_257_copy_10_copy_12_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_11_copy = new wxStaticBoxSizer(sizer_257_copy_10_copy_11_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_10_copy = new wxStaticBoxSizer(sizer_257_copy_10_copy_10_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_9_copy = new wxStaticBoxSizer(sizer_257_copy_10_copy_9_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_8_copy = new wxStaticBoxSizer(sizer_257_copy_10_copy_8_copy_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_258_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_7_copy_2_copy = new wxStaticBoxSizer(sizer_257_copy_10_copy_7_copy_2_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_7_copy_1_copy = new wxStaticBoxSizer(sizer_257_copy_10_copy_7_copy_1_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_7_copy_copy = new wxStaticBoxSizer(sizer_257_copy_10_copy_7_copy_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_7_copy_3 = new wxStaticBoxSizer(sizer_257_copy_10_copy_7_copy_3_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_6_copy = new wxStaticBoxSizer(sizer_257_copy_10_copy_6_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_256_copy_3 = new wxStaticBoxSizer(sizer_256_copy_3_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_13 = new wxStaticBoxSizer(sizer_257_copy_10_copy_13_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_12 = new wxStaticBoxSizer(sizer_257_copy_10_copy_12_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_11 = new wxStaticBoxSizer(sizer_257_copy_10_copy_11_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_10 = new wxStaticBoxSizer(sizer_257_copy_10_copy_10_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_9 = new wxStaticBoxSizer(sizer_257_copy_10_copy_9_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_8 = new wxStaticBoxSizer(sizer_257_copy_10_copy_8_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_258 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_7_copy_2 = new wxStaticBoxSizer(sizer_257_copy_10_copy_7_copy_2_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_7_copy_1 = new wxStaticBoxSizer(sizer_257_copy_10_copy_7_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_7_copy = new wxStaticBoxSizer(sizer_257_copy_10_copy_7_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_7 = new wxStaticBoxSizer(sizer_257_copy_10_copy_7_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_6 = new wxStaticBoxSizer(sizer_257_copy_10_copy_6_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_252 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_256_copy_2 = new wxStaticBoxSizer(sizer_256_copy_2_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_257_copy_28 = new wxStaticBoxSizer(sizer_257_copy_28_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_27 = new wxStaticBoxSizer(sizer_257_copy_27_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_26 = new wxStaticBoxSizer(sizer_257_copy_26_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_25 = new wxStaticBoxSizer(sizer_257_copy_25_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_24 = new wxStaticBoxSizer(sizer_257_copy_24_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_23 = new wxStaticBoxSizer(sizer_257_copy_23_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_22 = new wxStaticBoxSizer(sizer_257_copy_22_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_21 = new wxStaticBoxSizer(sizer_257_copy_21_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_20 = new wxStaticBoxSizer(sizer_257_copy_20_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_256_copy_1 = new wxStaticBoxSizer(sizer_256_copy_1_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_257_copy_19 = new wxStaticBoxSizer(sizer_257_copy_19_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_18 = new wxStaticBoxSizer(sizer_257_copy_18_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_16 = new wxStaticBoxSizer(sizer_257_copy_16_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_17 = new wxStaticBoxSizer(sizer_257_copy_17_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_15 = new wxStaticBoxSizer(sizer_257_copy_15_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_14 = new wxStaticBoxSizer(sizer_257_copy_14_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_13 = new wxStaticBoxSizer(sizer_257_copy_13_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_12 = new wxStaticBoxSizer(sizer_257_copy_12_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_11 = new wxStaticBoxSizer(sizer_257_copy_11_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_251 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_256_copy = new wxStaticBoxSizer(sizer_256_copy_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_257_copy_8 = new wxStaticBoxSizer(sizer_257_copy_8_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_7 = new wxStaticBoxSizer(sizer_257_copy_7_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_6 = new wxStaticBoxSizer(sizer_257_copy_6_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_5 = new wxStaticBoxSizer(sizer_257_copy_5_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_4 = new wxStaticBoxSizer(sizer_257_copy_4_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_3 = new wxStaticBoxSizer(sizer_257_copy_3_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_5 = new wxStaticBoxSizer(sizer_257_copy_10_copy_5_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_4 = new wxStaticBoxSizer(sizer_257_copy_10_copy_4_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy = new wxStaticBoxSizer(sizer_257_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_256 = new wxStaticBoxSizer(sizer_256_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_257_copy_2 = new wxStaticBoxSizer(sizer_257_copy_2_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_9 = new wxStaticBoxSizer(sizer_257_copy_9_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_1 = new wxStaticBoxSizer(sizer_257_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_3 = new wxStaticBoxSizer(sizer_257_copy_10_copy_3_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_2 = new wxStaticBoxSizer(sizer_257_copy_10_copy_2_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy_1 = new wxStaticBoxSizer(sizer_257_copy_10_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10_copy = new wxStaticBoxSizer(sizer_257_copy_10_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257_copy_10 = new wxStaticBoxSizer(sizer_257_copy_10_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_257 = new wxStaticBoxSizer(sizer_257_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_125_copy_6 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_240 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_245 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_250 = new wxStaticBoxSizer(sizer_250_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_244 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_249 = new wxStaticBoxSizer(sizer_249_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_246 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_248 = new wxStaticBoxSizer(sizer_248_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_247 = new wxStaticBoxSizer(sizer_247_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_241 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_243 = new wxStaticBoxSizer(sizer_243_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_242 = new wxStaticBoxSizer(sizer_242_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_83_copy_copy_6 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_125_copy_5 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_231 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_237 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_239 = new wxStaticBoxSizer(sizer_239_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_236 = new wxStaticBoxSizer(sizer_236_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_238 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_232 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_235 = new wxStaticBoxSizer(sizer_235_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_234 = new wxStaticBoxSizer(sizer_234_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_233 = new wxStaticBoxSizer(sizer_233_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_83_copy_copy_5 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_125_copy_4 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_215 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_222 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_225 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_230 = new wxStaticBoxSizer(sizer_230_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_229 = new wxStaticBoxSizer(sizer_229_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_224 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_228 = new wxStaticBoxSizer(sizer_228_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_223 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_227 = new wxStaticBoxSizer(sizer_227_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_226 = new wxStaticBoxSizer(sizer_226_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_216 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_220 = new wxStaticBoxSizer(sizer_220_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_219 = new wxStaticBoxSizer(sizer_219_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_218 = new wxStaticBoxSizer(sizer_218_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_83_copy_copy_4 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_125_copy_3 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_188 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_196 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_200 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_203 = new wxStaticBoxSizer(sizer_203_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_214 = new wxStaticBoxSizer(sizer_214_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_213 = new wxStaticBoxSizer(sizer_213_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_202 = new wxStaticBoxSizer(sizer_202_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_205 = new wxStaticBoxSizer(sizer_205_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_204 = new wxStaticBoxSizer(sizer_204_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_199 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_217_copy_3 = new wxStaticBoxSizer(sizer_217_copy_3_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_217_copy_2 = new wxStaticBoxSizer(sizer_217_copy_2_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_217_copy_1 = new wxStaticBoxSizer(sizer_217_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_217_copy = new wxStaticBoxSizer(sizer_217_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_217 = new wxStaticBoxSizer(sizer_217_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_195 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_197 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_198 = new wxStaticBoxSizer(sizer_198_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_8 = new wxFlexGridSizer(2, 3, 2, 2);
    wxBoxSizer* sizer_208 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_212 = new wxStaticBoxSizer(sizer_212_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_209 = new wxStaticBoxSizer(sizer_209_staticbox, wxHORIZONTAL);
    wxGridSizer* grid_sizer_15 = new wxGridSizer(2, 2, 2, 2);
    wxStaticBoxSizer* sizer_201 = new wxStaticBoxSizer(sizer_201_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_206 = new wxStaticBoxSizer(sizer_206_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_207 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_221 = new wxStaticBoxSizer(sizer_221_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_7 = new wxFlexGridSizer(2, 3, 2, 2);
    wxStaticBoxSizer* sizer_49_copy_1 = new wxStaticBoxSizer(sizer_49_copy_1_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_12_copy = new wxFlexGridSizer(5, 3, 2, 2);
    wxBoxSizer* sizer_189 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_194 = new wxStaticBoxSizer(sizer_194_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_193 = new wxStaticBoxSizer(sizer_193_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_192 = new wxStaticBoxSizer(sizer_192_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_191 = new wxStaticBoxSizer(sizer_191_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_190 = new wxStaticBoxSizer(sizer_190_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_83_copy_copy_3 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_125_copy_2 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_184 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_49 = new wxStaticBoxSizer(sizer_49_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_12 = new wxFlexGridSizer(5, 3, 2, 2);
    wxStaticBoxSizer* sizer_185 = new wxStaticBoxSizer(sizer_185_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_83_copy_copy_2 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_125_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_161 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_176 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_29 = new wxStaticBoxSizer(sizer_29_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_31 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_32 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_30 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_28 = new wxStaticBoxSizer(sizer_28_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_175 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_27 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_167 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_177 = new wxStaticBoxSizer(sizer_177_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_83_copy_copy_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_125_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_139 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_145 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_146 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_148 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_165 = new wxStaticBoxSizer(sizer_165_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_164 = new wxStaticBoxSizer(sizer_164_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_147 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_166 = new wxStaticBoxSizer(sizer_166_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_149 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_150 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_163 = new wxStaticBoxSizer(sizer_163_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_162 = new wxStaticBoxSizer(sizer_162_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_168 = new wxStaticBoxSizer(sizer_168_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_170 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_174 = new wxStaticBoxSizer(sizer_174_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_173 = new wxStaticBoxSizer(sizer_173_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_169 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_172 = new wxStaticBoxSizer(sizer_172_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_171 = new wxStaticBoxSizer(sizer_171_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_140 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_159 = new wxStaticBoxSizer(sizer_159_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_160 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_144 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_152 = new wxStaticBoxSizer(sizer_152_staticbox, wxHORIZONTAL);
    wxGridSizer* grid_sizer_6 = new wxGridSizer(2, 3, 0, 2);
    wxStaticBoxSizer* sizer_158 = new wxStaticBoxSizer(sizer_158_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_156 = new wxStaticBoxSizer(sizer_156_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_154 = new wxStaticBoxSizer(sizer_154_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_157 = new wxStaticBoxSizer(sizer_157_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_155 = new wxStaticBoxSizer(sizer_155_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_153 = new wxStaticBoxSizer(sizer_153_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_151 = new wxStaticBoxSizer(sizer_151_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_83_copy_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_125 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_101 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_130 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_138 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_143 = new wxStaticBoxSizer(sizer_143_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_142 = new wxStaticBoxSizer(sizer_142_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_141 = new wxStaticBoxSizer(sizer_141_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_137 = new wxStaticBoxSizer(sizer_137_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_136 = new wxStaticBoxSizer(sizer_136_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_129 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_135 = new wxStaticBoxSizer(sizer_135_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_102 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_134 = new wxStaticBoxSizer(sizer_134_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_133 = new wxStaticBoxSizer(sizer_133_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_132 = new wxStaticBoxSizer(sizer_132_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_131 = new wxStaticBoxSizer(sizer_131_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_83_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_64 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_98 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_103 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_110 = new wxStaticBoxSizer(sizer_110_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_106 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_124 = new wxStaticBoxSizer(sizer_124_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_122 = new wxStaticBoxSizer(sizer_122_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_105 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_123 = new wxStaticBoxSizer(sizer_123_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_121 = new wxStaticBoxSizer(sizer_121_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_104 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_120 = new wxStaticBoxSizer(sizer_120_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_119 = new wxStaticBoxSizer(sizer_119_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_118 = new wxStaticBoxSizer(sizer_118_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_100 = new wxBoxSizer(wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_5 = new wxFlexGridSizer(2, 2, 0, 0);
    wxStaticBoxSizer* sizer_111 = new wxStaticBoxSizer(sizer_111_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_109 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_113 = new wxStaticBoxSizer(sizer_113_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_112 = new wxStaticBoxSizer(sizer_112_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_128 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_117 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_108 = new wxStaticBoxSizer(sizer_108_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_107 = new wxStaticBoxSizer(sizer_107_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_99 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_116 = new wxStaticBoxSizer(sizer_116_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_115 = new wxStaticBoxSizer(sizer_115_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_114 = new wxStaticBoxSizer(sizer_114_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_83 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* EasyRPGSizerActorsMain = new wxBoxSizer(wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_1 = new wxFlexGridSizer(2, 2, 0, 0);
    wxBoxSizer* sizer_4 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_11 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_21 = new wxStaticBoxSizer(sizer_21_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_20 = new wxStaticBoxSizer(sizer_20_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_10 = new wxStaticBoxSizer(sizer_10_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_19 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_9 = new wxStaticBoxSizer(sizer_9_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_3 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_8 = new wxStaticBoxSizer(sizer_8_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_7 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_18 = new wxStaticBoxSizer(sizer_18_staticbox, wxHORIZONTAL);
    wxGridSizer* grid_sizer_3 = new wxGridSizer(3, 2, 0, 2);
    wxStaticBoxSizer* sizer_183 = new wxStaticBoxSizer(sizer_183_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_182 = new wxStaticBoxSizer(sizer_182_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_181 = new wxStaticBoxSizer(sizer_181_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_180 = new wxStaticBoxSizer(sizer_180_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_179 = new wxStaticBoxSizer(sizer_179_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_178 = new wxStaticBoxSizer(sizer_178_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_17 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_26 = new wxStaticBoxSizer(sizer_26_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_25 = new wxStaticBoxSizer(sizer_25_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_2 = new wxStaticBoxSizer(sizer_2_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_2 = new wxFlexGridSizer(5, 2, 2, 2);
    wxBoxSizer* sizer_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_6 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_16 = new wxStaticBoxSizer(sizer_16_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_15 = new wxStaticBoxSizer(sizer_15_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_14 = new wxStaticBoxSizer(sizer_14_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_5 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_13 = new wxStaticBoxSizer(sizer_13_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_24 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_12 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_23 = new wxStaticBoxSizer(sizer_23_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_22 = new wxStaticBoxSizer(sizer_22_staticbox, wxHORIZONTAL);
    wxBoxSizer* EasyRPGSizerActorsLeft = new wxBoxSizer(wxVERTICAL);
    EasyRPGSizerActorsLeft->Add(EasyRPGActorsLabelActors, 0, wxEXPAND, 0);
    EasyRPGSizerActorsLeft->Add(EasyRPGActorsListBoxActors, 1, wxALL, 1);
    EasyRPGSizerActorsLeft->Add(EasyRPGActorsButtonMaxNumber, 0, wxALL|wxEXPAND, 1);
    EasyRPGSizerActorsMain->Add(EasyRPGSizerActorsLeft, 0, wxEXPAND, 0);
    sizer_22->Add(text_ctrl_3, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_12->Add(sizer_22, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_23->Add(text_ctrl_4, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_12->Add(sizer_23, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_5->Add(sizer_12, 1, wxEXPAND, 0);
    sizer_13->Add(bitmap_1, 0, wxRIGHT|wxALIGN_BOTTOM, 1);
    sizer_24->Add(checkbox_3, 1, wxLEFT|wxBOTTOM, 1);
    sizer_24->Add(button_2, 0, wxLEFT|wxTOP|wxALIGN_BOTTOM, 1);
    sizer_13->Add(sizer_24, 1, wxEXPAND, 0);
    sizer_5->Add(sizer_13, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_1->Add(sizer_5, 0, wxEXPAND, 0);
    sizer_14->Add(spin_ctrl_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_6->Add(sizer_14, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_15->Add(spin_ctrl_2, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_6->Add(sizer_15, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_16->Add(checkbox_1, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_16->Add(spin_ctrl_3, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_6->Add(sizer_16, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_1->Add(sizer_6, 1, wxEXPAND, 0);
    grid_sizer_1->Add(sizer_1, 0, wxEXPAND, 0);
    grid_sizer_2->Add(label_1, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_2->Add(choice_1, 0, wxEXPAND, 0);
    grid_sizer_2->Add(label_2, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_2->Add(choice_2, 0, wxEXPAND, 0);
    grid_sizer_2->Add(label_3, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_2->Add(choice_3, 0, wxEXPAND, 0);
    grid_sizer_2->Add(label_4, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_2->Add(choice_4, 0, wxEXPAND, 0);
    grid_sizer_2->Add(label_5, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_2->Add(choice_5, 0, wxEXPAND, 0);
    grid_sizer_2->AddGrowableCol(1);
    sizer_2->Add(grid_sizer_2, 1, wxEXPAND, 0);
    grid_sizer_1->Add(sizer_2, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_25->Add(bitmap_2, 0, wxBOTTOM, 1);
    sizer_25->Add(button_3, 0, wxTOP, 1);
    sizer_17->Add(sizer_25, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_26->Add(checkbox_4, 0, wxBOTTOM|wxEXPAND, 1);
    sizer_26->Add(checkbox_5, 0, wxTOP|wxBOTTOM|wxEXPAND, 1);
    sizer_26->Add(checkbox_6, 0, wxTOP|wxBOTTOM|wxEXPAND, 1);
    sizer_26->Add(checkbox_7, 0, wxTOP|wxEXPAND, 1);
    sizer_17->Add(sizer_26, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_7->Add(sizer_17, 0, wxEXPAND, 0);
    sizer_178->Add(bitmap_14, 0, 0, 0);
    grid_sizer_3->Add(sizer_178, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_179->Add(bitmap_14_copy, 0, 0, 0);
    grid_sizer_3->Add(sizer_179, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_180->Add(bitmap_14_copy_1, 0, 0, 0);
    grid_sizer_3->Add(sizer_180, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_181->Add(bitmap_14_copy_2, 0, 0, 0);
    grid_sizer_3->Add(sizer_181, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_182->Add(bitmap_14_copy_3, 0, 0, 0);
    grid_sizer_3->Add(sizer_182, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_183->Add(bitmap_14_copy_4, 0, 0, 0);
    grid_sizer_3->Add(sizer_183, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_18->Add(grid_sizer_3, 1, wxEXPAND, 0);
    sizer_7->Add(sizer_18, 1, wxLEFT|wxRIGHT, 1);
    sizer_3->Add(sizer_7, 0, wxEXPAND, 0);
    sizer_8->Add(text_ctrl_1, 1, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_8->Add(button_1, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_3->Add(sizer_8, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    grid_sizer_1->Add(sizer_3, 0, wxEXPAND, 0);
    sizer_9->Add(choice_6, 1, 0, 0);
    sizer_4->Add(sizer_9, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_10->Add(list_ctrl_1, 0, wxBOTTOM|wxEXPAND, 1);
    sizer_19->Add(checkbox_2, 0, wxRIGHT|wxTOP|wxALIGN_CENTER_VERTICAL, 1);
    sizer_19->Add(text_ctrl_2, 1, wxLEFT|wxTOP, 1);
    sizer_10->Add(sizer_19, 0, wxEXPAND, 0);
    sizer_4->Add(sizer_10, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_20->Add(list_box_1, 1, wxEXPAND, 0);
    sizer_11->Add(sizer_20, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_21->Add(list_box_2, 1, wxEXPAND, 0);
    sizer_11->Add(sizer_21, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_4->Add(sizer_11, 1, wxEXPAND, 0);
    grid_sizer_1->Add(sizer_4, 1, wxEXPAND, 0);
    grid_sizer_1->AddGrowableRow(1);
    grid_sizer_1->AddGrowableCol(1);
    EasyRPGSizerActorsMain->Add(grid_sizer_1, 1, wxEXPAND, 0);
    EasyRPGNotebookActors->SetSizer(EasyRPGSizerActorsMain);
    sizer_83->Add(label_25, 0, wxEXPAND, 0);
    sizer_83->Add(list_box_7, 1, wxALL, 1);
    sizer_83->Add(button_31, 0, wxALL|wxEXPAND, 1);
    sizer_64->Add(sizer_83, 0, wxEXPAND, 0);
    sizer_114->Add(text_ctrl_14, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_99->Add(sizer_114, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_115->Add(choice_19, 1, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_99->Add(sizer_115, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_116->Add(spin_ctrl_12, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_99->Add(sizer_116, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_99->Add(0, 0, 1, wxEXPAND, 0);
    sizer_98->Add(sizer_99, 0, wxEXPAND, 0);
    sizer_107->Add(text_ctrl_12, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_5->Add(sizer_107, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_108->Add(choice_17, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_5->Add(sizer_108, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_117->Add(label_26, 0, wxRIGHT|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_117->Add(text_ctrl_13, 1, wxLEFT|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_112->Add(sizer_117, 1, wxEXPAND, 0);
    sizer_112->Add(text_ctrl_15, 0, wxTOP|wxBOTTOM|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    sizer_128->Add(button_32, 1, wxRIGHT|wxTOP|wxALIGN_CENTER_VERTICAL, 1);
    sizer_128->Add(button_33, 1, wxLEFT|wxRIGHT|wxTOP|wxALIGN_CENTER_VERTICAL, 1);
    sizer_128->Add(button_34, 1, wxLEFT|wxTOP|wxALIGN_CENTER_VERTICAL, 1);
    sizer_112->Add(sizer_128, 1, wxEXPAND, 0);
    sizer_109->Add(sizer_112, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_113->Add(label_27, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_113->Add(text_ctrl_16, 1, wxLEFT, 1);
    sizer_109->Add(sizer_113, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    grid_sizer_5->Add(sizer_109, 1, wxEXPAND, 0);
    sizer_111->Add(bitmap_11, 0, wxBOTTOM, 1);
    sizer_111->Add(choice_18, 0, wxTOP|wxEXPAND, 1);
    grid_sizer_5->Add(sizer_111, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    grid_sizer_5->AddGrowableCol(0);
    sizer_100->Add(grid_sizer_5, 1, wxEXPAND, 0);
    sizer_98->Add(sizer_100, 0, wxEXPAND, 0);
    sizer_118->Add(slider_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_104->Add(sizer_118, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_119->Add(slider_6, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_104->Add(sizer_119, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_120->Add(slider_7, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_104->Add(sizer_120, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_103->Add(sizer_104, 1, wxEXPAND, 0);
    sizer_121->Add(spin_ctrl_13, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_105->Add(sizer_121, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_123->Add(checkbox_10, 0, wxBOTTOM|wxEXPAND, 1);
    sizer_123->Add(checkbox_10_copy, 0, wxTOP|wxBOTTOM|wxEXPAND, 1);
    sizer_123->Add(checkbox_10_copy_1, 0, wxTOP|wxBOTTOM|wxEXPAND, 1);
    sizer_123->Add(checkbox_10_copy_2, 0, wxTOP|wxBOTTOM|wxEXPAND, 1);
    sizer_123->Add(checkbox_10_copy_3, 0, wxTOP|wxBOTTOM|wxEXPAND, 1);
    sizer_123->Add(checkbox_10_copy_4, 0, wxTOP|wxBOTTOM|wxEXPAND, 1);
    sizer_123->Add(checkbox_10_copy_5, 0, wxTOP|wxBOTTOM|wxEXPAND, 1);
    sizer_123->Add(checkbox_10_copy_6, 0, wxTOP|wxEXPAND, 1);
    sizer_105->Add(sizer_123, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_103->Add(sizer_105, 0, wxEXPAND, 0);
    sizer_122->Add(spin_ctrl_14, 1, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_122->Add(label_28, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_106->Add(sizer_122, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_124->Add(list_box_8, 1, wxEXPAND, 0);
    sizer_106->Add(sizer_124, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_103->Add(sizer_106, 1, wxEXPAND, 0);
    sizer_110->Add(list_box_9, 1, wxBOTTOM|wxEXPAND, 1);
    sizer_110->Add(checkbox_22, 0, wxTOP|wxEXPAND, 1);
    sizer_103->Add(sizer_110, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_98->Add(sizer_103, 1, wxEXPAND, 0);
    sizer_64->Add(sizer_98, 1, wxEXPAND, 0);
    EasyRPGNotebookSkills->SetSizer(sizer_64);
    sizer_83_copy->Add(label_25_copy, 0, wxEXPAND, 0);
    sizer_83_copy->Add(list_box_7_copy, 1, wxALL, 1);
    sizer_83_copy->Add(button_31_copy, 0, wxALL|wxEXPAND, 1);
    sizer_125->Add(sizer_83_copy, 0, wxEXPAND, 0);
    sizer_131->Add(text_ctrl_17, 1, 0, 0);
    sizer_102->Add(sizer_131, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_132->Add(choice_20, 1, 0, 0);
    sizer_102->Add(sizer_132, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_133->Add(spin_ctrl_15, 1, 0, 0);
    sizer_102->Add(sizer_133, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_134->Add(choice_21, 1, 0, 0);
    sizer_102->Add(sizer_134, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_101->Add(sizer_102, 0, wxEXPAND, 0);
    sizer_135->Add(text_ctrl_18, 1, 0, 0);
    sizer_129->Add(sizer_135, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_129->Add(radio_box_5, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_101->Add(sizer_129, 0, wxEXPAND, 0);
    sizer_136->Add(list_box_10, 1, wxEXPAND, 0);
    sizer_130->Add(sizer_136, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_137->Add(list_box_11, 1, wxEXPAND, 0);
    sizer_130->Add(sizer_137, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_141->Add(label_29, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_141->Add(spin_ctrl_16, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_141->Add(label_30, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_141->Add(spin_ctrl_17, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_141->Add(label_31, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_138->Add(sizer_141, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_142->Add(label_32, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_142->Add(spin_ctrl_18, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_142->Add(label_33, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_142->Add(spin_ctrl_19, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_142->Add(label_34, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_138->Add(sizer_142, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_143->Add(checkbox_23, 0, wxBOTTOM|wxEXPAND, 1);
    sizer_143->Add(checkbox_24, 0, wxTOP|wxEXPAND, 1);
    sizer_138->Add(sizer_143, 0, wxLEFT|wxRIGHT|wxBOTTOM, 1);
    sizer_130->Add(sizer_138, 0, wxEXPAND, 0);
    sizer_101->Add(sizer_130, 1, wxEXPAND, 0);
    sizer_125->Add(sizer_101, 1, wxEXPAND, 0);
    EasyRPGNotebookItems->SetSizer(sizer_125);
    sizer_83_copy_copy->Add(label_25_copy_copy, 0, wxEXPAND, 0);
    sizer_83_copy_copy->Add(list_box_7_copy_copy, 1, wxALL, 1);
    sizer_83_copy_copy->Add(button_31_copy_copy, 0, wxALL|wxEXPAND, 1);
    sizer_125_copy->Add(sizer_83_copy_copy, 0, wxEXPAND, 0);
    sizer_151->Add(text_ctrl_19, 1, 0, 0);
    sizer_144->Add(sizer_151, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_153->Add(spin_ctrl_20, 1, 0, 0);
    grid_sizer_6->Add(sizer_153, 0, wxEXPAND, 0);
    sizer_155->Add(spin_ctrl_20_copy, 1, 0, 0);
    grid_sizer_6->Add(sizer_155, 0, wxEXPAND, 0);
    sizer_157->Add(spin_ctrl_20_copy_1, 1, 0, 0);
    grid_sizer_6->Add(sizer_157, 0, wxEXPAND, 0);
    sizer_154->Add(spin_ctrl_20_copy_2, 1, 0, 0);
    grid_sizer_6->Add(sizer_154, 0, wxEXPAND, 0);
    sizer_156->Add(spin_ctrl_20_copy_3, 1, 0, 0);
    grid_sizer_6->Add(sizer_156, 0, wxEXPAND, 0);
    sizer_158->Add(spin_ctrl_20_copy_4, 1, 0, 0);
    grid_sizer_6->Add(sizer_158, 0, wxEXPAND, 0);
    sizer_152->Add(grid_sizer_6, 1, 0, 0);
    sizer_144->Add(sizer_152, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_140->Add(sizer_144, 1, wxEXPAND, 0);
    sizer_159->Add(bitmap_12, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_160->Add(checkbox_25, 0, wxLEFT|wxBOTTOM|wxEXPAND, 1);
    sizer_160->Add(checkbox_26, 0, wxLEFT|wxTOP|wxBOTTOM|wxEXPAND, 1);
    sizer_160->Add(0, 0, 1, 0, 0);
    sizer_160->Add(button_35, 0, wxLEFT|wxTOP, 1);
    sizer_159->Add(sizer_160, 1, wxEXPAND, 0);
    sizer_140->Add(sizer_159, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_139->Add(sizer_140, 0, wxEXPAND, 0);
    sizer_171->Add(spin_ctrl_22, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_169->Add(sizer_171, 1, wxRIGHT|wxEXPAND, 1);
    sizer_172->Add(spin_ctrl_23, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_169->Add(sizer_172, 1, wxRIGHT|wxEXPAND, 1);
    sizer_168->Add(sizer_169, 0, wxEXPAND, 0);
    sizer_173->Add(choice_22, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_170->Add(sizer_173, 1, wxLEFT|wxEXPAND, 1);
    sizer_174->Add(0, 0, 1, wxEXPAND, 0);
    sizer_174->Add(spin_ctrl_24, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_174->Add(label_35, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_170->Add(sizer_174, 1, wxLEFT|wxEXPAND, 1);
    sizer_168->Add(sizer_170, 1, wxEXPAND, 0);
    sizer_149->Add(sizer_168, 1, wxLEFT|wxRIGHT, 1);
    sizer_162->Add(checkbox_27, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_162->Add(spin_ctrl_21, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_150->Add(sizer_162, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_163->Add(checkbox_28, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_150->Add(sizer_163, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_149->Add(sizer_150, 0, wxEXPAND, 0);
    sizer_147->Add(sizer_149, 0, wxEXPAND, 0);
    sizer_166->Add(list_ctrl_3, 1, wxEXPAND, 0);
    sizer_147->Add(sizer_166, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_146->Add(sizer_147, 5, wxEXPAND, 0);
    sizer_164->Add(list_box_12, 1, wxEXPAND, 0);
    sizer_148->Add(sizer_164, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_165->Add(list_box_13, 1, wxEXPAND, 0);
    sizer_148->Add(sizer_165, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_146->Add(sizer_148, 2, wxEXPAND, 0);
    sizer_145->Add(sizer_146, 1, wxEXPAND, 0);
    sizer_139->Add(sizer_145, 1, wxEXPAND, 0);
    sizer_125_copy->Add(sizer_139, 1, wxEXPAND, 0);
    EasyRPGNotebookEnemies->SetSizer(sizer_125_copy);
    sizer_83_copy_copy_1->Add(label_25_copy_copy_1, 0, wxEXPAND, 0);
    sizer_83_copy_copy_1->Add(list_box_7_copy_copy_1, 1, wxALL, 1);
    sizer_83_copy_copy_1->Add(button_31_copy_copy_1, 0, wxALL|wxEXPAND, 1);
    sizer_125_copy_1->Add(sizer_83_copy_copy_1, 0, wxEXPAND, 0);
    sizer_177->Add(text_ctrl_20, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_167->Add(sizer_177, 1, wxLEFT|wxRIGHT|wxBOTTOM, 1);
    sizer_167->Add(button_36, 1, wxALL|wxALIGN_CENTER_VERTICAL, 1);
    sizer_167->Add(button_37, 1, wxALL|wxALIGN_CENTER_VERTICAL, 1);
    sizer_167->Add(button_38, 1, wxALL|wxALIGN_CENTER_VERTICAL, 1);
    sizer_161->Add(sizer_167, 0, wxEXPAND, 0);
    sizer_175->Add(bitmap_13, 0, wxALL, 1);
    sizer_27->Add(0, 0, 1, wxEXPAND, 0);
    sizer_27->Add(button_39, 0, wxALL, 1);
    sizer_27->Add(button_39_copy, 0, wxALL, 1);
    sizer_27->Add(button_39_copy_1, 0, wxALL, 1);
    sizer_27->Add(button_39_copy_2, 0, wxALL, 1);
    sizer_27->Add(0, 0, 1, wxEXPAND, 0);
    sizer_175->Add(sizer_27, 0, wxEXPAND, 0);
    sizer_175->Add(list_box_14, 1, wxALL|wxEXPAND, 1);
    sizer_161->Add(sizer_175, 0, wxEXPAND, 0);
    sizer_28->Add(list_box_15, 1, wxEXPAND, 0);
    sizer_176->Add(sizer_28, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_30->Add(button_40, 1, wxRIGHT|wxBOTTOM, 1);
    sizer_30->Add(button_40_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM, 1);
    sizer_30->Add(button_40_copy_1, 1, wxLEFT|wxRIGHT|wxBOTTOM, 1);
    sizer_30->Add(button_40_copy_2, 1, wxLEFT|wxBOTTOM, 1);
    sizer_29->Add(sizer_30, 0, wxEXPAND, 0);
    sizer_32->Add(label_6, 0, wxALL|wxALIGN_CENTER_VERTICAL, 1);
    sizer_32->Add(text_ctrl_21, 1, wxLEFT|wxTOP|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_32->Add(button_41, 0, wxRIGHT|wxTOP|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_31->Add(sizer_32, 0, wxEXPAND, 0);
    sizer_31->Add(list_box_16, 1, wxALL|wxEXPAND, 1);
    notebook_3_pane_1->SetSizer(sizer_31);
    notebook_3->AddPage(notebook_3_pane_1, _("1"));
    sizer_29->Add(new wxNotebookSizer(notebook_3), 1, wxTOP|wxEXPAND, 1);
    sizer_176->Add(sizer_29, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_161->Add(sizer_176, 1, wxEXPAND, 0);
    sizer_125_copy_1->Add(sizer_161, 1, wxEXPAND, 0);
    EasyRPGNotebookTroops->SetSizer(sizer_125_copy_1);
    sizer_83_copy_copy_2->Add(label_25_copy_copy_2, 0, wxEXPAND, 0);
    sizer_83_copy_copy_2->Add(list_box_7_copy_copy_2, 1, wxALL, 1);
    sizer_83_copy_copy_2->Add(button_31_copy_copy_2, 0, wxALL|wxEXPAND, 1);
    sizer_125_copy_2->Add(sizer_83_copy_copy_2, 0, wxEXPAND, 0);
    sizer_185->Add(text_ctrl_22, 1, 0, 0);
    sizer_184->Add(sizer_185, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_184->Add(radio_box_6, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    grid_sizer_12->Add(label_7, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_12->Add(spin_ctrl_7, 0, wxEXPAND, 0);
    grid_sizer_12->Add(label_7_copy_5, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_12->Add(label_7_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_12->Add(spin_ctrl_7_copy_1, 0, wxEXPAND, 0);
    grid_sizer_12->Add(label_7_copy_5_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_12->Add(label_7_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_12->Add(spin_ctrl_7_copy_2, 0, wxEXPAND, 0);
    grid_sizer_12->Add(label_7_copy_5_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_12->Add(label_7_copy_2, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_12->Add(spin_ctrl_7_copy_3, 0, wxEXPAND, 0);
    grid_sizer_12->Add(label_7_copy_5_copy_2, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_12->Add(label_7_copy_3, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_12->Add(spin_ctrl_7_copy_4, 0, wxEXPAND, 0);
    grid_sizer_12->Add(label_7_copy_5_copy_3, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_12->AddGrowableCol(1);
    sizer_49->Add(grid_sizer_12, 1, wxEXPAND, 0);
    sizer_184->Add(sizer_49, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_125_copy_2->Add(sizer_184, 0, wxEXPAND, 0);
    EasyRPGNotebookArmors->SetSizer(sizer_125_copy_2);
    sizer_83_copy_copy_3->Add(label_25_copy_copy_3, 0, wxEXPAND, 0);
    sizer_83_copy_copy_3->Add(list_box_7_copy_copy_3, 1, wxALL, 1);
    sizer_83_copy_copy_3->Add(button_31_copy_copy_3, 0, wxALL|wxEXPAND, 1);
    sizer_125_copy_3->Add(sizer_83_copy_copy_3, 0, wxEXPAND, 0);
    sizer_190->Add(text_ctrl_23, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_189->Add(sizer_190, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_191->Add(choice_23, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_189->Add(sizer_191, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_192->Add(choice_24, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_189->Add(sizer_192, 0, wxRIGHT|wxEXPAND, 1);
    sizer_193->Add(spin_ctrl_26, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_189->Add(sizer_193, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_194->Add(choice_25, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_189->Add(sizer_194, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_188->Add(sizer_189, 0, wxEXPAND, 0);
    grid_sizer_12_copy->Add(label_7_copy_4, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_12_copy->Add(spin_ctrl_7_copy_5, 0, wxEXPAND, 0);
    grid_sizer_12_copy->Add(label_7_copy_5_copy_4, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_12_copy->Add(label_7_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_12_copy->Add(spin_ctrl_7_copy_1_copy, 0, wxEXPAND, 0);
    grid_sizer_12_copy->Add(label_7_copy_5_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_12_copy->Add(label_7_copy_1_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_12_copy->Add(spin_ctrl_7_copy_2_copy, 0, wxEXPAND, 0);
    grid_sizer_12_copy->Add(label_7_copy_5_copy_1_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_12_copy->Add(label_7_copy_2_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_12_copy->Add(spin_ctrl_7_copy_3_copy, 0, wxEXPAND, 0);
    grid_sizer_12_copy->Add(label_7_copy_5_copy_2_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_12_copy->Add(label_7_copy_3_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_12_copy->Add(spin_ctrl_7_copy_4_copy, 0, wxEXPAND, 0);
    grid_sizer_12_copy->Add(label_7_copy_5_copy_3_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_12_copy->AddGrowableCol(1);
    sizer_49_copy_1->Add(grid_sizer_12_copy, 1, wxEXPAND, 0);
    sizer_195->Add(sizer_49_copy_1, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    grid_sizer_7->Add(label_37, 0, wxALIGN_RIGHT|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_7->Add(spin_ctrl_29, 0, 0, 0);
    grid_sizer_7->Add(label_38, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_7->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_7->Add(spin_ctrl_30, 0, 0, 0);
    grid_sizer_7->Add(label_39, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_221->Add(grid_sizer_7, 1, wxEXPAND, 0);
    sizer_201->Add(sizer_221, 1, wxEXPAND, 0);
    sizer_206->Add(label_40, 0, wxBOTTOM, 1);
    sizer_207->Add(spin_ctrl_31, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_207->Add(label_41, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_206->Add(sizer_207, 1, wxEXPAND, 0);
    sizer_201->Add(sizer_206, 1, wxEXPAND, 0);
    sizer_195->Add(sizer_201, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    grid_sizer_15->Add(checkbox_8, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_15->Add(checkbox_8_copy_2, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_15->Add(checkbox_8_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_15->Add(checkbox_8_copy_3, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_209->Add(grid_sizer_15, 1, wxEXPAND, 0);
    sizer_208->Add(sizer_209, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_212->Add(spin_ctrl_27, 0, wxRIGHT, 1);
    sizer_212->Add(label_10, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_208->Add(sizer_212, 0, wxLEFT|wxRIGHT, 1);
    sizer_197->Add(sizer_208, 1, wxEXPAND, 0);
    grid_sizer_8->Add(checkbox_33, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_8->Add(spin_ctrl_28, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_8->Add(label_11, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_8->Add(checkbox_34, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_8->Add(spin_ctrl_32, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_8->Add(label_36, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_8->AddGrowableRow(0);
    grid_sizer_8->AddGrowableRow(1);
    sizer_198->Add(grid_sizer_8, 1, wxEXPAND, 0);
    sizer_197->Add(sizer_198, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_195->Add(sizer_197, 1, wxEXPAND, 0);
    sizer_188->Add(sizer_195, 0, wxEXPAND, 0);
    sizer_217->Add(label_9, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_217->Add(text_ctrl_24, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_199->Add(sizer_217, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_217_copy->Add(label_9_copy, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_217_copy->Add(text_ctrl_24_copy, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_199->Add(sizer_217_copy, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_217_copy_1->Add(label_9_copy_1, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_217_copy_1->Add(text_ctrl_24_copy_1, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_199->Add(sizer_217_copy_1, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_217_copy_2->Add(label_9_copy_2, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_217_copy_2->Add(text_ctrl_24_copy_2, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_199->Add(sizer_217_copy_2, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_217_copy_3->Add(label_9_copy_3, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_217_copy_3->Add(text_ctrl_24_copy_3, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_199->Add(sizer_217_copy_3, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_196->Add(sizer_199, 1, wxEXPAND, 0);
    sizer_204->Add(label_42, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_204->Add(spin_ctrl_33, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_204->Add(label_42_copy, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_204->Add(spin_ctrl_33_copy, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_204->Add(label_42_copy_1, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_202->Add(sizer_204, 1, wxEXPAND, 0);
    sizer_205->Add(spin_ctrl_33_copy_1, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_205->Add(label_42_copy_2, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_205->Add(spin_ctrl_33_copy_2, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_205->Add(label_42_copy_3, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_202->Add(sizer_205, 1, wxEXPAND, 0);
    sizer_200->Add(sizer_202, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_213->Add(label_42_copy_4, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_213->Add(spin_ctrl_33_copy_3, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_213->Add(label_42_copy_5, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_213->Add(spin_ctrl_33_copy_4, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_213->Add(label_42_copy_6, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_203->Add(sizer_213, 1, wxEXPAND, 0);
    sizer_214->Add(spin_ctrl_33_copy_5, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_214->Add(label_42_copy_7, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_214->Add(spin_ctrl_33_copy_6, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_214->Add(label_42_copy_8, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_203->Add(sizer_214, 1, wxEXPAND, 0);
    sizer_200->Add(sizer_203, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_196->Add(sizer_200, 1, wxEXPAND, 0);
    sizer_188->Add(sizer_196, 1, wxEXPAND, 0);
    sizer_125_copy_3->Add(sizer_188, 1, wxEXPAND, 0);
    EasyRPGNotebookStates->SetSizer(sizer_125_copy_3);
    sizer_83_copy_copy_4->Add(label_25_copy_copy_4, 0, wxEXPAND, 0);
    sizer_83_copy_copy_4->Add(list_box_7_copy_copy_4, 1, wxALL, 1);
    sizer_83_copy_copy_4->Add(button_31_copy_copy_4, 0, wxALL|wxEXPAND, 1);
    sizer_125_copy_4->Add(sizer_83_copy_copy_4, 0, wxEXPAND, 0);
    sizer_218->Add(text_ctrl_25, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_216->Add(sizer_218, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_219->Add(text_ctrl_21_copy, 1, wxLEFT|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_219->Add(button_41_copy, 0, wxALIGN_CENTER_VERTICAL, 1);
    sizer_216->Add(sizer_219, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_220->Add(choice_26, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_216->Add(sizer_220, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_215->Add(sizer_216, 0, wxEXPAND, 0);
    sizer_226->Add(spin_ctrl_34, 1, 0, 0);
    sizer_223->Add(sizer_226, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_227->Add(button_42, 0, wxBOTTOM|wxEXPAND, 1);
    sizer_227->Add(list_box_17, 1, wxTOP|wxBOTTOM|wxEXPAND, 1);
    sizer_227->Add(button_43, 0, wxTOP|wxEXPAND, 1);
    sizer_223->Add(sizer_227, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_222->Add(sizer_223, 0, wxEXPAND, 0);
    sizer_228->Add(list_ctrl_4, 1, wxEXPAND, 0);
    sizer_224->Add(sizer_228, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_224->Add(bitmap_3, 2, wxALL|wxEXPAND|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
    sizer_222->Add(sizer_224, 1, wxEXPAND, 0);
    sizer_229->Add(choice_27, 1, 0, 0);
    sizer_225->Add(sizer_229, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_230->Add(choice_28, 1, 0, 0);
    sizer_225->Add(sizer_230, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_225->Add(0, 0, 1, wxEXPAND, 0);
    sizer_225->Add(checkbox_35, 0, wxALL|wxEXPAND, 1);
    sizer_225->Add(button_44, 0, wxALL|wxEXPAND, 1);
    sizer_225->Add(button_45, 0, wxALL|wxEXPAND, 1);
    sizer_225->Add(button_46, 0, wxALL|wxEXPAND, 1);
    sizer_225->Add(button_47, 0, wxALL|wxEXPAND, 1);
    sizer_225->Add(button_48, 0, wxALL|wxEXPAND, 1);
    sizer_225->Add(0, 0, 1, wxEXPAND, 0);
    sizer_222->Add(sizer_225, 0, wxEXPAND, 0);
    sizer_215->Add(sizer_222, 1, wxEXPAND, 0);
    sizer_215->Add(list_box_18, 0, wxALL|wxEXPAND, 1);
    sizer_125_copy_4->Add(sizer_215, 1, wxEXPAND, 0);
    EasyRPGNotebookAnimations->SetSizer(sizer_125_copy_4);
    sizer_83_copy_copy_5->Add(label_25_copy_copy_5, 0, wxEXPAND, 0);
    sizer_83_copy_copy_5->Add(list_box_7_copy_copy_5, 1, wxALL, 1);
    sizer_83_copy_copy_5->Add(button_31_copy_copy_5, 0, wxALL|wxEXPAND, 1);
    sizer_125_copy_5->Add(sizer_83_copy_copy_5, 0, wxEXPAND, 0);
    sizer_233->Add(text_ctrl_26, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_232->Add(sizer_233, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_234->Add(spin_ctrl_35, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_232->Add(sizer_234, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_235->Add(spin_ctrl_35_copy, 1, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_235->Add(label_44, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_232->Add(sizer_235, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_231->Add(sizer_232, 0, wxEXPAND, 0);
    sizer_236->Add(bitmap_13_copy, 0, wxALL|wxALIGN_CENTER_HORIZONTAL, 1);
    sizer_238->Add(label_43, 1, wxRIGHT|wxTOP|wxALIGN_CENTER_VERTICAL, 1);
    sizer_238->Add(button_49, 0, wxLEFT|wxTOP|wxALIGN_CENTER_VERTICAL, 1);
    sizer_236->Add(sizer_238, 0, wxEXPAND, 0);
    sizer_231->Add(sizer_236, 0, wxALL|wxEXPAND, 1);
    sizer_239->Add(checkbox_36, 1, wxBOTTOM|wxEXPAND, 1);
    sizer_239->Add(checkbox_37, 1, wxTOP|wxBOTTOM|wxEXPAND, 1);
    sizer_239->Add(checkbox_38, 1, wxTOP|wxBOTTOM|wxEXPAND, 1);
    sizer_239->Add(checkbox_39, 1, wxTOP|wxBOTTOM|wxEXPAND, 1);
    sizer_237->Add(sizer_239, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_237->Add(radio_box_7, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_231->Add(sizer_237, 0, wxEXPAND, 0);
    sizer_125_copy_5->Add(sizer_231, 0, wxEXPAND, 0);
    EasyRPGNotebookTerrains->SetSizer(sizer_125_copy_5);
    sizer_83_copy_copy_6->Add(label_25_copy_copy_6, 0, wxEXPAND, 0);
    sizer_83_copy_copy_6->Add(list_box_7_copy_copy_6, 1, wxALL, 1);
    sizer_83_copy_copy_6->Add(button_31_copy_copy_6, 0, wxALL|wxEXPAND, 1);
    sizer_125_copy_6->Add(sizer_83_copy_copy_6, 0, wxEXPAND, 0);
    sizer_242->Add(text_ctrl_27, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_241->Add(sizer_242, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_243->Add(text_ctrl_28, 1, wxALL|wxALIGN_CENTER_VERTICAL, 0);
    sizer_241->Add(sizer_243, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_240->Add(sizer_241, 0, wxEXPAND, 0);
    sizer_247->Add(button_50, 0, wxBOTTOM|wxEXPAND, 1);
    sizer_247->Add(button_51, 0, wxTOP|wxBOTTOM|wxEXPAND, 1);
    sizer_247->Add(button_52, 0, wxTOP|wxBOTTOM|wxEXPAND, 1);
    sizer_246->Add(sizer_247, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_246->Add(button_53, 0, wxALL|wxEXPAND, 1);
    sizer_248->Add(bitmap_4, 0, 0, 0);
    sizer_248->Add(radio_box_8, 0, wxEXPAND, 0);
    sizer_248->Add(radio_box_8_copy, 0, wxEXPAND, 0);
    sizer_246->Add(sizer_248, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_244->Add(sizer_246, 0, wxEXPAND, 0);
    sizer_244->Add(list_box_19, 0, wxALL|wxEXPAND, 1);
    sizer_249->Add(list_box_20, 1, wxEXPAND, 0);
    sizer_244->Add(sizer_249, 1, wxALL|wxEXPAND, 1);
    notebook_4_pane_1->SetSizer(sizer_244);
    sizer_250->Add(button_54, 0, wxTOP|wxBOTTOM|wxEXPAND, 1);
    sizer_250->Add(button_54_copy, 0, wxTOP|wxBOTTOM|wxEXPAND, 1);
    sizer_250->Add(button_54_copy_1, 0, wxTOP|wxBOTTOM|wxEXPAND, 1);
    sizer_245->Add(sizer_250, 0, wxLEFT|wxRIGHT|wxBOTTOM, 1);
    sizer_245->Add(list_box_19_copy, 0, wxALL|wxEXPAND, 1);
    notebook_4_pane_2->SetSizer(sizer_245);
    notebook_4->AddPage(notebook_4_pane_1, _("Lower layer"));
    notebook_4->AddPage(notebook_4_pane_2, _("Upper layer"));
    sizer_240->Add(new wxNotebookSizer(notebook_4), 1, wxALL|wxEXPAND, 1);
    sizer_125_copy_6->Add(sizer_240, 1, wxEXPAND, 0);
    EasyRPGNotebookTilesets->SetSizer(sizer_125_copy_6);
    sizer_257->Add(label_45, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257->Add(text_ctrl_29, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256->Add(sizer_257, 1, wxEXPAND, 0);
    sizer_257_copy_10->Add(text_ctrl_29_copy_10, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256->Add(sizer_257_copy_10, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy->Add(text_ctrl_29_copy_10_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256->Add(sizer_257_copy_10_copy, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_1->Add(text_ctrl_29_copy_10_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256->Add(sizer_257_copy_10_copy_1, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_2->Add(text_ctrl_29_copy_10_copy_2, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256->Add(sizer_257_copy_10_copy_2, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_3->Add(text_ctrl_29_copy_10_copy_3, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256->Add(sizer_257_copy_10_copy_3, 1, wxEXPAND, 0);
    sizer_257_copy_1->Add(label_45_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_257_copy_1->Add(text_ctrl_29_copy_1, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256->Add(sizer_257_copy_1, 1, wxEXPAND, 0);
    sizer_257_copy_9->Add(text_ctrl_29_copy_9_copy, 1, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_9->Add(label_45_copy_9, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_9->Add(text_ctrl_29_copy_9, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256->Add(sizer_257_copy_9, 1, wxEXPAND, 0);
    sizer_257_copy_2->Add(label_45_copy_2, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_2->Add(text_ctrl_29_copy_2, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256->Add(sizer_257_copy_2, 1, wxEXPAND, 0);
    sizer_251->Add(sizer_256, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_257_copy->Add(label_45_copy, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy->Add(text_ctrl_29_copy, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy->Add(sizer_257_copy, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_4->Add(text_ctrl_29_copy_10_copy_4, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy->Add(sizer_257_copy_10_copy_4, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_5->Add(text_ctrl_29_copy_10_copy_5, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy->Add(sizer_257_copy_10_copy_5, 1, wxEXPAND, 0);
    sizer_257_copy_3->Add(label_45_copy_3, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_3->Add(text_ctrl_29_copy_3, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy->Add(sizer_257_copy_3, 1, wxEXPAND, 0);
    sizer_257_copy_4->Add(label_45_copy_4, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_4->Add(text_ctrl_29_copy_4, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy->Add(sizer_257_copy_4, 1, wxEXPAND, 0);
    sizer_257_copy_5->Add(label_45_copy_5, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_5->Add(text_ctrl_29_copy_5, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy->Add(sizer_257_copy_5, 1, wxEXPAND, 0);
    sizer_257_copy_6->Add(label_45_copy_6, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_6->Add(text_ctrl_29_copy_6, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy->Add(sizer_257_copy_6, 1, wxEXPAND, 0);
    sizer_257_copy_7->Add(label_45_copy_7, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_7->Add(text_ctrl_29_copy_7, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy->Add(sizer_257_copy_7, 1, wxEXPAND, 0);
    sizer_257_copy_8->Add(label_45_copy_8, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_8->Add(text_ctrl_29_copy_8, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy->Add(sizer_257_copy_8, 1, wxEXPAND, 0);
    sizer_251->Add(sizer_256_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    notebook_2_pane_1->SetSizer(sizer_251);
    sizer_257_copy_11->Add(label_45_copy_10, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_11->Add(text_ctrl_29_copy_11, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy_1->Add(sizer_257_copy_11, 1, wxEXPAND, 0);
    sizer_257_copy_12->Add(label_45_copy_11, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_12->Add(text_ctrl_29_copy_12, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy_1->Add(sizer_257_copy_12, 1, wxEXPAND, 0);
    sizer_257_copy_13->Add(label_45_copy_12, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_13->Add(text_ctrl_29_copy_13, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy_1->Add(sizer_257_copy_13, 1, wxEXPAND, 0);
    sizer_257_copy_14->Add(label_45_copy_13, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_14->Add(text_ctrl_29_copy_14, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy_1->Add(sizer_257_copy_14, 1, wxEXPAND, 0);
    sizer_257_copy_15->Add(label_45_copy_14, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_15->Add(text_ctrl_29_copy_15, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy_1->Add(sizer_257_copy_15, 1, wxEXPAND, 0);
    sizer_257_copy_17->Add(label_45_copy_16, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_17->Add(text_ctrl_29_copy_17, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy_1->Add(sizer_257_copy_17, 1, wxEXPAND, 0);
    sizer_257_copy_16->Add(label_45_copy_15, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_16->Add(text_ctrl_29_copy_16, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy_1->Add(sizer_257_copy_16, 1, wxEXPAND, 0);
    sizer_257_copy_18->Add(label_45_copy_17, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_18->Add(text_ctrl_29_copy_18, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy_1->Add(sizer_257_copy_18, 1, wxEXPAND, 0);
    sizer_257_copy_19->Add(label_45_copy_18, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_19->Add(text_ctrl_29_copy_19, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy_1->Add(sizer_257_copy_19, 1, wxEXPAND, 0);
    sizer_252->Add(sizer_256_copy_1, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_257_copy_20->Add(label_45_copy_19, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_20->Add(text_ctrl_29_copy_20, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy_2->Add(sizer_257_copy_20, 1, wxEXPAND, 0);
    sizer_257_copy_21->Add(label_45_copy_20, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_21->Add(text_ctrl_29_copy_21, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy_2->Add(sizer_257_copy_21, 1, wxEXPAND, 0);
    sizer_257_copy_22->Add(label_45_copy_21, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_22->Add(text_ctrl_29_copy_22, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy_2->Add(sizer_257_copy_22, 1, wxEXPAND, 0);
    sizer_257_copy_23->Add(label_45_copy_22, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_23->Add(text_ctrl_29_copy_23, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy_2->Add(sizer_257_copy_23, 1, wxEXPAND, 0);
    sizer_257_copy_24->Add(label_45_copy_23, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_24->Add(text_ctrl_29_copy_24, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy_2->Add(sizer_257_copy_24, 1, wxEXPAND, 0);
    sizer_257_copy_25->Add(label_45_copy_24, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_25->Add(text_ctrl_29_copy_25, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy_2->Add(sizer_257_copy_25, 1, wxEXPAND, 0);
    sizer_257_copy_26->Add(label_45_copy_25, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_26->Add(text_ctrl_29_copy_26, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy_2->Add(sizer_257_copy_26, 1, wxEXPAND, 0);
    sizer_257_copy_27->Add(label_45_copy_26, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_27->Add(text_ctrl_29_copy_27, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy_2->Add(sizer_257_copy_27, 1, wxEXPAND, 0);
    sizer_257_copy_28->Add(label_45_copy_27, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_257_copy_28->Add(text_ctrl_29_copy_28, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_256_copy_2->Add(sizer_257_copy_28, 1, wxEXPAND, 0);
    sizer_252->Add(sizer_256_copy_2, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    notebook_2_pane_2->SetSizer(sizer_252);
    sizer_257_copy_10_copy_6->Add(text_ctrl_29_copy_10_copy_6, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3->Add(sizer_257_copy_10_copy_6, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_7->Add(text_ctrl_29_copy_10_copy_7, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3->Add(sizer_257_copy_10_copy_7, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_7_copy->Add(text_ctrl_29_copy_10_copy_7_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_258->Add(sizer_257_copy_10_copy_7_copy, 1, wxRIGHT|wxEXPAND, 1);
    sizer_257_copy_10_copy_7_copy_1->Add(text_ctrl_29_copy_10_copy_7_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_258->Add(sizer_257_copy_10_copy_7_copy_1, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_257_copy_10_copy_7_copy_2->Add(text_ctrl_29_copy_10_copy_7_copy_2, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_258->Add(sizer_257_copy_10_copy_7_copy_2, 1, wxLEFT|wxEXPAND, 1);
    sizer_256_copy_3->Add(sizer_258, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_8->Add(text_ctrl_29_copy_10_copy_8, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3->Add(sizer_257_copy_10_copy_8, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_9->Add(text_ctrl_29_copy_10_copy_9, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3->Add(sizer_257_copy_10_copy_9, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_10->Add(text_ctrl_29_copy_10_copy_10, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3->Add(sizer_257_copy_10_copy_10, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_11->Add(text_ctrl_29_copy_10_copy_11, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3->Add(sizer_257_copy_10_copy_11, 1, wxALL|wxEXPAND, 0);
    sizer_257_copy_10_copy_12->Add(text_ctrl_29_copy_10_copy_12, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3->Add(sizer_257_copy_10_copy_12, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_13->Add(text_ctrl_29_copy_10_copy_13, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3->Add(sizer_257_copy_10_copy_13, 1, wxEXPAND, 0);
    sizer_253->Add(sizer_256_copy_3, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_257_copy_10_copy_6_copy->Add(text_ctrl_29_copy_10_copy_6_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3_copy->Add(sizer_257_copy_10_copy_6_copy, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_7_copy_3->Add(text_ctrl_29_copy_10_copy_7_copy_3, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3_copy->Add(sizer_257_copy_10_copy_7_copy_3, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_7_copy_copy->Add(text_ctrl_29_copy_10_copy_7_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_258_copy->Add(sizer_257_copy_10_copy_7_copy_copy, 1, wxRIGHT|wxEXPAND, 0);
    sizer_257_copy_10_copy_7_copy_1_copy->Add(text_ctrl_29_copy_10_copy_7_copy_1_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_258_copy->Add(sizer_257_copy_10_copy_7_copy_1_copy, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_257_copy_10_copy_7_copy_2_copy->Add(text_ctrl_29_copy_10_copy_7_copy_2_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_258_copy->Add(sizer_257_copy_10_copy_7_copy_2_copy, 1, wxLEFT|wxEXPAND, 1);
    sizer_256_copy_3_copy->Add(sizer_258_copy, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_8_copy->Add(text_ctrl_29_copy_10_copy_8_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3_copy->Add(sizer_257_copy_10_copy_8_copy, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_9_copy->Add(text_ctrl_29_copy_10_copy_9_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3_copy->Add(sizer_257_copy_10_copy_9_copy, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_10_copy->Add(text_ctrl_29_copy_10_copy_10_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3_copy->Add(sizer_257_copy_10_copy_10_copy, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_11_copy->Add(text_ctrl_29_copy_10_copy_11_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3_copy->Add(sizer_257_copy_10_copy_11_copy, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_12_copy->Add(text_ctrl_29_copy_10_copy_12_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3_copy->Add(sizer_257_copy_10_copy_12_copy, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_13_copy->Add(text_ctrl_29_copy_10_copy_13_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3_copy->Add(sizer_257_copy_10_copy_13_copy, 1, wxEXPAND, 0);
    sizer_253->Add(sizer_256_copy_3_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    notebook_2_pane_3->SetSizer(sizer_253);
    sizer_257_copy_10_copy_6_copy_1->Add(text_ctrl_29_copy_10_copy_6_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3_copy_1->Add(sizer_257_copy_10_copy_6_copy_1, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_7_copy_4->Add(text_ctrl_29_copy_10_copy_7_copy_4, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3_copy_1->Add(sizer_257_copy_10_copy_7_copy_4, 1, wxEXPAND, 1);
    sizer_257_copy_10_copy_7_copy_copy_1->Add(text_ctrl_29_copy_10_copy_7_copy_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_258_copy_1->Add(sizer_257_copy_10_copy_7_copy_copy_1, 1, wxRIGHT|wxEXPAND, 1);
    sizer_257_copy_10_copy_7_copy_1_copy_1->Add(text_ctrl_29_copy_10_copy_7_copy_1_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_258_copy_1->Add(sizer_257_copy_10_copy_7_copy_1_copy_1, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_257_copy_10_copy_7_copy_2_copy_1->Add(text_ctrl_29_copy_10_copy_7_copy_2_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_258_copy_1->Add(sizer_257_copy_10_copy_7_copy_2_copy_1, 1, wxLEFT|wxEXPAND, 1);
    sizer_256_copy_3_copy_1->Add(sizer_258_copy_1, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_8_copy_1->Add(text_ctrl_29_copy_10_copy_8_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3_copy_1->Add(sizer_257_copy_10_copy_8_copy_1, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_9_copy_1->Add(text_ctrl_29_copy_10_copy_9_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3_copy_1->Add(sizer_257_copy_10_copy_9_copy_1, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_10_copy_1->Add(text_ctrl_29_copy_10_copy_10_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3_copy_1->Add(sizer_257_copy_10_copy_10_copy_1, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_11_copy_1->Add(text_ctrl_29_copy_10_copy_11_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3_copy_1->Add(sizer_257_copy_10_copy_11_copy_1, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_12_copy_1->Add(text_ctrl_29_copy_10_copy_12_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3_copy_1->Add(sizer_257_copy_10_copy_12_copy_1, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_13_copy_1->Add(text_ctrl_29_copy_10_copy_13_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_256_copy_3_copy_1->Add(sizer_257_copy_10_copy_13_copy_1, 1, wxEXPAND, 0);
    sizer_254->Add(sizer_256_copy_3_copy_1, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_277->Add(text_ctrl_29_copy_10_copy_22_copy, 1, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_277->Add(label_45_copy_9_copy, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_277->Add(text_ctrl_29_copy_10_copy_22_copy_1, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_276->Add(sizer_277, 0, wxBOTTOM|wxEXPAND, 1);
    sizer_276->Add(text_ctrl_29_copy_10_copy_22_copy_2, 0, wxTOP|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    sizer_274->Add(sizer_276, 3, wxEXPAND, 0);
    sizer_257_copy_10_copy_7_copy_6_copy->Add(text_ctrl_29_copy_10_copy_7_copy_6_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_275->Add(sizer_257_copy_10_copy_7_copy_6_copy, 1, wxRIGHT|wxEXPAND, 1);
    sizer_257_copy_10_copy_7_copy_6_copy_1->Add(text_ctrl_29_copy_10_copy_7_copy_6_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_275->Add(sizer_257_copy_10_copy_7_copy_6_copy_1, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_275->Add(0, 0, 1, wxLEFT|wxEXPAND, 1);
    sizer_274->Add(sizer_275, 2, wxEXPAND, 0);
    sizer_261->Add(sizer_274, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_277_copy->Add(text_ctrl_29_copy_10_copy_22_copy_copy, 1, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_277_copy->Add(label_45_copy_9_copy_copy, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_277_copy->Add(text_ctrl_29_copy_10_copy_22_copy_1_copy, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_276_copy->Add(sizer_277_copy, 0, wxBOTTOM|wxEXPAND, 1);
    sizer_276_copy->Add(text_ctrl_29_copy_10_copy_22_copy_2_copy, 0, wxTOP|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    sizer_274_copy->Add(sizer_276_copy, 3, wxEXPAND, 0);
    sizer_257_copy_10_copy_7_copy_6_copy_copy->Add(text_ctrl_29_copy_10_copy_7_copy_6_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_275_copy->Add(sizer_257_copy_10_copy_7_copy_6_copy_copy, 1, wxRIGHT|wxEXPAND, 1);
    sizer_257_copy_10_copy_7_copy_6_copy_1_copy->Add(text_ctrl_29_copy_10_copy_7_copy_6_copy_1_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_275_copy->Add(sizer_257_copy_10_copy_7_copy_6_copy_1_copy, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_275_copy->Add(0, 0, 1, wxLEFT|wxEXPAND, 1);
    sizer_274_copy->Add(sizer_275_copy, 2, wxEXPAND, 0);
    sizer_261->Add(sizer_274_copy, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_257_copy_10_copy_7_copy_6_copy_2->Add(text_ctrl_29_copy_10_copy_7_copy_6_copy_2, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_269->Add(sizer_257_copy_10_copy_7_copy_6_copy_2, 1, wxRIGHT|wxEXPAND, 1);
    sizer_257_copy_10_copy_7_copy_6_copy_3->Add(text_ctrl_29_copy_10_copy_7_copy_6_copy_3, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_269->Add(sizer_257_copy_10_copy_7_copy_6_copy_3, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_257_copy_10_copy_7_copy_6_copy_4->Add(text_ctrl_29_copy_10_copy_7_copy_6_copy_4, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_269->Add(sizer_257_copy_10_copy_7_copy_6_copy_4, 1, wxLEFT|wxEXPAND, 1);
    sizer_262->Add(sizer_269, 1, wxEXPAND, 0);
    sizer_262->Add(0, 0, 1, wxEXPAND, 0);
    sizer_261->Add(sizer_262, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_254->Add(sizer_261, 1, wxEXPAND, 0);
    notebook_2_pane_4->SetSizer(sizer_254);
    sizer_257_copy_10_copy_30->Add(text_ctrl_29_copy_10_copy_30, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_9->Add(sizer_257_copy_10_copy_30, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_31->Add(text_ctrl_29_copy_10_copy_31, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_9->Add(sizer_257_copy_10_copy_31, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_32->Add(text_ctrl_29_copy_10_copy_32, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_9->Add(sizer_257_copy_10_copy_32, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_33->Add(text_ctrl_29_copy_10_copy_33, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_9->Add(sizer_257_copy_10_copy_33, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_34->Add(text_ctrl_29_copy_10_copy_34, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_9->Add(sizer_257_copy_10_copy_34, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_35->Add(text_ctrl_29_copy_10_copy_35, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_9->Add(sizer_257_copy_10_copy_35, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_36->Add(text_ctrl_29_copy_10_copy_36, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_9->Add(sizer_257_copy_10_copy_36, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_37->Add(text_ctrl_29_copy_10_copy_37, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_9->Add(sizer_257_copy_10_copy_37, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_38->Add(text_ctrl_29_copy_10_copy_38, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_9->Add(sizer_257_copy_10_copy_38, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_39->Add(text_ctrl_29_copy_10_copy_39, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_9->Add(sizer_257_copy_10_copy_39, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_40->Add(text_ctrl_29_copy_10_copy_40, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_9->Add(sizer_257_copy_10_copy_40, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_41->Add(text_ctrl_29_copy_10_copy_41, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_9->Add(sizer_257_copy_10_copy_41, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_42->Add(text_ctrl_29_copy_10_copy_42, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_9->Add(sizer_257_copy_10_copy_42, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_43->Add(text_ctrl_29_copy_10_copy_43, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_9->Add(sizer_257_copy_10_copy_43, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_44->Add(text_ctrl_29_copy_10_copy_44, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_9->Add(sizer_257_copy_10_copy_44, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_45->Add(text_ctrl_29_copy_10_copy_45, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_9->Add(sizer_257_copy_10_copy_45, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_46->Add(text_ctrl_29_copy_10_copy_46, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_9->Add(sizer_257_copy_10_copy_46, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_47->Add(text_ctrl_29_copy_10_copy_47, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_9->Add(sizer_257_copy_10_copy_47, 1, wxEXPAND, 0);
    sizer_263->Add(grid_sizer_9, 1, wxEXPAND, 0);
    sizer_255->Add(sizer_263, 1, wxALL|wxEXPAND, 1);
    sizer_257_copy_10_copy_48->Add(text_ctrl_29_copy_10_copy_48, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_10->Add(sizer_257_copy_10_copy_48, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_49->Add(text_ctrl_29_copy_10_copy_49, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_10->Add(sizer_257_copy_10_copy_49, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_50->Add(text_ctrl_29_copy_10_copy_50, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_10->Add(sizer_257_copy_10_copy_50, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_51->Add(text_ctrl_29_copy_10_copy_51, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_10->Add(sizer_257_copy_10_copy_51, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_52->Add(text_ctrl_29_copy_10_copy_52, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_10->Add(sizer_257_copy_10_copy_52, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_53->Add(text_ctrl_29_copy_10_copy_53, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_10->Add(sizer_257_copy_10_copy_53, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_54->Add(text_ctrl_29_copy_10_copy_54, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_10->Add(sizer_257_copy_10_copy_54, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_55->Add(text_ctrl_29_copy_10_copy_55, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_10->Add(sizer_257_copy_10_copy_55, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_56->Add(text_ctrl_29_copy_10_copy_56, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_10->Add(sizer_257_copy_10_copy_56, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_57->Add(text_ctrl_29_copy_10_copy_57, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_10->Add(sizer_257_copy_10_copy_57, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_58->Add(text_ctrl_29_copy_10_copy_58, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_10->Add(sizer_257_copy_10_copy_58, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_59->Add(text_ctrl_29_copy_10_copy_59, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_10->Add(sizer_257_copy_10_copy_59, 1, wxEXPAND, 0);
    grid_sizer_10->Add(0, 0, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_60->Add(text_ctrl_29_copy_10_copy_60, 1, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_10->Add(sizer_257_copy_10_copy_60, 1, wxEXPAND, 0);
    grid_sizer_10->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_10->Add(0, 0, 1, wxEXPAND, 0);
    sizer_265->Add(grid_sizer_10, 1, wxEXPAND, 0);
    sizer_264->Add(sizer_265, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_257_copy_10_copy_61->Add(text_ctrl_29_copy_10_copy_61, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_267->Add(sizer_257_copy_10_copy_61, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_62->Add(text_ctrl_29_copy_10_copy_62, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_267->Add(sizer_257_copy_10_copy_62, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_63->Add(text_ctrl_29_copy_10_copy_63, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_267->Add(sizer_257_copy_10_copy_63, 1, wxEXPAND, 0);
    sizer_257_copy_10_copy_64->Add(text_ctrl_29_copy_10_copy_64, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_268->Add(sizer_257_copy_10_copy_64, 1, wxRIGHT|wxEXPAND, 1);
    sizer_257_copy_10_copy_65->Add(text_ctrl_29_copy_10_copy_65, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_268->Add(sizer_257_copy_10_copy_65, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_257_copy_10_copy_66->Add(text_ctrl_29_copy_10_copy_66, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_268->Add(sizer_257_copy_10_copy_66, 1, wxLEFT|wxEXPAND, 1);
    sizer_267->Add(sizer_268, 1, wxEXPAND, 0);
    sizer_266->Add(sizer_267, 3, wxEXPAND, 0);
    sizer_266->Add(0, 0, 1, wxEXPAND, 0);
    sizer_264->Add(sizer_266, 1, wxALL|wxEXPAND, 1);
    sizer_255->Add(sizer_264, 2, wxEXPAND, 0);
    notebook_2_pane_5->SetSizer(sizer_255);
    notebook_2->AddPage(notebook_2_pane_1, _("Battle messages 1 && 2"));
    notebook_2->AddPage(notebook_2_pane_2, _("Battle messages 3 && 4"));
    notebook_2->AddPage(notebook_2_pane_3, _("Commerce messages"));
    notebook_2->AddPage(notebook_2_pane_4, _("Commerce && inn"));
    notebook_2->AddPage(notebook_2_pane_5, _("Parameters && other"));
    sizer_126->Add(new wxNotebookSizer(notebook_2), 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    EasyRPGNotebookText->SetSizer(sizer_126);
    sizer_285->Add(bitmap_1_copy, 0, wxBOTTOM|wxALIGN_BOTTOM, 1);
    sizer_285->Add(button_55, 0, wxTOP|wxALIGN_RIGHT, 1);
    sizer_271->Add(sizer_285, 1, wxRIGHT|wxEXPAND, 1);
    sizer_286->Add(bitmap_1_copy_1, 0, wxBOTTOM|wxALIGN_BOTTOM, 1);
    sizer_286->Add(button_55_copy, 0, wxTOP|wxALIGN_RIGHT, 1);
    sizer_271->Add(sizer_286, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_287->Add(bitmap_1_copy_2, 0, wxBOTTOM|wxALIGN_BOTTOM, 1);
    sizer_287->Add(button_55_copy_1, 0, wxTOP|wxALIGN_RIGHT, 1);
    sizer_271->Add(sizer_287, 1, wxLEFT|wxEXPAND, 1);
    sizer_259->Add(sizer_271, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_272->Add(bitmap_11_copy, 0, wxRIGHT|wxALIGN_BOTTOM|wxALIGN_CENTER_HORIZONTAL, 1);
    sizer_272->Add(button_55_copy_2, 0, wxLEFT|wxALIGN_BOTTOM, 1);
    sizer_259->Add(sizer_272, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_273->Add(bitmap_11_copy_1, 0, wxRIGHT|wxALIGN_BOTTOM|wxALIGN_CENTER_HORIZONTAL, 1);
    sizer_273->Add(button_55_copy_2_copy, 0, wxLEFT|wxALIGN_BOTTOM, 1);
    sizer_259->Add(sizer_273, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_127->Add(sizer_259, 0, wxEXPAND, 0);
    sizer_288->Add(choice_29, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_278->Add(sizer_288, 1, wxEXPAND, 0);
    sizer_288_copy->Add(choice_29_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_278->Add(sizer_288_copy, 1, wxEXPAND, 0);
    sizer_288_copy_1->Add(choice_29_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_278->Add(sizer_288_copy_1, 1, wxEXPAND, 0);
    sizer_288_copy_2->Add(choice_29_copy_2, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_278->Add(sizer_288_copy_2, 1, wxEXPAND, 0);
    sizer_260->Add(sizer_278, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_219_copy->Add(text_ctrl_21_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_219_copy->Add(button_41_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_13->Add(sizer_219_copy, 1, wxEXPAND, 0);
    sizer_219_copy_1->Add(text_ctrl_21_copy_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_219_copy_1->Add(button_41_copy_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_13->Add(sizer_219_copy_1, 1, wxEXPAND, 0);
    sizer_219_copy_2->Add(text_ctrl_21_copy_copy_2, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_219_copy_2->Add(button_41_copy_copy_2, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_13->Add(sizer_219_copy_2, 1, wxEXPAND, 0);
    sizer_219_copy_3->Add(text_ctrl_21_copy_copy_3, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_219_copy_3->Add(button_41_copy_copy_3, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_13->Add(sizer_219_copy_3, 1, wxEXPAND, 0);
    sizer_219_copy_4->Add(text_ctrl_21_copy_copy_4, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_219_copy_4->Add(button_41_copy_copy_4, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_13->Add(sizer_219_copy_4, 1, wxEXPAND, 0);
    sizer_219_copy_5->Add(text_ctrl_21_copy_copy_5, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_219_copy_5->Add(button_41_copy_copy_5, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_13->Add(sizer_219_copy_5, 1, wxEXPAND, 0);
    sizer_219_copy_6->Add(text_ctrl_21_copy_copy_6, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_219_copy_6->Add(button_41_copy_copy_6, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_13->Add(sizer_219_copy_6, 1, wxEXPAND, 0);
    sizer_219_copy_7->Add(text_ctrl_21_copy_copy_7, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_219_copy_7->Add(button_41_copy_copy_7, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_13->Add(sizer_219_copy_7, 1, wxEXPAND, 0);
    sizer_279->Add(grid_sizer_13, 1, wxEXPAND, 0);
    sizer_260->Add(sizer_279, 2, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_219_copy_8->Add(text_ctrl_21_copy_copy_8, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_219_copy_8->Add(button_41_copy_copy_8, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_14->Add(sizer_219_copy_8, 1, wxEXPAND, 0);
    sizer_219_copy_9->Add(text_ctrl_21_copy_copy_9, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_219_copy_9->Add(button_41_copy_copy_9, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_14->Add(sizer_219_copy_9, 1, wxEXPAND, 0);
    sizer_219_copy_10->Add(text_ctrl_21_copy_copy_10, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_219_copy_10->Add(button_41_copy_copy_10, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_14->Add(sizer_219_copy_10, 1, wxEXPAND, 0);
    sizer_219_copy_11->Add(text_ctrl_21_copy_copy_11, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_219_copy_11->Add(button_41_copy_copy_11, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_14->Add(sizer_219_copy_11, 1, wxEXPAND, 0);
    sizer_219_copy_12->Add(text_ctrl_21_copy_copy_12, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_219_copy_12->Add(button_41_copy_copy_12, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_14->Add(sizer_219_copy_12, 1, wxEXPAND, 0);
    sizer_219_copy_13->Add(text_ctrl_21_copy_copy_13, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_219_copy_13->Add(button_41_copy_copy_13, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_14->Add(sizer_219_copy_13, 1, wxEXPAND, 0);
    sizer_219_copy_14->Add(text_ctrl_21_copy_copy_14, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_219_copy_14->Add(button_41_copy_copy_14, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_14->Add(sizer_219_copy_14, 1, wxEXPAND, 0);
    sizer_219_copy_15->Add(text_ctrl_21_copy_copy_15, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_219_copy_15->Add(button_41_copy_copy_15, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_14->Add(sizer_219_copy_15, 1, wxEXPAND, 0);
    sizer_219_copy_16->Add(text_ctrl_21_copy_copy_16, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_219_copy_16->Add(button_41_copy_copy_16, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_14->Add(sizer_219_copy_16, 1, wxEXPAND, 0);
    sizer_219_copy_17->Add(text_ctrl_21_copy_copy_17, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_219_copy_17->Add(button_41_copy_copy_17, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_14->Add(sizer_219_copy_17, 1, wxALL|wxEXPAND, 0);
    sizer_219_copy_18->Add(text_ctrl_21_copy_copy_18, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_219_copy_18->Add(button_41_copy_copy_18, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_14->Add(sizer_219_copy_18, 1, wxEXPAND, 0);
    sizer_219_copy_19->Add(text_ctrl_21_copy_copy_19, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_219_copy_19->Add(button_41_copy_copy_19, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_14->Add(sizer_219_copy_19, 1, wxEXPAND, 0);
    sizer_280->Add(grid_sizer_14, 1, wxEXPAND, 0);
    sizer_260->Add(sizer_280, 3, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_127->Add(sizer_260, 1, wxEXPAND, 0);
    sizer_281->Add(bitmap_11_copy_copy, 0, wxRIGHT|wxALIGN_BOTTOM|wxALIGN_CENTER_HORIZONTAL, 1);
    sizer_281->Add(button_55_copy_2_copy_1, 0, wxLEFT|wxALIGN_BOTTOM, 1);
    sizer_270->Add(sizer_281, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_288_copy_3->Add(choice_29_copy_3, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_282->Add(sizer_288_copy_3, 1, wxEXPAND, 0);
    sizer_288_copy_4->Add(choice_29_copy_4, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_282->Add(sizer_288_copy_4, 1, wxEXPAND, 0);
    sizer_270->Add(sizer_282, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_288_copy_5->Add(choice_29_copy_5, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_283->Add(sizer_288_copy_5, 1, wxEXPAND, 0);
    sizer_288_copy_6->Add(choice_29_copy_6, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_283->Add(sizer_288_copy_6, 1, wxEXPAND, 0);
    sizer_270->Add(sizer_283, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_288_copy_7->Add(choice_29_copy_7, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_284->Add(sizer_288_copy_7, 1, wxEXPAND, 0);
    sizer_288_copy_8->Add(choice_29_copy_8, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_284->Add(sizer_288_copy_8, 1, wxEXPAND, 0);
    sizer_270->Add(sizer_284, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_127->Add(sizer_270, 0, wxEXPAND, 0);
    EasyRPGNotebookSystem->SetSizer(sizer_127);
    sizer_83_copy_copy_6_copy->Add(label_25_copy_copy_6_copy, 0, wxEXPAND, 0);
    sizer_83_copy_copy_6_copy->Add(list_box_7_copy_copy_6_copy, 1, wxALL|wxEXPAND, 1);
    sizer_83_copy_copy_6_copy->Add(button_31_copy_copy_6_copy, 0, wxALL|wxEXPAND, 1);
    sizer_125_copy_6_copy->Add(sizer_83_copy_copy_6_copy, 0, wxEXPAND, 0);
    sizer_291->Add(text_ctrl_30, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_290->Add(sizer_291, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_292->Add(choice_30, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_290->Add(sizer_292, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_293->Add(checkbox_40, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_293->Add(text_ctrl_21_copy_copy_20, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_293->Add(button_41_copy_copy_20, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_290->Add(sizer_293, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_289->Add(sizer_290, 0, wxEXPAND, 0);
    sizer_294->Add(list_box_21, 1, wxEXPAND, 0);
    sizer_289->Add(sizer_294, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_125_copy_6_copy->Add(sizer_289, 1, wxEXPAND, 0);
    EasyRPGNoteBookCommonEvents->SetSizer(sizer_125_copy_6_copy);
    EasyRPGDatabaseNotebook->AddPage(EasyRPGNotebookActors, _("Actors"));
    EasyRPGDatabaseNotebook->AddPage(EasyRPGNotebookSkills, _("Skills"));
    EasyRPGDatabaseNotebook->AddPage(EasyRPGNotebookItems, _("Items"));
    EasyRPGDatabaseNotebook->AddPage(EasyRPGNotebookEnemies, _("Enemies"));
    EasyRPGDatabaseNotebook->AddPage(EasyRPGNotebookTroops, _("Troops"));
    EasyRPGDatabaseNotebook->AddPage(EasyRPGNotebookArmors, _("Armors"));
    EasyRPGDatabaseNotebook->AddPage(EasyRPGNotebookStates, _("States"));
    EasyRPGDatabaseNotebook->AddPage(EasyRPGNotebookAnimations, _("Animations"));
    EasyRPGDatabaseNotebook->AddPage(EasyRPGNotebookTerrains, _("Terrains"));
    EasyRPGDatabaseNotebook->AddPage(EasyRPGNotebookTilesets, _("Tilesets"));
    EasyRPGDatabaseNotebook->AddPage(EasyRPGNotebookText, _("Texts"));
    EasyRPGDatabaseNotebook->AddPage(EasyRPGNotebookSystem, _("System"));
    EasyRPGDatabaseNotebook->AddPage(EasyRPGNoteBookCommonEvents, _("Common events"));
    EasyRPGDatabaseSizerMain->Add(new wxNotebookSizer(EasyRPGDatabaseNotebook), 1, wxALL|wxEXPAND, 1);
    EasyRPGDatabaseSizerLower->Add(EasyRPGDatabaseButtonOK, 0, wxALL, 1);
    EasyRPGDatabaseSizerLower->Add(EasyRPGDatabaseButtonCancel, 0, wxALL, 1);
    EasyRPGDatabaseSizerLower->Add(EasyRPGDatabaseButtonApply, 0, wxALL, 1);
    EasyRPGDatabaseSizerLower->Add(EasyRPGDatabaseButtonHelp, 0, wxALL, 1);
    EasyRPGDatabaseSizerMain->Add(EasyRPGDatabaseSizerLower, 0, wxALIGN_RIGHT, 0);
    SetSizer(EasyRPGDatabaseSizerMain);
    EasyRPGDatabaseSizerMain->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogMaterialManager::EasyRPGDialogMaterialManager(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogMaterialManager::EasyRPGDialogMaterialManager
    const wxString list_box_3_choices[] = {
        _("Backdrop"),
        _("Battle"),
        _("CharSet"),
        _("ChipSet"),
        _("FaceSet"),
        _("GameOver"),
        _("Monster"),
        _("Movie"),
        _("Music"),
        _("Panorama"),
        _("Picture"),
        _("Sound"),
        _("System"),
        _("Title")
    };
    list_box_3 = new wxListBox(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 14, list_box_3_choices, 0);
    const wxString list_box_4_choices[] = {
        
    };
    list_box_4 = new wxListBox(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_4_choices, 0);
    button_9 = new wxButton(this, wxID_ANY, _("Import..."));
    button_10 = new wxButton(this, wxID_ANY, _("Export..."));
    button_11 = new wxButton(this, wxID_ANY, _("Delete..."));
    const wxString radio_box_1_choices[] = {
        _("PNG"),
        _("XYZ")
    };
    radio_box_1 = new wxRadioBox(this, wxID_ANY, _("Import/export as"), wxDefaultPosition, wxDefaultSize, 2, radio_box_1_choices, 1, wxRA_SPECIFY_COLS);
    button_4 = new wxButton(this, wxID_CLOSE, wxEmptyString);
    button_5 = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogMaterialManager::set_properties()
{
    // begin wxGlade: EasyRPGDialogMaterialManager::set_properties
    SetTitle(_("Material Manager"));
    wxIcon _icon;
    _icon.CopyFromBitmap(wxBitmap(wxT("easyrpg.png"), wxBITMAP_TYPE_ANY));
    SetIcon(_icon);
    list_box_3->SetSelection(0);
    radio_box_1->SetSelection(0);
    button_4->SetDefault();
    // end wxGlade
}


void EasyRPGDialogMaterialManager::do_layout()
{
    // begin wxGlade: EasyRPGDialogMaterialManager::do_layout
    wxBoxSizer* sizer_33 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_34 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_35 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_37 = new wxBoxSizer(wxVERTICAL);
    sizer_35->Add(list_box_3, 1, wxALL|wxEXPAND, 1);
    sizer_35->Add(list_box_4, 1, wxALL|wxEXPAND, 1);
    sizer_37->Add(button_9, 0, wxALL|wxEXPAND, 1);
    sizer_37->Add(button_10, 0, wxALL|wxEXPAND, 1);
    sizer_37->Add(button_11, 0, wxALL|wxEXPAND, 1);
    sizer_37->Add(0, 0, 1, wxEXPAND, 0);
    sizer_37->Add(radio_box_1, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_35->Add(sizer_37, 0, wxEXPAND, 0);
    sizer_33->Add(sizer_35, 1, wxEXPAND, 0);
    sizer_34->Add(button_4, 0, wxALL, 1);
    sizer_34->Add(button_5, 0, wxALL, 1);
    sizer_33->Add(sizer_34, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_33);
    sizer_33->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogSoundTest::EasyRPGDialogSoundTest(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogSoundTest::EasyRPGDialogSoundTest
    sizer_43_copy_1_staticbox = new wxStaticBox(this, -1, _("Volume"));
    sizer_43_copy_1_copy_staticbox = new wxStaticBox(this, -1, _("Tempo"));
    sizer_43_copy_1_copy_1_staticbox = new wxStaticBox(this, -1, _("Balance"));
    sizer_43_staticbox = new wxStaticBox(this, -1, _("Fade in"));
    const wxString list_box_5_choices[] = {
        
    };
    list_box_5 = new wxListBox(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_5_choices, 0);
    slider_2 = new wxSlider(this, wxID_ANY, 0, 0, 10, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL|wxSL_AUTOTICKS);
    label_55_copy = new wxStaticText(this, wxID_ANY, _("None"));
    label_55_copy_copy = new wxStaticText(this, wxID_ANY, _("5 sec."));
    label_55_copy_copy_1 = new wxStaticText(this, wxID_ANY, _("10 sec."));
    slider_2_copy_1 = new wxSlider(this, wxID_ANY, 10, 0, 10, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL|wxSL_AUTOTICKS);
    label_55_copy_copy_2 = new wxStaticText(this, wxID_ANY, _("0%"));
    label_55_copy_copy_copy = new wxStaticText(this, wxID_ANY, _("50%"));
    label_55_copy_copy_1_copy = new wxStaticText(this, wxID_ANY, _("100%"));
    slider_2_copy_1_copy = new wxSlider(this, wxID_ANY, 5, 0, 10, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL|wxSL_AUTOTICKS);
    label_55_copy_copy_2_copy = new wxStaticText(this, wxID_ANY, _("50%"));
    label_55_copy_copy_copy_copy = new wxStaticText(this, wxID_ANY, _("100%"));
    label_55_copy_copy_1_copy_copy = new wxStaticText(this, wxID_ANY, _("150%"));
    slider_2_copy_1_copy_1 = new wxSlider(this, wxID_ANY, 0, -5, 5, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL|wxSL_AUTOTICKS);
    label_55_copy_copy_2_copy_1 = new wxStaticText(this, wxID_ANY, _("Left"));
    label_55_copy_copy_copy_copy_1 = new wxStaticText(this, wxID_ANY, _("Center"));
    label_55_copy_copy_1_copy_copy_1 = new wxStaticText(this, wxID_ANY, _("Right"));
    button_13 = new wxButton(this, wxID_ANY, _("Play"));
    button_14 = new wxButton(this, wxID_ANY, _("Stop"));
    static_line_1 = new wxStaticLine(this, wxID_ANY);
    button_12 = new wxButton(this, wxID_CLOSE, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogSoundTest::set_properties()
{
    // begin wxGlade: EasyRPGDialogSoundTest::set_properties
    SetTitle(_("Sound Test"));
    wxIcon _icon;
    _icon.CopyFromBitmap(wxBitmap(wxT("easyrpg.png"), wxBITMAP_TYPE_ANY));
    SetIcon(_icon);
    list_box_5->SetSize(wxDLG_UNIT(list_box_5, wxSize(100,-1)));
    button_12->SetDefault();
    // end wxGlade
}


void EasyRPGDialogSoundTest::do_layout()
{
    // begin wxGlade: EasyRPGDialogSoundTest::do_layout
    wxBoxSizer* sizer_39 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_40 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_41 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_42 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_43_copy_1_copy_1 = new wxStaticBoxSizer(sizer_43_copy_1_copy_1_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_355_copy_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_43_copy_1_copy = new wxStaticBoxSizer(sizer_43_copy_1_copy_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_355_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_43_copy_1 = new wxStaticBoxSizer(sizer_43_copy_1_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_355_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_43 = new wxStaticBoxSizer(sizer_43_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_355 = new wxBoxSizer(wxHORIZONTAL);
    sizer_40->Add(list_box_5, 1, wxALL|wxEXPAND, 1);
    sizer_43->Add(slider_2, 0, wxEXPAND, 0);
    sizer_355->Add(label_55_copy, 0, wxRIGHT, 1);
    sizer_355->Add(0, 0, 1, wxEXPAND, 0);
    sizer_355->Add(label_55_copy_copy, 0, wxLEFT|wxRIGHT, 1);
    sizer_355->Add(0, 0, 1, wxEXPAND, 0);
    sizer_355->Add(label_55_copy_copy_1, 0, wxLEFT, 1);
    sizer_43->Add(sizer_355, 0, wxEXPAND, 0);
    sizer_41->Add(sizer_43, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_43_copy_1->Add(slider_2_copy_1, 0, wxEXPAND, 0);
    sizer_355_copy->Add(label_55_copy_copy_2, 0, wxRIGHT, 1);
    sizer_355_copy->Add(0, 0, 1, wxEXPAND, 0);
    sizer_355_copy->Add(label_55_copy_copy_copy, 0, wxLEFT|wxRIGHT, 1);
    sizer_355_copy->Add(0, 0, 1, wxEXPAND, 0);
    sizer_355_copy->Add(label_55_copy_copy_1_copy, 0, wxLEFT, 1);
    sizer_43_copy_1->Add(sizer_355_copy, 0, wxEXPAND, 0);
    sizer_41->Add(sizer_43_copy_1, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_43_copy_1_copy->Add(slider_2_copy_1_copy, 0, wxEXPAND, 0);
    sizer_355_copy_copy->Add(label_55_copy_copy_2_copy, 0, wxRIGHT, 1);
    sizer_355_copy_copy->Add(0, 0, 1, wxEXPAND, 0);
    sizer_355_copy_copy->Add(label_55_copy_copy_copy_copy, 0, wxLEFT|wxRIGHT, 1);
    sizer_355_copy_copy->Add(0, 0, 1, wxEXPAND, 0);
    sizer_355_copy_copy->Add(label_55_copy_copy_1_copy_copy, 0, wxLEFT, 1);
    sizer_43_copy_1_copy->Add(sizer_355_copy_copy, 0, wxEXPAND, 0);
    sizer_41->Add(sizer_43_copy_1_copy, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_43_copy_1_copy_1->Add(slider_2_copy_1_copy_1, 0, wxEXPAND, 0);
    sizer_355_copy_copy_1->Add(label_55_copy_copy_2_copy_1, 0, wxRIGHT, 1);
    sizer_355_copy_copy_1->Add(0, 0, 1, wxEXPAND, 0);
    sizer_355_copy_copy_1->Add(label_55_copy_copy_copy_copy_1, 0, wxLEFT|wxRIGHT, 1);
    sizer_355_copy_copy_1->Add(0, 0, 1, wxEXPAND, 0);
    sizer_355_copy_copy_1->Add(label_55_copy_copy_1_copy_copy_1, 0, wxLEFT, 1);
    sizer_43_copy_1_copy_1->Add(sizer_355_copy_copy_1, 0, wxEXPAND, 0);
    sizer_41->Add(sizer_43_copy_1_copy_1, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_42->Add(button_13, 0, wxALL, 1);
    sizer_42->Add(button_14, 0, wxALL, 1);
    sizer_41->Add(sizer_42, 0, wxEXPAND, 0);
    sizer_40->Add(sizer_41, 0, wxEXPAND, 0);
    sizer_39->Add(sizer_40, 1, wxEXPAND, 0);
    sizer_39->Add(static_line_1, 0, wxALL|wxEXPAND, 1);
    sizer_39->Add(button_12, 0, wxALL|wxALIGN_RIGHT, 1);
    SetSizer(sizer_39);
    sizer_39->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogMapProperties::EasyRPGDialogMapProperties(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogMapProperties::EasyRPGDialogMapProperties
    sizer_51_staticbox = new wxStaticBox(this, -1, _("Graphics"));
    sizer_52_staticbox = new wxStaticBox(this, -1, _("Size"));
    sizer_53_staticbox = new wxStaticBox(this, -1, _("Cycle type"));
    sizer_54_staticbox = new wxStaticBox(this, -1, _("Troop encounters"));
    sizer_67_copy_staticbox = new wxStaticBox(this, -1, _("Selected background"));
    sizer_68_copy_staticbox = new wxStaticBox(this, -1, _("Parallax options"));
    sizer_58_copy_staticbox = new wxStaticBox(this, -1, _("Selected background"));
    sizer_60_copy_staticbox = new wxStaticBox(this, -1, _("Map music"));
    sizer_61_copy_staticbox = new wxStaticBox(this, -1, _("Battle background"));
    sizer_50_staticbox = new wxStaticBox(this, -1, _("Name"));
    text_ctrl_5 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    const wxString choice_7_choices[] = {
        
    };
    choice_7 = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_7_choices, 0);
    spin_ctrl_4 = new wxSpinCtrl(this, wxID_ANY, wxT("100"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 20, 500);
    label_12 = new wxStaticText(this, wxID_ANY, _("X"));
    spin_ctrl_5 = new wxSpinCtrl(this, wxID_ANY, wxT("100"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 15, 500);
    const wxString choice_8_choices[] = {
        
    };
    choice_8 = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_8_choices, 0);
    list_ctrl_2 = new wxListCtrl(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxLC_REPORT|wxSUNKEN_BORDER);
    label_13 = new wxStaticText(this, wxID_ANY, _("Encounter steps"));
    spin_ctrl_6 = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    checkbox_8_copy = new wxCheckBox(this, wxID_ANY, _("Use background image"));
    bitmap_9_copy = new wxStaticBitmap(this, wxID_ANY, wxBitmap(wxT("background.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    button_15_copy = new wxButton(this, wxID_ANY, _("Select..."));
    checkbox_9_copy = new wxCheckBox(this, wxID_ANY, _("Horizontal"));
    checkbox_12_copy = new wxCheckBox(this, wxID_ANY, _("Automatic"));
    label_14_copy = new wxStaticText(this, wxID_ANY, _("Speed"));
    spin_ctrl_7_copy = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    static_line_2_copy = new wxStaticLine(this, wxID_ANY);
    checkbox_11_copy = new wxCheckBox(this, wxID_ANY, _("Vertical"));
    checkbox_13_copy = new wxCheckBox(this, wxID_ANY, _("Automatic"));
    label_15_copy = new wxStaticText(this, wxID_ANY, _("Speed"));
    spin_ctrl_8_copy = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    radio_btn_1_copy = new wxRadioButton(this, wxID_ANY, _("From parent map"));
    radio_btn_2_copy = new wxRadioButton(this, wxID_ANY, _("None"));
    radio_btn_3_copy = new wxRadioButton(this, wxID_ANY, _("Select"));
    text_ctrl_6_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_READONLY);
    button_16_copy = new wxButton(this, wxID_ANY, _("..."));
    radio_btn_4_copy = new wxRadioButton(this, wxID_ANY, _("From parent map"));
    radio_btn_5_copy = new wxRadioButton(this, wxID_ANY, _("From terrain"));
    radio_btn_6_copy = new wxRadioButton(this, wxID_ANY, _("Select"));
    text_ctrl_6_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_READONLY);
    button_16_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    const wxString radio_box_2_copy_choices[] = {
        _("From parent map"),
        _("Allowed"),
        _("Disallowed")
    };
    radio_box_2_copy = new wxRadioBox(this, wxID_ANY, _("Teleport"), wxDefaultPosition, wxDefaultSize, 3, radio_box_2_copy_choices, 1, wxRA_SPECIFY_COLS);
    const wxString radio_box_2_copy_copy_choices[] = {
        _("From parent map"),
        _("Allowed"),
        _("Disallowed")
    };
    radio_box_2_copy_copy = new wxRadioBox(this, wxID_ANY, _("Escape"), wxDefaultPosition, wxDefaultSize, 3, radio_box_2_copy_copy_choices, 1, wxRA_SPECIFY_COLS);
    const wxString radio_box_4_copy_choices[] = {
        _("From parent map"),
        _("Allowed"),
        _("Disallowed")
    };
    radio_box_4_copy = new wxRadioBox(this, wxID_ANY, _("Save"), wxDefaultPosition, wxDefaultSize, 3, radio_box_4_copy_choices, 1, wxRA_SPECIFY_COLS);
    button_6 = new wxButton(this, wxID_OK, wxEmptyString);
    button_7 = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_8 = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogMapProperties::set_properties()
{
    // begin wxGlade: EasyRPGDialogMapProperties::set_properties
    SetTitle(_("Map Properties"));
    wxIcon _icon;
    _icon.CopyFromBitmap(wxBitmap(wxT("easyrpg.png"), wxBITMAP_TYPE_ANY));
    SetIcon(_icon);
    text_ctrl_5->SetSize(wxSize(75,-1));
    choice_7->SetSize(wxSize(75,-1));
    spin_ctrl_4->SetSize(wxSize(75, -1));
    spin_ctrl_5->SetSize(wxSize(75, -1));
    choice_8->SetSize(wxSize(75,-1));
    list_ctrl_2->SetSize(wxSize(75,-1));
    spin_ctrl_6->SetSize(wxSize(60, -1));
    bitmap_9_copy->SetSize(wxSize(160, 120));
    spin_ctrl_7_copy->SetSize(wxSize(60, -1));
    spin_ctrl_8_copy->SetSize(wxSize(60, -1));
    text_ctrl_6_copy->SetSize(wxSize(75,-1));
    button_16_copy->SetSize(wxSize(25, -1));
    text_ctrl_6_copy_copy->SetSize(wxSize(75,-1));
    button_16_copy_copy->SetSize(wxSize(25, -1));
    radio_box_2_copy->SetSelection(0);
    radio_box_2_copy_copy->SetSelection(0);
    radio_box_4_copy->SetSelection(0);
    button_6->SetDefault();
    // end wxGlade
}


void EasyRPGDialogMapProperties::do_layout()
{
    // begin wxGlade: EasyRPGDialogMapProperties::do_layout
    wxBoxSizer* sizer_36 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_47 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_38 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_49_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_57_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_56_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_61_copy = new wxStaticBoxSizer(sizer_61_copy_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_74_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_60_copy = new wxStaticBoxSizer(sizer_60_copy_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_73_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_58_copy = new wxStaticBoxSizer(sizer_58_copy_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_66_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_68_copy = new wxStaticBoxSizer(sizer_68_copy_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_72_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_71_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_69_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_70_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_67_copy = new wxStaticBoxSizer(sizer_67_copy_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_48 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_54 = new wxStaticBoxSizer(sizer_54_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_59 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_53 = new wxStaticBoxSizer(sizer_53_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_52 = new wxStaticBoxSizer(sizer_52_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_51 = new wxStaticBoxSizer(sizer_51_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_50 = new wxStaticBoxSizer(sizer_50_staticbox, wxHORIZONTAL);
    sizer_50->Add(text_ctrl_5, 1, 0, 0);
    sizer_48->Add(sizer_50, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_51->Add(choice_7, 1, 0, 0);
    sizer_48->Add(sizer_51, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_52->Add(spin_ctrl_4, 1, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_52->Add(label_12, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_52->Add(spin_ctrl_5, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_48->Add(sizer_52, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_53->Add(choice_8, 1, 0, 0);
    sizer_48->Add(sizer_53, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_54->Add(list_ctrl_2, 1, wxBOTTOM|wxEXPAND, 1);
    sizer_59->Add(label_13, 0, wxRIGHT|wxTOP|wxALIGN_CENTER_VERTICAL, 1);
    sizer_59->Add(spin_ctrl_6, 1, wxLEFT|wxTOP|wxALIGN_CENTER_VERTICAL, 1);
    sizer_54->Add(sizer_59, 0, wxEXPAND, 0);
    sizer_48->Add(sizer_54, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_38->Add(sizer_48, 1, wxEXPAND, 0);
    sizer_58_copy->Add(checkbox_8_copy, 0, 0, 0);
    sizer_67_copy->Add(bitmap_9_copy, 0, wxBOTTOM, 1);
    sizer_67_copy->Add(button_15_copy, 0, wxTOP|wxALIGN_RIGHT, 1);
    sizer_66_copy->Add(sizer_67_copy, 0, wxRIGHT|wxEXPAND, 1);
    sizer_68_copy->Add(0, 0, 1, wxEXPAND, 0);
    sizer_68_copy->Add(checkbox_9_copy, 0, wxBOTTOM|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    sizer_70_copy->Add(15, 15, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_70_copy->Add(checkbox_12_copy, 1, wxTOP|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_68_copy->Add(sizer_70_copy, 0, wxEXPAND, 0);
    sizer_69_copy->Add(label_14_copy, 0, wxRIGHT|wxTOP|wxALIGN_CENTER_VERTICAL, 1);
    sizer_69_copy->Add(spin_ctrl_7_copy, 1, wxLEFT|wxTOP|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_68_copy->Add(sizer_69_copy, 0, wxEXPAND, 0);
    sizer_68_copy->Add(0, 0, 1, wxEXPAND, 0);
    sizer_68_copy->Add(static_line_2_copy, 0, wxTOP|wxBOTTOM|wxEXPAND, 1);
    sizer_68_copy->Add(0, 0, 1, wxEXPAND, 0);
    sizer_68_copy->Add(checkbox_11_copy, 0, wxTOP|wxBOTTOM|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    sizer_71_copy->Add(15, 15, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_71_copy->Add(checkbox_13_copy, 1, wxTOP|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_68_copy->Add(sizer_71_copy, 0, wxEXPAND, 0);
    sizer_72_copy->Add(label_15_copy, 0, wxRIGHT|wxTOP|wxALIGN_CENTER_VERTICAL, 1);
    sizer_72_copy->Add(spin_ctrl_8_copy, 1, wxLEFT|wxTOP, 1);
    sizer_68_copy->Add(sizer_72_copy, 0, wxEXPAND, 0);
    sizer_68_copy->Add(0, 0, 1, wxEXPAND, 0);
    sizer_66_copy->Add(sizer_68_copy, 1, wxLEFT|wxEXPAND, 1);
    sizer_58_copy->Add(sizer_66_copy, 0, wxEXPAND, 0);
    sizer_49_copy->Add(sizer_58_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_60_copy->Add(radio_btn_1_copy, 0, wxALL|wxEXPAND, 1);
    sizer_60_copy->Add(radio_btn_2_copy, 0, wxALL|wxEXPAND, 1);
    sizer_60_copy->Add(radio_btn_3_copy, 0, wxALL|wxEXPAND, 1);
    sizer_73_copy->Add(text_ctrl_6_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_73_copy->Add(button_16_copy, 0, 0, 0);
    sizer_60_copy->Add(sizer_73_copy, 1, wxEXPAND, 0);
    sizer_56_copy->Add(sizer_60_copy, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_61_copy->Add(radio_btn_4_copy, 0, wxALL|wxEXPAND, 1);
    sizer_61_copy->Add(radio_btn_5_copy, 0, wxALL|wxEXPAND, 1);
    sizer_61_copy->Add(radio_btn_6_copy, 0, wxALL|wxEXPAND, 1);
    sizer_74_copy->Add(text_ctrl_6_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_74_copy->Add(button_16_copy_copy, 0, 0, 0);
    sizer_61_copy->Add(sizer_74_copy, 1, wxEXPAND, 0);
    sizer_56_copy->Add(sizer_61_copy, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_49_copy->Add(sizer_56_copy, 0, wxEXPAND, 0);
    sizer_57_copy->Add(radio_box_2_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM, 1);
    sizer_57_copy->Add(radio_box_2_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM, 1);
    sizer_57_copy->Add(radio_box_4_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM, 1);
    sizer_49_copy->Add(sizer_57_copy, 0, wxEXPAND, 0);
    sizer_38->Add(sizer_49_copy, 0, wxEXPAND, 0);
    sizer_36->Add(sizer_38, 1, wxEXPAND, 0);
    sizer_47->Add(button_6, 0, wxALL, 1);
    sizer_47->Add(button_7, 0, wxALL, 1);
    sizer_47->Add(button_8, 0, wxALL, 1);
    sizer_36->Add(sizer_47, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_36);
    sizer_36->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventEditor::EasyRPGDialogEventEditor(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventEditor::EasyRPGDialogEventEditor
    notebook_1 = new wxNotebook(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0);
    notebook_1_pane_1 = new wxPanel(notebook_1, wxID_ANY);
    sizer_93_staticbox = new wxStaticBox(notebook_1_pane_1, -1, _("Starting Conditions"));
    sizer_85_staticbox = new wxStaticBox(notebook_1_pane_1, -1, _("Selected graphic"));
    sizer_87_staticbox = new wxStaticBox(notebook_1_pane_1, -1, _("Movement type"));
    sizer_89_staticbox = new wxStaticBox(notebook_1_pane_1, -1, _("Starting trigger"));
    sizer_90_staticbox = new wxStaticBox(notebook_1_pane_1, -1, _("Priority"));
    sizer_91_staticbox = new wxStaticBox(notebook_1_pane_1, -1, _("Animation type"));
    sizer_92_staticbox = new wxStaticBox(notebook_1_pane_1, -1, _("Scroll speed"));
    sizer_82_staticbox = new wxStaticBox(notebook_1_pane_1, -1, _("Event commands"));
    sizer_78_staticbox = new wxStaticBox(this, -1, _("Name"));
    text_ctrl_8 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_22 = new wxButton(this, wxID_ANY, _("New page"));
    button_23 = new wxButton(this, wxID_ANY, _("Copy page"));
    button_24 = new wxButton(this, wxID_ANY, _("Paste page"));
    button_25 = new wxButton(this, wxID_ANY, _("Delete page"));
    checkbox_16 = new wxCheckBox(notebook_1_pane_1, wxID_ANY, _("Switch"));
    text_ctrl_9 = new wxTextCtrl(notebook_1_pane_1, wxID_ANY, wxEmptyString);
    button_28 = new wxButton(notebook_1_pane_1, wxID_ANY, _("..."));
    label_17 = new wxStaticText(notebook_1_pane_1, wxID_ANY, _("ON"));
    checkbox_17 = new wxCheckBox(notebook_1_pane_1, wxID_ANY, _("Switch"));
    text_ctrl_10 = new wxTextCtrl(notebook_1_pane_1, wxID_ANY, wxEmptyString);
    button_29 = new wxButton(notebook_1_pane_1, wxID_ANY, _("..."));
    label_18 = new wxStaticText(notebook_1_pane_1, wxID_ANY, _("ON"));
    checkbox_18 = new wxCheckBox(notebook_1_pane_1, wxID_ANY, _("Variable"));
    text_ctrl_11 = new wxTextCtrl(notebook_1_pane_1, wxID_ANY, wxEmptyString);
    button_30 = new wxButton(notebook_1_pane_1, wxID_ANY, _("..."));
    label_19 = new wxStaticText(notebook_1_pane_1, wxID_ANY, _("Above"));
    spin_ctrl_9 = new wxSpinCtrl(notebook_1_pane_1, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_21 = new wxStaticText(notebook_1_pane_1, wxID_ANY, _("."));
    checkbox_19 = new wxCheckBox(notebook_1_pane_1, wxID_ANY, _("Object"));
    const wxString choice_15_choices[] = {
        
    };
    choice_15 = new wxChoice(notebook_1_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_15_choices, 0);
    label_20 = new wxStaticText(notebook_1_pane_1, wxID_ANY, _("On hold"));
    checkbox_20 = new wxCheckBox(notebook_1_pane_1, wxID_ANY, _("Actor"));
    const wxString choice_16_choices[] = {
        
    };
    choice_16 = new wxChoice(notebook_1_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_16_choices, 0);
    label_22 = new wxStaticText(notebook_1_pane_1, wxID_ANY, _("In party"));
    checkbox_21 = new wxCheckBox(notebook_1_pane_1, wxID_ANY, _("Timer"));
    spin_ctrl_10 = new wxSpinCtrl(notebook_1_pane_1, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_23 = new wxStaticText(notebook_1_pane_1, wxID_ANY, _(":"), wxDefaultPosition, wxDefaultSize, wxALIGN_CENTRE);
    spin_ctrl_11 = new wxSpinCtrl(notebook_1_pane_1, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_24 = new wxStaticText(notebook_1_pane_1, wxID_ANY, _("Remaining"));
    bitmap_10 = new wxStaticBitmap(notebook_1_pane_1, wxID_ANY, wxBitmap(wxT("chara.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    checkbox_14 = new wxCheckBox(notebook_1_pane_1, wxID_ANY, _("Translucent"));
    button_26 = new wxButton(notebook_1_pane_1, wxID_ANY, _("Select..."));
    const wxString choice_13_choices[] = {
        
    };
    choice_13 = new wxChoice(notebook_1_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_13_choices, 0);
    label_16 = new wxStaticText(notebook_1_pane_1, wxID_ANY, _("Rate:"));
    const wxString choice_14_choices[] = {
        
    };
    choice_14 = new wxChoice(notebook_1_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_14_choices, 0);
    button_27 = new wxButton(notebook_1_pane_1, wxID_ANY, _("Create path"));
    const wxString choice_9_choices[] = {
        
    };
    choice_9 = new wxChoice(notebook_1_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_9_choices, 0);
    const wxString choice_10_choices[] = {
        
    };
    choice_10 = new wxChoice(notebook_1_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_10_choices, 0);
    checkbox_15 = new wxCheckBox(notebook_1_pane_1, wxID_ANY, _("Allow overlap"));
    const wxString choice_11_choices[] = {
        
    };
    choice_11 = new wxChoice(notebook_1_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_11_choices, 0);
    const wxString choice_12_choices[] = {
        
    };
    choice_12 = new wxChoice(notebook_1_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_12_choices, 0);
    const wxString list_box_6_choices[] = {
        _("<>")
    };
    list_box_6 = new wxListBox(notebook_1_pane_1, wxID_ANY, wxDefaultPosition, wxDefaultSize, 1, list_box_6_choices, 0);
    button_18 = new wxButton(this, wxID_OK, wxEmptyString);
    button_19 = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_20 = new wxButton(this, wxID_APPLY, wxEmptyString);
    button_21 = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventEditor::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventEditor::set_properties
    SetTitle(_("Event Editor"));
    wxIcon _icon;
    _icon.CopyFromBitmap(wxBitmap(wxT("easyrpg.png"), wxBITMAP_TYPE_ANY));
    SetIcon(_icon);
    button_28->SetSize(wxSize(25, -1));
    button_29->SetSize(wxSize(25, -1));
    button_30->SetSize(wxSize(25, -1));
    spin_ctrl_9->SetSize(wxSize(75, -1));
    spin_ctrl_10->SetSize(wxSize(75, -1));
    spin_ctrl_11->SetSize(wxSize(75, -1));
    bitmap_10->SetSize(wxSize(48, 64));
    choice_13->SetSize(wxSize(80, -1));
    choice_14->SetSize(wxSize(80, -1));
    choice_9->SetSize(wxSize(100, -1));
    choice_10->SetSize(wxSize(100, -1));
    choice_11->SetSize(wxSize(100, -1));
    choice_12->SetSize(wxSize(100, -1));
    list_box_6->SetSelection(0);
    button_18->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventEditor::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventEditor::do_layout
    wxBoxSizer* sizer_75 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_77 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_79 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_82 = new wxStaticBoxSizer(sizer_82_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_80 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_81 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_88 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_92 = new wxStaticBoxSizer(sizer_92_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_91 = new wxStaticBoxSizer(sizer_91_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_90 = new wxStaticBoxSizer(sizer_90_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_89 = new wxStaticBoxSizer(sizer_89_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_84 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_87 = new wxStaticBoxSizer(sizer_87_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_94 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_85 = new wxStaticBoxSizer(sizer_85_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_86 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_93 = new wxStaticBoxSizer(sizer_93_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_4 = new wxFlexGridSizer(7, 3, 0, 0);
    wxBoxSizer* sizer_63 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_62 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_97 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_96 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_95 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_76 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_78 = new wxStaticBoxSizer(sizer_78_staticbox, wxHORIZONTAL);
    sizer_78->Add(text_ctrl_8, 1, 0, 0);
    sizer_76->Add(sizer_78, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_76->Add(button_22, 1, wxALL|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    sizer_76->Add(button_23, 1, wxALL|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    sizer_76->Add(button_24, 1, wxALL|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    sizer_76->Add(button_25, 1, wxALL|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    sizer_75->Add(sizer_76, 0, wxEXPAND, 0);
    grid_sizer_4->Add(checkbox_16, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_95->Add(text_ctrl_9, 1, wxLEFT|wxTOP|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_95->Add(button_28, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_4->Add(sizer_95, 1, wxEXPAND, 0);
    grid_sizer_4->Add(label_17, 0, wxLEFT|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_4->Add(checkbox_17, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_96->Add(text_ctrl_10, 1, wxLEFT|wxTOP|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_96->Add(button_29, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_4->Add(sizer_96, 1, wxEXPAND, 0);
    grid_sizer_4->Add(label_18, 0, wxLEFT|wxTOP|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_4->Add(checkbox_18, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_97->Add(text_ctrl_11, 1, wxLEFT|wxTOP|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_97->Add(button_30, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_4->Add(sizer_97, 1, wxEXPAND, 0);
    grid_sizer_4->Add(label_19, 0, wxLEFT|wxTOP|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_4->Add(10, 9, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_62->Add(spin_ctrl_9, 0, wxALL, 1);
    sizer_62->Add(label_21, 0, wxLEFT|wxTOP|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_4->Add(sizer_62, 1, wxEXPAND, 0);
    grid_sizer_4->Add(10, 9, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_4->Add(checkbox_19, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_4->Add(choice_15, 0, wxALL|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_4->Add(label_20, 0, wxLEFT|wxTOP|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_4->Add(checkbox_20, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_4->Add(choice_16, 0, wxALL|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_4->Add(label_22, 0, wxLEFT|wxTOP|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_4->Add(checkbox_21, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_63->Add(spin_ctrl_10, 0, wxLEFT|wxRIGHT|wxTOP|wxALIGN_CENTER_VERTICAL, 1);
    sizer_63->Add(label_23, 0, wxLEFT|wxRIGHT|wxTOP|wxALIGN_CENTER_VERTICAL, 1);
    sizer_63->Add(spin_ctrl_11, 0, wxLEFT|wxRIGHT|wxTOP|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_4->Add(sizer_63, 1, wxEXPAND, 0);
    grid_sizer_4->Add(label_24, 0, wxLEFT|wxTOP|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_4->AddGrowableCol(1);
    sizer_93->Add(grid_sizer_4, 0, wxEXPAND, 0);
    sizer_80->Add(sizer_93, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_85->Add(bitmap_10, 0, wxRIGHT, 1);
    sizer_86->Add(checkbox_14, 1, wxLEFT|wxBOTTOM, 1);
    sizer_86->Add(button_26, 0, wxLEFT|wxTOP, 1);
    sizer_85->Add(sizer_86, 0, wxEXPAND, 0);
    sizer_84->Add(sizer_85, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_87->Add(choice_13, 0, wxBOTTOM|wxEXPAND, 1);
    sizer_94->Add(label_16, 0, wxRIGHT|wxTOP|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_94->Add(choice_14, 1, wxLEFT|wxTOP|wxBOTTOM, 1);
    sizer_87->Add(sizer_94, 0, wxEXPAND, 0);
    sizer_87->Add(button_27, 0, wxTOP|wxEXPAND, 1);
    sizer_84->Add(sizer_87, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_81->Add(sizer_84, 0, wxEXPAND, 0);
    sizer_89->Add(choice_9, 1, 0, 0);
    sizer_88->Add(sizer_89, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_90->Add(choice_10, 0, wxBOTTOM|wxEXPAND, 1);
    sizer_90->Add(checkbox_15, 0, wxTOP|wxEXPAND, 1);
    sizer_88->Add(sizer_90, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_91->Add(choice_11, 1, 0, 0);
    sizer_88->Add(sizer_91, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_92->Add(choice_12, 1, 0, 0);
    sizer_88->Add(sizer_92, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_81->Add(sizer_88, 1, 0, 0);
    sizer_80->Add(sizer_81, 0, wxEXPAND, 0);
    sizer_79->Add(sizer_80, 0, wxEXPAND, 0);
    sizer_82->Add(list_box_6, 1, wxEXPAND, 0);
    sizer_79->Add(sizer_82, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    notebook_1_pane_1->SetSizer(sizer_79);
    notebook_1->AddPage(notebook_1_pane_1, _("1"));
    sizer_75->Add(new wxNotebookSizer(notebook_1), 1, wxALL|wxEXPAND, 1);
    sizer_77->Add(button_18, 0, wxALL, 1);
    sizer_77->Add(button_19, 0, wxALL, 1);
    sizer_77->Add(button_20, 0, wxALL, 1);
    sizer_77->Add(button_21, 0, wxALL, 1);
    sizer_75->Add(sizer_77, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_75);
    sizer_75->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandList::EasyRPGDialogEventCommandList(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandList::EasyRPGDialogEventCommandList
    notebook_5 = new wxNotebook(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0);
    notebook_5_pane_3 = new wxPanel(notebook_5, wxID_ANY);
    notebook_5_pane_2 = new wxPanel(notebook_5, wxID_ANY);
    notebook_5_pane_1 = new wxPanel(notebook_5, wxID_ANY);
    button_57 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Show message..."));
    button_57_copy = new wxButton(notebook_5_pane_1, wxID_ANY, _("Change equipment..."));
    button_57_copy_1 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Message options..."));
    button_57_copy_2 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Change HP..."));
    button_57_copy_3 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Show face graphic..."));
    button_57_copy_4 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Change MP..."));
    button_57_copy_5 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Select option..."));
    button_57_copy_6 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Change state..."));
    button_57_copy_7 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Show number input..."));
    button_57_copy_8 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Full recover..."));
    button_57_copy_9 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Switch operations..."));
    button_57_copy_10 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Take damage..."));
    button_57_copy_11 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Variable operations..."));
    button_57_copy_12 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Change actor name..."));
    button_57_copy_13 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Timer operations..."));
    button_57_copy_14 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Change actor title..."));
    button_57_copy_15 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Change money amount..."));
    button_57_copy_16 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Change actor graphic..."));
    button_57_copy_17 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Change object..."));
    button_57_copy_18 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Change actor face graphic..."));
    button_57_copy_19 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Change group..."));
    button_57_copy_20 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Change vehicle graphic..."));
    button_57_copy_21 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Change experience..."));
    button_57_copy_22 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Change system music..."));
    button_57_copy_23 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Change level..."));
    button_57_copy_24 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Change system sound..."));
    button_57_copy_25 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Change parameter..."));
    button_57_copy_26 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Change system graphic..."));
    button_57_copy_27 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Change skill..."));
    button_57_copy_28 = new wxButton(notebook_5_pane_1, wxID_ANY, _("Change window transition..."));
    button_57_copy_29 = new wxButton(notebook_5_pane_2, wxID_ANY, _("Start battle..."));
    button_57_copy_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Change screen tone..."));
    button_57_copy_1_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Visit commerce..."));
    button_57_copy_2_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Flash screen..."));
    button_57_copy_3_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Visit inn..."));
    button_57_copy_4_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Shake screen..."));
    button_57_copy_5_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Actor name input..."));
    button_57_copy_6_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Move screen..."));
    button_57_copy_7_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Teleport..."));
    button_57_copy_8_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Weather effect..."));
    button_57_copy_9_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Memorize place..."));
    button_57_copy_10_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Show picture..."));
    button_57_copy_11_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Go to memorized place..."));
    button_57_copy_12_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Move picture..."));
    button_57_copy_13_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Ride or walk vehicle"));
    button_57_copy_14_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Delete picture..."));
    button_57_copy_15_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Change vehicle position..."));
    button_57_copy_16_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Show animation..."));
    button_57_copy_17_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Change event position..."));
    button_57_copy_18_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Change actor transparency..."));
    button_57_copy_19_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Swap events..."));
    button_57_copy_20_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Flash character..."));
    button_57_copy_21_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Get terrain ID..."));
    button_57_copy_22_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Event movement..."));
    button_57_copy_23_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Get position ID..."));
    button_57_copy_24_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Move all"));
    button_57_copy_25_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Blank screen..."));
    button_57_copy_26_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Stop all"));
    button_57_copy_27_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Show screen..."));
    button_57_copy_28_copy = new wxButton(notebook_5_pane_2, wxID_ANY, _("Wait..."));
    button_57_copy_29_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Play music..."));
    button_57_copy_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Show save menu"));
    button_57_copy_1_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Fade music..."));
    button_57_copy_2_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Save permissions..."));
    button_57_copy_3_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Memorize music"));
    button_57_copy_4_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Show system menu"));
    button_57_copy_5_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Play memorized music"));
    button_57_copy_6_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("System menu permissions..."));
    button_57_copy_7_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Play sound..."));
    button_57_copy_8_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Conditions..."));
    button_57_copy_9_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Play video..."));
    button_57_copy_10_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Set label..."));
    button_57_copy_11_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Key assignment..."));
    button_57_copy_12_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Go to label..."));
    button_57_copy_13_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Change map tileset..."));
    button_57_copy_14_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Cycle"));
    button_57_copy_15_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Change map background..."));
    button_57_copy_16_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Break cycle"));
    button_57_copy_17_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Change encounter rate..."));
    button_57_copy_18_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Stop event process"));
    button_57_copy_19_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Change tile..."));
    button_57_copy_20_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Delete event temporally"));
    button_57_copy_21_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Change teleport place..."));
    button_57_copy_22_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Call event..."));
    button_57_copy_23_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Teleport permissions..."));
    button_57_copy_24_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Notes..."));
    button_57_copy_25_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Change escape place..."));
    button_57_copy_26_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Game over"));
    button_57_copy_27_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Escape permissions..."));
    button_57_copy_28_copy_copy = new wxButton(notebook_5_pane_3, wxID_ANY, _("Go to title screen"));
    button_56 = new wxButton(this, wxID_CLOSE, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandList::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandList::set_properties
    SetTitle(_("Command list"));
    button_56->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandList::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandList::do_layout
    wxBoxSizer* sizer_295 = new wxBoxSizer(wxVERTICAL);
    wxGridSizer* grid_sizer_11_copy_copy = new wxGridSizer(15, 2, 0, 0);
    wxGridSizer* grid_sizer_11_copy = new wxGridSizer(15, 2, 0, 0);
    wxGridSizer* grid_sizer_11 = new wxGridSizer(15, 2, 0, 0);
    grid_sizer_11->Add(button_57, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_1, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_2, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_3, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_4, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_5, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_6, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_7, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_8, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_9, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_10, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_11, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_12, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_13, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_14, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_15, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_16, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_17, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_18, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_19, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_20, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_21, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_22, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_23, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_24, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_25, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_26, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_27, 0, wxEXPAND, 0);
    grid_sizer_11->Add(button_57_copy_28, 0, wxEXPAND, 0);
    notebook_5_pane_1->SetSizer(grid_sizer_11);
    grid_sizer_11_copy->Add(button_57_copy_29, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_1_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_2_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_3_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_4_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_5_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_6_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_7_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_8_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_9_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_10_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_11_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_12_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_13_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_14_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_15_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_16_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_17_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_18_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_19_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_20_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_21_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_22_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_23_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_24_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_25_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_26_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_27_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy->Add(button_57_copy_28_copy, 0, wxEXPAND, 0);
    notebook_5_pane_2->SetSizer(grid_sizer_11_copy);
    grid_sizer_11_copy_copy->Add(button_57_copy_29_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_1_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_2_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_3_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_4_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_5_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_6_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_7_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_8_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_9_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_10_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_11_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_12_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_13_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_14_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_15_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_16_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_17_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_18_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_19_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_20_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_21_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_22_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_23_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_24_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_25_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_26_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_27_copy_copy, 0, wxEXPAND, 0);
    grid_sizer_11_copy_copy->Add(button_57_copy_28_copy_copy, 0, wxEXPAND, 0);
    notebook_5_pane_3->SetSizer(grid_sizer_11_copy_copy);
    notebook_5->AddPage(notebook_5_pane_1, _("1"));
    notebook_5->AddPage(notebook_5_pane_2, _("2"));
    notebook_5->AddPage(notebook_5_pane_3, _("3"));
    sizer_295->Add(new wxNotebookSizer(notebook_5), 1, wxALL|wxEXPAND, 1);
    sizer_295->Add(button_56, 0, wxALL|wxALIGN_RIGHT, 1);
    SetSizer(sizer_295);
    sizer_295->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandShowMessage::EasyRPGDialogEventCommandShowMessage(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandShowMessage::EasyRPGDialogEventCommandShowMessage
    text_ctrl_31 = new wxTextCtrl(this, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE|wxTE_LINEWRAP|wxTE_WORDWRAP);
    button_58 = new wxButton(this, wxID_OK, wxEmptyString);
    button_58_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_58_copy_1 = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandShowMessage::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandShowMessage::set_properties
    SetTitle(_("Show message"));
    text_ctrl_31->SetSize(wxSize(523, 78));
    text_ctrl_31->SetFont(wxFont(0, wxMODERN, wxNORMAL, wxNORMAL, 0, wxT("")));
    button_58->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandShowMessage::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandShowMessage::do_layout
    wxBoxSizer* sizer_296 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_297 = new wxBoxSizer(wxHORIZONTAL);
    sizer_296->Add(text_ctrl_31, 1, wxALL|wxEXPAND, 1);
    sizer_297->Add(button_58, 0, wxALL, 1);
    sizer_297->Add(button_58_copy, 0, wxALL, 1);
    sizer_297->Add(button_58_copy_1, 0, wxALL, 1);
    sizer_296->Add(sizer_297, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_296);
    sizer_296->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandMessageOptions::EasyRPGDialogEventCommandMessageOptions(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandMessageOptions::EasyRPGDialogEventCommandMessageOptions
    sizer_300_staticbox = new wxStaticBox(this, -1, _("Options"));
    const wxString radio_box_9_choices[] = {
        _("Normal"),
        _("Transparent")
    };
    radio_box_9 = new wxRadioBox(this, wxID_ANY, _("Window type"), wxDefaultPosition, wxDefaultSize, 2, radio_box_9_choices, 1, wxRA_SPECIFY_ROWS);
    const wxString radio_box_9_copy_choices[] = {
        _("Top"),
        _("Center"),
        _("Bottom")
    };
    radio_box_9_copy = new wxRadioBox(this, wxID_ANY, _("Window position"), wxDefaultPosition, wxDefaultSize, 3, radio_box_9_copy_choices, 1, wxRA_SPECIFY_ROWS);
    checkbox_41 = new wxCheckBox(this, wxID_ANY, _("Don't cover player position by the window"));
    checkbox_42 = new wxCheckBox(this, wxID_ANY, _("Continue event execution while message is shown"));
    button_59 = new wxButton(this, wxID_OK, wxEmptyString);
    button_59_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_59_copy_1 = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandMessageOptions::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandMessageOptions::set_properties
    SetTitle(_("Message options"));
    radio_box_9->SetSelection(0);
    radio_box_9_copy->SetSelection(2);
    checkbox_41->SetValue(1);
    button_59->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandMessageOptions::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandMessageOptions::do_layout
    wxBoxSizer* sizer_298 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_301 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_300 = new wxStaticBoxSizer(sizer_300_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_299 = new wxBoxSizer(wxHORIZONTAL);
    sizer_299->Add(radio_box_9, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_299->Add(radio_box_9_copy, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_298->Add(sizer_299, 3, wxEXPAND, 0);
    sizer_300->Add(checkbox_41, 0, wxBOTTOM, 1);
    sizer_300->Add(checkbox_42, 0, wxTOP, 1);
    sizer_298->Add(sizer_300, 4, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_301->Add(button_59, 0, wxALL, 1);
    sizer_301->Add(button_59_copy, 0, wxALL, 1);
    sizer_301->Add(button_59_copy_1, 0, wxALL, 1);
    sizer_298->Add(sizer_301, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_298);
    sizer_298->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandFaceGraphic::EasyRPGDialogEventCommandFaceGraphic(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandFaceGraphic::EasyRPGDialogEventCommandFaceGraphic
    sizer_304_staticbox = new wxStaticBox(this, -1, _("Options"));
    sizer_306_staticbox = new wxStaticBox(this, -1, _("Face graphic"));
    bitmap_5 = new wxStaticBitmap(this, wxID_ANY, wxBitmap(wxT("face.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    button_60 = new wxButton(this, wxID_ANY, _("Select..."));
    button_60_copy = new wxButton(this, wxID_ANY, _("Delete"));
    const wxString radio_box_10_choices[] = {
        _("Left"),
        _("Right")
    };
    radio_box_10 = new wxRadioBox(this, wxID_ANY, _("Position"), wxDefaultPosition, wxDefaultSize, 2, radio_box_10_choices, 1, wxRA_SPECIFY_COLS);
    checkbox_43 = new wxCheckBox(this, wxID_ANY, _("Horizontal mirror"));
    button_61 = new wxButton(this, wxID_OK, wxEmptyString);
    button_61_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_61_copy_1 = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandFaceGraphic::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandFaceGraphic::set_properties
    SetTitle(_("Show face graphic"));
    radio_box_10->SetSelection(0);
    button_61->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandFaceGraphic::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandFaceGraphic::do_layout
    wxBoxSizer* sizer_302 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_305 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_304 = new wxStaticBoxSizer(sizer_304_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_303 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_306 = new wxStaticBoxSizer(sizer_306_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_307 = new wxBoxSizer(wxVERTICAL);
    sizer_306->Add(bitmap_5, 0, wxRIGHT, 1);
    sizer_307->Add(button_60, 0, wxLEFT|wxTOP|wxBOTTOM, 1);
    sizer_307->Add(button_60_copy, 0, wxLEFT|wxTOP, 1);
    sizer_306->Add(sizer_307, 0, wxALIGN_BOTTOM, 0);
    sizer_303->Add(sizer_306, 1, wxLEFT|wxRIGHT, 1);
    sizer_303->Add(radio_box_10, 0, wxLEFT|wxRIGHT, 1);
    sizer_302->Add(sizer_303, 0, wxEXPAND, 0);
    sizer_304->Add(checkbox_43, 0, wxALL, 1);
    sizer_302->Add(sizer_304, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_305->Add(button_61, 0, wxALL, 1);
    sizer_305->Add(button_61_copy, 0, wxALL, 1);
    sizer_305->Add(button_61_copy_1, 0, wxALL, 1);
    sizer_302->Add(sizer_305, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_302);
    sizer_302->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandSelectOption::EasyRPGDialogEventCommandSelectOption(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandSelectOption::EasyRPGDialogEventCommandSelectOption
    sizer_312_copy_staticbox = new wxStaticBox(this, -1, _("Option 2"));
    sizer_312_copy_1_staticbox = new wxStaticBox(this, -1, _("Option 3"));
    sizer_312_copy_2_staticbox = new wxStaticBox(this, -1, _("Option 4"));
    sizer_312_staticbox = new wxStaticBox(this, -1, _("Option 1"));
    text_ctrl_32 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    text_ctrl_32_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    text_ctrl_32_copy_1 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    text_ctrl_32_copy_2 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    const wxString radio_box_11_choices[] = {
        _("Cancel"),
        _("Option 1"),
        _("Option 2"),
        _("Option 3"),
        _("Option 4"),
        _("Condition")
    };
    radio_box_11 = new wxRadioBox(this, wxID_ANY, _("Cancel is equal to:"), wxDefaultPosition, wxDefaultSize, 6, radio_box_11_choices, 1, wxRA_SPECIFY_COLS);
    button_62 = new wxButton(this, wxID_OK, wxEmptyString);
    button_62_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_62_copy_1 = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandSelectOption::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandSelectOption::set_properties
    SetTitle(_("Select option"));
    radio_box_11->SetSelection(2);
    button_62->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandSelectOption::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandSelectOption::do_layout
    wxBoxSizer* sizer_308 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_310 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_309 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_311 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_312_copy_2 = new wxStaticBoxSizer(sizer_312_copy_2_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_312_copy_1 = new wxStaticBoxSizer(sizer_312_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_312_copy = new wxStaticBoxSizer(sizer_312_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_312 = new wxStaticBoxSizer(sizer_312_staticbox, wxHORIZONTAL);
    sizer_312->Add(text_ctrl_32, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_311->Add(sizer_312, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_312_copy->Add(text_ctrl_32_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_311->Add(sizer_312_copy, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_312_copy_1->Add(text_ctrl_32_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_311->Add(sizer_312_copy_1, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_312_copy_2->Add(text_ctrl_32_copy_2, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_311->Add(sizer_312_copy_2, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_309->Add(sizer_311, 1, wxEXPAND, 0);
    sizer_309->Add(radio_box_11, 0, wxLEFT|wxRIGHT|wxBOTTOM, 1);
    sizer_308->Add(sizer_309, 1, wxEXPAND, 0);
    sizer_310->Add(button_62, 0, wxALL, 1);
    sizer_310->Add(button_62_copy, 0, wxALL, 1);
    sizer_310->Add(button_62_copy_1, 0, wxALL, 1);
    sizer_308->Add(sizer_310, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_308);
    sizer_308->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandShowNumberInput::EasyRPGDialogEventCommandShowNumberInput(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandShowNumberInput::EasyRPGDialogEventCommandShowNumberInput
    sizer_317_staticbox = new wxStaticBox(this, -1, _("Store value in variable"));
    sizer_316_staticbox = new wxStaticBox(this, -1, _("Number of figures"));
    spin_ctrl_36 = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    text_ctrl_33 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_63 = new wxButton(this, wxID_ANY, _("..."));
    button_64 = new wxButton(this, wxID_OK, wxEmptyString);
    button_65 = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_66 = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandShowNumberInput::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandShowNumberInput::set_properties
    SetTitle(_("Show number input"));
    spin_ctrl_36->SetSize(wxSize(95, -1));
    text_ctrl_33->SetSize(wxSize(125, -1));
    button_63->SetSize(wxSize(25, -1));
    button_64->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandShowNumberInput::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandShowNumberInput::do_layout
    wxBoxSizer* sizer_313 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_315 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_314 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_317 = new wxStaticBoxSizer(sizer_317_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316 = new wxStaticBoxSizer(sizer_316_staticbox, wxHORIZONTAL);
    sizer_316->Add(spin_ctrl_36, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_314->Add(sizer_316, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_317->Add(text_ctrl_33, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_317->Add(button_63, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_314->Add(sizer_317, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_313->Add(sizer_314, 1, wxEXPAND, 0);
    sizer_315->Add(button_64, 0, wxALL, 1);
    sizer_315->Add(button_65, 0, wxALL, 1);
    sizer_315->Add(button_66, 0, wxALL, 1);
    sizer_313->Add(sizer_315, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_313);
    sizer_313->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandSwitchOperations::EasyRPGDialogEventCommandSwitchOperations(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandSwitchOperations::EasyRPGDialogEventCommandSwitchOperations
    sizer_57_staticbox = new wxStaticBox(this, -1, _("Switch"));
    radio_btn_1 = new wxRadioButton(this, wxID_ANY, _("Switch"));
    text_ctrl_6 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15 = new wxButton(this, wxID_ANY, _("..."));
    radio_btn_1_copy_1 = new wxRadioButton(this, wxID_ANY, _("Range from"));
    spin_ctrl_8 = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_8 = new wxStaticText(this, wxID_ANY, _("to"));
    spin_ctrl_25 = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    radio_btn_1_copy_2 = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_1 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_1 = new wxButton(this, wxID_ANY, _("..."));
    const wxString radio_box_2_choices[] = {
        _("Enable"),
        _("Disable"),
        _("Swap")
    };
    radio_box_2 = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 3, radio_box_2_choices, 3, wxRA_SPECIFY_COLS);
    button_16 = new wxButton(this, wxID_OK, wxEmptyString);
    button_16_copy_1 = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_16_copy_1_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandSwitchOperations::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandSwitchOperations::set_properties
    SetTitle(_("Switch operations"));
    text_ctrl_6->SetSize(wxSize(75, -1));
    button_15->SetSize(wxSize(25, -1));
    spin_ctrl_8->SetSize(wxSize(60, -1));
    spin_ctrl_25->SetSize(wxSize(60, -1));
    text_ctrl_6_copy_1->SetSize(wxSize(75, -1));
    button_15_copy_1->SetSize(wxSize(25, -1));
    radio_box_2->SetSelection(0);
    button_16->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandSwitchOperations::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandSwitchOperations::do_layout
    wxBoxSizer* sizer_55 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_65 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_57 = new wxStaticBoxSizer(sizer_57_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_16 = new wxFlexGridSizer(3, 2, 2, 2);
    wxBoxSizer* sizer_61 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_60 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_58 = new wxBoxSizer(wxHORIZONTAL);
    grid_sizer_16->Add(radio_btn_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58->Add(text_ctrl_6, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58->Add(button_15, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_16->Add(sizer_58, 1, wxEXPAND, 0);
    grid_sizer_16->Add(radio_btn_1_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_60->Add(spin_ctrl_8, 1, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_60->Add(label_8, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_60->Add(spin_ctrl_25, 1, wxLEFT, 1);
    grid_sizer_16->Add(sizer_60, 1, wxEXPAND, 0);
    grid_sizer_16->Add(radio_btn_1_copy_2, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_61->Add(text_ctrl_6_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_61->Add(button_15_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_16->Add(sizer_61, 1, wxEXPAND, 0);
    grid_sizer_16->AddGrowableCol(1);
    sizer_57->Add(grid_sizer_16, 1, wxEXPAND, 0);
    sizer_55->Add(sizer_57, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_55->Add(radio_box_2, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_65->Add(button_16, 0, wxALL, 1);
    sizer_65->Add(button_16_copy_1, 0, wxALL, 1);
    sizer_65->Add(button_16_copy_1_copy, 0, wxALL, 1);
    sizer_55->Add(sizer_65, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_55);
    sizer_55->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandVariableOperations::EasyRPGDialogEventCommandVariableOperations(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandVariableOperations::EasyRPGDialogEventCommandVariableOperations
    sizer_66_staticbox = new wxStaticBox(this, -1, _("Operand"));
    sizer_57_copy_1_staticbox = new wxStaticBox(this, -1, _("Switch"));
    radio_btn_1_copy_3 = new wxRadioButton(this, wxID_ANY, _("Set"));
    text_ctrl_6_copy_2 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2 = new wxButton(this, wxID_ANY, _("..."));
    radio_btn_1_copy_1_copy = new wxRadioButton(this, wxID_ANY, _("Range from"));
    spin_ctrl_8_copy_1 = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_8_copy = new wxStaticText(this, wxID_ANY, _("to"));
    spin_ctrl_25_copy = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    radio_btn_1_copy_2_copy = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_1_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_1_copy = new wxButton(this, wxID_ANY, _("..."));
    label_14 = new wxStaticText(this, wxID_ANY, _("variable"));
    const wxString radio_box_3_choices[] = {
        _("Replace"),
        _("Addiction"),
        _("Substracttion"),
        _("Multiplication"),
        _("Division"),
        _("Remainder")
    };
    radio_box_3 = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 6, radio_box_3_choices, 4, wxRA_SPECIFY_COLS);
    radio_btn_2 = new wxRadioButton(this, wxID_ANY, _("Constant"));
    spin_ctrl_8_copy_1_copy_1 = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    radio_btn_2_copy_1 = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy = new wxButton(this, wxID_ANY, _("..."));
    radio_btn_2_copy_2 = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_1 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_1 = new wxButton(this, wxID_ANY, _("..."));
    label_14_copy_1 = new wxStaticText(this, wxID_ANY, _("variable"));
    radio_btn_2_copy_3 = new wxRadioButton(this, wxID_ANY, _("Random"));
    spin_ctrl_8_copy_1_copy = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    spin_ctrl_8_copy_1_copy_2 = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    radio_btn_2_copy_4 = new wxRadioButton(this, wxID_ANY, _("Object"));
    const wxString choice_31_choices[] = {
        
    };
    choice_31 = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_31_choices, 0);
    const wxString choice_31_copy_choices[] = {
        
    };
    choice_31_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_31_copy_choices, 0);
    radio_btn_2_copy_5 = new wxRadioButton(this, wxID_ANY, _("Actor"));
    const wxString choice_31_copy_1_choices[] = {
        
    };
    choice_31_copy_1 = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_31_copy_1_choices, 0);
    const wxString choice_31_copy_2_choices[] = {
        
    };
    choice_31_copy_2 = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_31_copy_2_choices, 0);
    radio_btn_2_copy_6 = new wxRadioButton(this, wxID_ANY, _("Sprite"));
    const wxString choice_31_copy_3_choices[] = {
        
    };
    choice_31_copy_3 = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_31_copy_3_choices, 0);
    const wxString choice_31_copy_4_choices[] = {
        
    };
    choice_31_copy_4 = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_31_copy_4_choices, 0);
    radio_btn_2_copy_7 = new wxRadioButton(this, wxID_ANY, _("Put"));
    const wxString choice_31_copy_5_choices[] = {
        
    };
    choice_31_copy_5 = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_31_copy_5_choices, 0);
    button_17 = new wxButton(this, wxID_OK, wxEmptyString);
    button_17_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_17_copy_1 = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandVariableOperations::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandVariableOperations::set_properties
    SetTitle(_("Variable operations"));
    text_ctrl_6_copy_2->SetSize(wxSize(75, -1));
    button_15_copy_2->SetSize(wxSize(25, -1));
    spin_ctrl_8_copy_1->SetSize(wxSize(60, -1));
    spin_ctrl_25_copy->SetSize(wxSize(60, -1));
    text_ctrl_6_copy_1_copy->SetSize(wxSize(75, -1));
    button_15_copy_1_copy->SetSize(wxSize(25, -1));
    radio_box_3->SetSelection(0);
    spin_ctrl_8_copy_1_copy_1->SetSize(wxSize(60, -1));
    text_ctrl_6_copy_2_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy->SetSize(wxSize(25, -1));
    text_ctrl_6_copy_2_copy_1->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_1->SetSize(wxSize(25, -1));
    spin_ctrl_8_copy_1_copy->SetSize(wxSize(60, -1));
    spin_ctrl_8_copy_1_copy_2->SetSize(wxSize(60, -1));
    choice_31->SetSize(wxSize(100, -1));
    choice_31_copy->SetSize(wxSize(100, -1));
    choice_31_copy_1->SetSize(wxSize(100, -1));
    choice_31_copy_2->SetSize(wxSize(100, -1));
    choice_31_copy_3->SetSize(wxSize(100, -1));
    choice_31_copy_4->SetSize(wxSize(100, -1));
    choice_31_copy_5->SetSize(wxSize(100, -1));
    button_17->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandVariableOperations::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandVariableOperations::do_layout
    wxBoxSizer* sizer_56 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_67 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_66 = new wxStaticBoxSizer(sizer_66_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_17 = new wxFlexGridSizer(8, 3, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_58_copy_1_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_58_copy_1_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_57_copy_1 = new wxStaticBoxSizer(sizer_57_copy_1_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_16_copy = new wxFlexGridSizer(3, 3, 2, 2);
    wxBoxSizer* sizer_61_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_60_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_58_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    grid_sizer_16_copy->Add(radio_btn_1_copy_3, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1->Add(text_ctrl_6_copy_2, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1->Add(button_15_copy_2, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_16_copy->Add(sizer_58_copy_1, 1, wxEXPAND, 0);
    grid_sizer_16_copy->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_16_copy->Add(radio_btn_1_copy_1_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_60_copy_1->Add(spin_ctrl_8_copy_1, 1, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_60_copy_1->Add(label_8_copy, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_60_copy_1->Add(spin_ctrl_25_copy, 1, wxLEFT, 1);
    grid_sizer_16_copy->Add(sizer_60_copy_1, 1, wxEXPAND, 0);
    grid_sizer_16_copy->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_16_copy->Add(radio_btn_1_copy_2_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_61_copy_1->Add(text_ctrl_6_copy_1_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_61_copy_1->Add(button_15_copy_1_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_16_copy->Add(sizer_61_copy_1, 1, wxEXPAND, 0);
    grid_sizer_16_copy->Add(label_14, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_16_copy->AddGrowableCol(1);
    sizer_57_copy_1->Add(grid_sizer_16_copy, 1, wxEXPAND, 0);
    sizer_56->Add(sizer_57_copy_1, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_56->Add(radio_box_3, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    grid_sizer_17->Add(radio_btn_2, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_17->Add(spin_ctrl_8_copy_1_copy_1, 1, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_17->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_17->Add(radio_btn_2_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy->Add(text_ctrl_6_copy_2_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy->Add(button_15_copy_2_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_17->Add(sizer_58_copy_1_copy, 1, wxEXPAND, 0);
    grid_sizer_17->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_17->Add(radio_btn_2_copy_2, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_1->Add(text_ctrl_6_copy_2_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_1->Add(button_15_copy_2_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_17->Add(sizer_58_copy_1_copy_1, 1, wxEXPAND, 0);
    grid_sizer_17->Add(label_14_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_17->Add(radio_btn_2_copy_3, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_copy->Add(spin_ctrl_8_copy_1_copy, 1, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_58_copy_1_copy_copy->Add(spin_ctrl_8_copy_1_copy_2, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_17->Add(sizer_58_copy_1_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_17->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_17->Add(radio_btn_2_copy_4, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_17->Add(choice_31, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_17->Add(choice_31_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_17->Add(radio_btn_2_copy_5, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_17->Add(choice_31_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_17->Add(choice_31_copy_2, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_17->Add(radio_btn_2_copy_6, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_17->Add(choice_31_copy_3, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_17->Add(choice_31_copy_4, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_17->Add(radio_btn_2_copy_7, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_17->Add(choice_31_copy_5, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_17->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_17->AddGrowableCol(1);
    sizer_66->Add(grid_sizer_17, 1, wxEXPAND, 0);
    sizer_56->Add(sizer_66, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_67->Add(button_17, 0, wxALL, 1);
    sizer_67->Add(button_17_copy, 0, wxALL, 1);
    sizer_67->Add(button_17_copy_1, 0, wxALL, 1);
    sizer_56->Add(sizer_67, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_56);
    sizer_56->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandTimerOperations::EasyRPGDialogEventCommandTimerOperations(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandTimerOperations::EasyRPGDialogEventCommandTimerOperations
    sizer_72_staticbox = new wxStaticBox(this, -1, _("Options"));
    sizer_69_staticbox = new wxStaticBox(this, -1, _("Operation"));
    const wxString radio_box_4_choices[] = {
        _("Set value"),
        _("Start"),
        _("Stop")
    };
    radio_box_4 = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 3, radio_box_4_choices, 1, wxRA_SPECIFY_ROWS);
    radio_btn_3 = new wxRadioButton(this, wxID_ANY, _("Set"));
    spin_ctrl_8_copy_1_copy_3 = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_15 = new wxStaticText(this, wxID_ANY, _("minutes"));
    spin_ctrl_8_copy_1_copy_3_copy = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_15_copy_1 = new wxStaticText(this, wxID_ANY, _("seconds"));
    radio_btn_4 = new wxRadioButton(this, wxID_ANY, _("By variable"));
    text_ctrl_6_copy_2_copy_1_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_1_copy = new wxButton(this, wxID_ANY, _("..."));
    checkbox_9 = new wxCheckBox(this, wxID_ANY, _("Show in screen"));
    checkbox_9_copy_1 = new wxCheckBox(this, wxID_ANY, _("show in battle"));
    button_67 = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1 = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandTimerOperations::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandTimerOperations::set_properties
    SetTitle(_("Timer operations"));
    radio_box_4->SetSelection(0);
    spin_ctrl_8_copy_1_copy_3->SetSize(wxSize(60, -1));
    spin_ctrl_8_copy_1_copy_3_copy->SetSize(wxSize(60, -1));
    text_ctrl_6_copy_2_copy_1_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_1_copy->SetSize(wxSize(25, -1));
    button_67->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandTimerOperations::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandTimerOperations::do_layout
    wxBoxSizer* sizer_68 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_72 = new wxStaticBoxSizer(sizer_72_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_69 = new wxStaticBoxSizer(sizer_69_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_71 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_70 = new wxBoxSizer(wxHORIZONTAL);
    sizer_68->Add(radio_box_4, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_70->Add(radio_btn_3, 0, wxRIGHT|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_70->Add(spin_ctrl_8_copy_1_copy_3, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_70->Add(label_15, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_70->Add(spin_ctrl_8_copy_1_copy_3_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_70->Add(label_15_copy_1, 0, wxLEFT|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_69->Add(sizer_70, 1, wxEXPAND, 0);
    sizer_71->Add(radio_btn_4, 0, wxRIGHT|wxTOP|wxALIGN_CENTER_VERTICAL, 1);
    sizer_71->Add(text_ctrl_6_copy_2_copy_1_copy, 1, wxLEFT|wxTOP|wxALIGN_CENTER_VERTICAL, 1);
    sizer_71->Add(button_15_copy_2_copy_1_copy, 0, wxTOP|wxALIGN_CENTER_VERTICAL, 1);
    sizer_69->Add(sizer_71, 1, wxEXPAND, 0);
    sizer_68->Add(sizer_69, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_72->Add(checkbox_9, 1, wxRIGHT, 0);
    sizer_72->Add(checkbox_9_copy_1, 1, wxLEFT, 0);
    sizer_68->Add(sizer_72, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73->Add(button_67, 0, wxALL, 1);
    sizer_73->Add(button_67_copy, 0, wxALL, 1);
    sizer_73->Add(button_67_copy_1, 0, wxALL, 1);
    sizer_68->Add(sizer_73, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_68);
    sizer_68->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeMoney::EasyRPGDialogEventCommandChangeMoney(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeMoney::EasyRPGDialogEventCommandChangeMoney
    sizer_186_staticbox = new wxStaticBox(this, -1, _("Operand"));
    const wxString radio_box_12_choices[] = {
        _("Increase"),
        _("Decrease")
    };
    radio_box_12 = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 2, radio_box_12_choices, 1, wxRA_SPECIFY_ROWS);
    radio_btn_5 = new wxRadioButton(this, wxID_ANY, _("Constant"));
    spin_ctrl_8_copy_1_copy_3_copy_1 = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    radio_btn_5_copy_1 = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2 = new wxButton(this, wxID_ANY, _("..."));
    button_67_copy_2 = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeMoney::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeMoney::set_properties
    SetTitle(_("Change money amount"));
    radio_box_12->SetSelection(0);
    spin_ctrl_8_copy_1_copy_3_copy_1->SetSize(wxSize(60, -1));
    text_ctrl_6_copy_2_copy_2->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2->SetSize(wxSize(25, -1));
    button_67_copy_2->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeMoney::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeMoney::do_layout
    wxBoxSizer* sizer_74 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186 = new wxStaticBoxSizer(sizer_186_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18 = new wxFlexGridSizer(2, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2 = new wxBoxSizer(wxHORIZONTAL);
    sizer_74->Add(radio_box_12, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    grid_sizer_18->Add(radio_btn_5, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18->Add(spin_ctrl_8_copy_1_copy_3_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18->Add(radio_btn_5_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2->Add(text_ctrl_6_copy_2_copy_2, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2->Add(button_15_copy_2_copy_2, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18->Add(sizer_58_copy_1_copy_2, 1, wxEXPAND, 0);
    grid_sizer_18->AddGrowableCol(1);
    sizer_186->Add(grid_sizer_18, 1, wxEXPAND, 0);
    sizer_74->Add(sizer_186, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1->Add(button_67_copy_2, 0, wxALL, 1);
    sizer_73_copy_1->Add(button_67_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1->Add(button_67_copy_1_copy, 0, wxALL, 1);
    sizer_74->Add(sizer_73_copy_1, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_74);
    sizer_74->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeObject::EasyRPGDialogEventCommandChangeObject(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeObject::EasyRPGDialogEventCommandChangeObject
    sizer_186_copy_1_staticbox = new wxStaticBox(this, -1, _("Operand"));
    sizer_186_copy_staticbox = new wxStaticBox(this, -1, _("Object"));
    const wxString radio_box_12_copy_choices[] = {
        _("Add object"),
        _("Delete object")
    };
    radio_box_12_copy = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 2, radio_box_12_copy_choices, 1, wxRA_SPECIFY_ROWS);
    radio_btn_5_copy_2 = new wxRadioButton(this, wxID_ANY, _("Fixed"));
    const wxString choice_32_choices[] = {
        
    };
    choice_32 = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_choices, 0);
    radio_btn_5_copy_1_copy = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy = new wxButton(this, wxID_ANY, _("..."));
    radio_btn_5_copy_3 = new wxRadioButton(this, wxID_ANY, _("Constant"));
    spin_ctrl_8_copy_1_copy_3_copy_1_copy = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    radio_btn_5_copy_1_copy_1 = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2_copy_1 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_1 = new wxButton(this, wxID_ANY, _("..."));
    button_67_copy_2_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeObject::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeObject::set_properties
    SetTitle(_("Change object"));
    radio_box_12_copy->SetSelection(0);
    choice_32->SetSize(wxSize(75, -1));
    text_ctrl_6_copy_2_copy_2_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy->SetSize(wxSize(25, -1));
    spin_ctrl_8_copy_1_copy_3_copy_1_copy->SetSize(wxSize(60, -1));
    text_ctrl_6_copy_2_copy_2_copy_1->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_1->SetSize(wxSize(25, -1));
    button_67_copy_2_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeObject::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeObject::do_layout
    wxBoxSizer* sizer_187 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_1 = new wxStaticBoxSizer(sizer_186_copy_1_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18_copy_1 = new wxFlexGridSizer(2, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy = new wxStaticBoxSizer(sizer_186_copy_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18_copy = new wxFlexGridSizer(2, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy = new wxBoxSizer(wxHORIZONTAL);
    sizer_187->Add(radio_box_12_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    grid_sizer_18_copy->Add(radio_btn_5_copy_2, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy->Add(choice_32, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy->Add(radio_btn_5_copy_1_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy->Add(text_ctrl_6_copy_2_copy_2_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy->Add(button_15_copy_2_copy_2_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy->Add(sizer_58_copy_1_copy_2_copy, 1, wxEXPAND, 0);
    grid_sizer_18_copy->AddGrowableCol(1);
    sizer_186_copy->Add(grid_sizer_18_copy, 1, wxEXPAND, 0);
    sizer_187->Add(sizer_186_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    grid_sizer_18_copy_1->Add(radio_btn_5_copy_3, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1->Add(spin_ctrl_8_copy_1_copy_3_copy_1_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1->Add(radio_btn_5_copy_1_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_1->Add(text_ctrl_6_copy_2_copy_2_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_1->Add(button_15_copy_2_copy_2_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1->Add(sizer_58_copy_1_copy_2_copy_1, 1, wxEXPAND, 0);
    grid_sizer_18_copy_1->AddGrowableCol(1);
    sizer_186_copy_1->Add(grid_sizer_18_copy_1, 1, wxEXPAND, 0);
    sizer_187->Add(sizer_186_copy_1, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1_copy->Add(button_67_copy_2_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy->Add(button_67_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy->Add(button_67_copy_1_copy_copy, 0, wxALL, 1);
    sizer_187->Add(sizer_73_copy_1_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_187);
    sizer_187->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeGroup::EasyRPGDialogEventCommandChangeGroup(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeGroup::EasyRPGDialogEventCommandChangeGroup
    sizer_186_copy_copy_staticbox = new wxStaticBox(this, -1, _("Actor to change"));
    const wxString radio_box_12_copy_copy_choices[] = {
        _("Add actor"),
        _("Delete actor")
    };
    radio_box_12_copy_copy = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 2, radio_box_12_copy_copy_choices, 1, wxRA_SPECIFY_ROWS);
    radio_btn_5_copy_2_copy = new wxRadioButton(this, wxID_ANY, _("Fixed"));
    const wxString choice_32_copy_choices[] = {
        
    };
    choice_32_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_choices, 0);
    radio_btn_5_copy_1_copy_copy = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    button_67_copy_2_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeGroup::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeGroup::set_properties
    SetTitle(_("Change group"));
    radio_box_12_copy_copy->SetSelection(0);
    choice_32_copy->SetSize(wxSize(75, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy->SetSize(wxSize(25, -1));
    button_67_copy_2_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeGroup::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeGroup::do_layout
    wxBoxSizer* sizer_210 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_copy = new wxStaticBoxSizer(sizer_186_copy_copy_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18_copy_copy = new wxFlexGridSizer(2, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    sizer_210->Add(radio_box_12_copy_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    grid_sizer_18_copy_copy->Add(radio_btn_5_copy_2_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy->Add(choice_32_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy->Add(radio_btn_5_copy_1_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy->Add(button_15_copy_2_copy_2_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy->Add(sizer_58_copy_1_copy_2_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy->AddGrowableCol(1);
    sizer_186_copy_copy->Add(grid_sizer_18_copy_copy, 1, wxEXPAND, 0);
    sizer_210->Add(sizer_186_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy->Add(button_67_copy_2_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy->Add(button_67_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy->Add(button_67_copy_1_copy_copy_copy, 0, wxALL, 1);
    sizer_210->Add(sizer_73_copy_1_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_210);
    sizer_210->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeExperience::EasyRPGDialogEventCommandChangeExperience(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeExperience::EasyRPGDialogEventCommandChangeExperience
    sizer_186_copy_1_copy_staticbox = new wxStaticBox(this, -1, _("Operand"));
    sizer_186_copy_1_copy_copy_staticbox = new wxStaticBox(this, -1, _("Options"));
    sizer_186_copy_copy_1_staticbox = new wxStaticBox(this, -1, _("Target"));
    radio_btn_5_copy_2_copy_1_copy = new wxRadioButton(this, wxID_ANY, _("Whole group"));
    radio_btn_5_copy_2_copy_1 = new wxRadioButton(this, wxID_ANY, _("Fixed"));
    const wxString choice_32_copy_1_choices[] = {
        
    };
    choice_32_copy_1 = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_choices, 0);
    radio_btn_5_copy_1_copy_copy_1 = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1 = new wxButton(this, wxID_ANY, _("..."));
    const wxString radio_box_12_copy_copy_1_choices[] = {
        _("Increase experience"),
        _("Decrease experience")
    };
    radio_box_12_copy_copy_1 = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 2, radio_box_12_copy_copy_1_choices, 1, wxRA_SPECIFY_ROWS);
    radio_btn_5_copy_3_copy = new wxRadioButton(this, wxID_ANY, _("Constant"));
    spin_ctrl_8_copy_1_copy_3_copy_1_copy_copy = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    radio_btn_5_copy_1_copy_1_copy = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2_copy_1_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_1_copy = new wxButton(this, wxID_ANY, _("..."));
    checkbox_11 = new wxCheckBox(this, wxID_ANY, _("Show message if level ups"));
    button_67_copy_2_copy_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeExperience::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeExperience::set_properties
    SetTitle(_("Change experience"));
    choice_32_copy_1->SetSize(wxSize(75, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1->SetSize(wxSize(25, -1));
    radio_box_12_copy_copy_1->SetSelection(0);
    spin_ctrl_8_copy_1_copy_3_copy_1_copy_copy->SetSize(wxSize(60, -1));
    text_ctrl_6_copy_2_copy_2_copy_1_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_1_copy->SetSize(wxSize(25, -1));
    button_67_copy_2_copy_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeExperience::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeExperience::do_layout
    wxBoxSizer* sizer_211 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_1_copy_copy = new wxStaticBoxSizer(sizer_186_copy_1_copy_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_1_copy = new wxStaticBoxSizer(sizer_186_copy_1_copy_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18_copy_1_copy = new wxFlexGridSizer(2, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_1_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_copy_1 = new wxStaticBoxSizer(sizer_186_copy_copy_1_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18_copy_copy_1 = new wxFlexGridSizer(3, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    grid_sizer_18_copy_copy_1->Add(radio_btn_5_copy_2_copy_1_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy_1->Add(radio_btn_5_copy_2_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1->Add(choice_32_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1->Add(radio_btn_5_copy_1_copy_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1->Add(button_15_copy_2_copy_2_copy_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1->Add(sizer_58_copy_1_copy_2_copy_copy_1, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy_1->AddGrowableCol(1);
    sizer_186_copy_copy_1->Add(grid_sizer_18_copy_copy_1, 1, wxEXPAND, 0);
    sizer_211->Add(sizer_186_copy_copy_1, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_211->Add(radio_box_12_copy_copy_1, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    grid_sizer_18_copy_1_copy->Add(radio_btn_5_copy_3_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1_copy->Add(spin_ctrl_8_copy_1_copy_3_copy_1_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1_copy->Add(radio_btn_5_copy_1_copy_1_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_1_copy->Add(text_ctrl_6_copy_2_copy_2_copy_1_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_1_copy->Add(button_15_copy_2_copy_2_copy_1_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1_copy->Add(sizer_58_copy_1_copy_2_copy_1_copy, 1, wxEXPAND, 0);
    grid_sizer_18_copy_1_copy->AddGrowableCol(1);
    sizer_186_copy_1_copy->Add(grid_sizer_18_copy_1_copy, 1, wxEXPAND, 0);
    sizer_211->Add(sizer_186_copy_1_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_186_copy_1_copy_copy->Add(checkbox_11, 1, 0, 0);
    sizer_211->Add(sizer_186_copy_1_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy_copy->Add(button_67_copy_2_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy->Add(button_67_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy->Add(button_67_copy_1_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_211->Add(sizer_73_copy_1_copy_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_211);
    sizer_211->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeLevel::EasyRPGDialogEventCommandChangeLevel(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeLevel::EasyRPGDialogEventCommandChangeLevel
    sizer_186_copy_1_copy_copy_1_staticbox = new wxStaticBox(this, -1, _("Operand"));
    sizer_186_copy_1_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Options"));
    sizer_186_copy_copy_1_copy_staticbox = new wxStaticBox(this, -1, _("Target"));
    radio_btn_5_copy_2_copy_1_copy_copy = new wxRadioButton(this, wxID_ANY, _("Whole group"));
    radio_btn_5_copy_2_copy_1_copy_1 = new wxRadioButton(this, wxID_ANY, _("Fixed"));
    const wxString choice_32_copy_1_copy_choices[] = {
        
    };
    choice_32_copy_1_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_choices, 0);
    radio_btn_5_copy_1_copy_copy_1_copy = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy = new wxButton(this, wxID_ANY, _("..."));
    const wxString radio_box_12_copy_copy_1_copy_choices[] = {
        _("Increase level"),
        _("Decrease level")
    };
    radio_box_12_copy_copy_1_copy = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 2, radio_box_12_copy_copy_1_copy_choices, 1, wxRA_SPECIFY_ROWS);
    radio_btn_5_copy_3_copy_copy = new wxRadioButton(this, wxID_ANY, _("Constant"));
    spin_ctrl_8_copy_1_copy_3_copy_1_copy_copy_copy = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    radio_btn_5_copy_1_copy_1_copy_copy = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2_copy_1_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_1_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    checkbox_11_copy_1 = new wxCheckBox(this, wxID_ANY, _("Show message of level up"));
    button_67_copy_2_copy_copy_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeLevel::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeLevel::set_properties
    SetTitle(_("Change level"));
    choice_32_copy_1_copy->SetSize(wxSize(75, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy->SetSize(wxSize(25, -1));
    radio_box_12_copy_copy_1_copy->SetSelection(0);
    spin_ctrl_8_copy_1_copy_3_copy_1_copy_copy_copy->SetSize(wxSize(60, -1));
    text_ctrl_6_copy_2_copy_2_copy_1_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_1_copy_copy->SetSize(wxSize(25, -1));
    button_67_copy_2_copy_copy_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeLevel::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeLevel::do_layout
    wxBoxSizer* sizer_211_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_1_copy_copy_copy = new wxStaticBoxSizer(sizer_186_copy_1_copy_copy_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_1_copy_copy_1 = new wxStaticBoxSizer(sizer_186_copy_1_copy_copy_1_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18_copy_1_copy_copy = new wxFlexGridSizer(2, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_1_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_copy_1_copy = new wxStaticBoxSizer(sizer_186_copy_copy_1_copy_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18_copy_copy_1_copy = new wxFlexGridSizer(3, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy = new wxBoxSizer(wxHORIZONTAL);
    grid_sizer_18_copy_copy_1_copy->Add(radio_btn_5_copy_2_copy_1_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy_1_copy->Add(radio_btn_5_copy_2_copy_1_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy->Add(choice_32_copy_1_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy->Add(radio_btn_5_copy_1_copy_copy_1_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy_1_copy->AddGrowableCol(1);
    sizer_186_copy_copy_1_copy->Add(grid_sizer_18_copy_copy_1_copy, 1, wxEXPAND, 0);
    sizer_211_copy->Add(sizer_186_copy_copy_1_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_211_copy->Add(radio_box_12_copy_copy_1_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    grid_sizer_18_copy_1_copy_copy->Add(radio_btn_5_copy_3_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1_copy_copy->Add(spin_ctrl_8_copy_1_copy_3_copy_1_copy_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1_copy_copy->Add(radio_btn_5_copy_1_copy_1_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_1_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_1_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_1_copy_copy->Add(button_15_copy_2_copy_2_copy_1_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1_copy_copy->Add(sizer_58_copy_1_copy_2_copy_1_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_18_copy_1_copy_copy->AddGrowableCol(1);
    sizer_186_copy_1_copy_copy_1->Add(grid_sizer_18_copy_1_copy_copy, 1, wxEXPAND, 0);
    sizer_211_copy->Add(sizer_186_copy_1_copy_copy_1, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_186_copy_1_copy_copy_copy->Add(checkbox_11_copy_1, 1, 0, 0);
    sizer_211_copy->Add(sizer_186_copy_1_copy_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy_copy_copy->Add(button_67_copy_2_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy->Add(button_67_copy_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_211_copy->Add(sizer_73_copy_1_copy_copy_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_211_copy);
    sizer_211_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeParameter::EasyRPGDialogEventCommandChangeParameter(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeParameter::EasyRPGDialogEventCommandChangeParameter
    sizer_186_copy_copy_1_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Parameter type"));
    sizer_186_copy_1_copy_copy_1_copy_staticbox = new wxStaticBox(this, -1, _("Operand"));
    sizer_186_copy_copy_1_copy_copy_staticbox = new wxStaticBox(this, -1, _("Target"));
    radio_btn_5_copy_2_copy_1_copy_copy_copy = new wxRadioButton(this, wxID_ANY, _("Whole group"));
    radio_btn_5_copy_2_copy_1_copy_1_copy = new wxRadioButton(this, wxID_ANY, _("Fixed"));
    const wxString choice_32_copy_1_copy_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_choices, 0);
    radio_btn_5_copy_1_copy_copy_1_copy_copy = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    const wxString radio_box_12_copy_copy_1_copy_copy_choices[] = {
        _("Increase parameter"),
        _("Decrease parameter")
    };
    radio_box_12_copy_copy_1_copy_copy = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 2, radio_box_12_copy_copy_1_copy_copy_choices, 1, wxRA_SPECIFY_ROWS);
    const wxString choice_32_copy_1_copy_copy_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_choices, 0);
    radio_btn_5_copy_3_copy_copy_copy = new wxRadioButton(this, wxID_ANY, _("Constant"));
    spin_ctrl_8_copy_1_copy_3_copy_1_copy_copy_copy_copy = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    radio_btn_5_copy_1_copy_1_copy_copy_copy = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2_copy_1_copy_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_1_copy_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    button_67_copy_2_copy_copy_copy_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeParameter::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeParameter::set_properties
    SetTitle(_("Change parameter"));
    choice_32_copy_1_copy_copy->SetSize(wxSize(75, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy->SetSize(wxSize(25, -1));
    radio_box_12_copy_copy_1_copy_copy->SetSelection(0);
    choice_32_copy_1_copy_copy_copy->SetSize(wxSize(100, -1));
    spin_ctrl_8_copy_1_copy_3_copy_1_copy_copy_copy_copy->SetSize(wxSize(60, -1));
    text_ctrl_6_copy_2_copy_2_copy_1_copy_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_1_copy_copy_copy->SetSize(wxSize(25, -1));
    button_67_copy_2_copy_copy_copy_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeParameter::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeParameter::do_layout
    wxBoxSizer* sizer_211_copy_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_1_copy_copy_1_copy = new wxStaticBoxSizer(sizer_186_copy_1_copy_copy_1_copy_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18_copy_1_copy_copy_copy = new wxFlexGridSizer(2, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_1_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_318 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_copy_1_copy_copy_copy = new wxStaticBoxSizer(sizer_186_copy_copy_1_copy_copy_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_copy_1_copy_copy = new wxStaticBoxSizer(sizer_186_copy_copy_1_copy_copy_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18_copy_copy_1_copy_copy = new wxFlexGridSizer(3, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    grid_sizer_18_copy_copy_1_copy_copy->Add(radio_btn_5_copy_2_copy_1_copy_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy_1_copy_copy->Add(radio_btn_5_copy_2_copy_1_copy_1_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy->Add(choice_32_copy_1_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy->Add(radio_btn_5_copy_1_copy_copy_1_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy_1_copy_copy->AddGrowableCol(1);
    sizer_186_copy_copy_1_copy_copy->Add(grid_sizer_18_copy_copy_1_copy_copy, 1, wxEXPAND, 0);
    sizer_211_copy_copy->Add(sizer_186_copy_copy_1_copy_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_318->Add(radio_box_12_copy_copy_1_copy_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_186_copy_copy_1_copy_copy_copy->Add(choice_32_copy_1_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_318->Add(sizer_186_copy_copy_1_copy_copy_copy, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_211_copy_copy->Add(sizer_318, 0, wxEXPAND, 0);
    grid_sizer_18_copy_1_copy_copy_copy->Add(radio_btn_5_copy_3_copy_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1_copy_copy_copy->Add(spin_ctrl_8_copy_1_copy_3_copy_1_copy_copy_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1_copy_copy_copy->Add(radio_btn_5_copy_1_copy_1_copy_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_1_copy_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_1_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_1_copy_copy_copy->Add(button_15_copy_2_copy_2_copy_1_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1_copy_copy_copy->Add(sizer_58_copy_1_copy_2_copy_1_copy_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_18_copy_1_copy_copy_copy->AddGrowableCol(1);
    sizer_186_copy_1_copy_copy_1_copy->Add(grid_sizer_18_copy_1_copy_copy_copy, 1, wxEXPAND, 0);
    sizer_211_copy_copy->Add(sizer_186_copy_1_copy_copy_1_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_211_copy_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_211_copy_copy);
    sizer_211_copy_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeSkill::EasyRPGDialogEventCommandChangeSkill(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeSkill::EasyRPGDialogEventCommandChangeSkill
    sizer_186_copy_1_copy_copy_1_copy_1_staticbox = new wxStaticBox(this, -1, _("Operand"));
    sizer_186_copy_copy_1_copy_copy_1_staticbox = new wxStaticBox(this, -1, _("Target"));
    radio_btn_5_copy_2_copy_1_copy_copy_copy_1 = new wxRadioButton(this, wxID_ANY, _("Whole group"));
    radio_btn_5_copy_2_copy_1_copy_1_copy_1 = new wxRadioButton(this, wxID_ANY, _("Fixed"));
    const wxString choice_32_copy_1_copy_copy_1_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_1 = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_1_choices, 0);
    radio_btn_5_copy_1_copy_copy_1_copy_copy_1 = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_1 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_1 = new wxButton(this, wxID_ANY, _("..."));
    const wxString radio_box_12_copy_copy_1_copy_copy_1_choices[] = {
        _("Learn skill"),
        _("Forget skill")
    };
    radio_box_12_copy_copy_1_copy_copy_1 = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 2, radio_box_12_copy_copy_1_copy_copy_1_choices, 1, wxRA_SPECIFY_ROWS);
    radio_btn_5_copy_3_copy_copy_copy_1 = new wxRadioButton(this, wxID_ANY, _("Constant"));
    const wxString choice_32_copy_1_copy_copy_1_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_1_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_1_copy_choices, 0);
    radio_btn_5_copy_1_copy_1_copy_copy_copy_1 = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2_copy_1_copy_copy_copy_1 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_1_copy_copy_copy_1 = new wxButton(this, wxID_ANY, _("..."));
    button_67_copy_2_copy_copy_copy_copy_copy_1 = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_1 = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_1 = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeSkill::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeSkill::set_properties
    SetTitle(_("Change skill"));
    choice_32_copy_1_copy_copy_1->SetSize(wxSize(75, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_1->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_1->SetSize(wxSize(25, -1));
    radio_box_12_copy_copy_1_copy_copy_1->SetSelection(0);
    choice_32_copy_1_copy_copy_1_copy->SetSize(wxSize(75, -1));
    text_ctrl_6_copy_2_copy_2_copy_1_copy_copy_copy_1->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_1_copy_copy_copy_1->SetSize(wxSize(25, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_1->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeSkill::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeSkill::do_layout
    wxBoxSizer* sizer_211_copy_copy_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_1_copy_copy_1_copy_1 = new wxStaticBoxSizer(sizer_186_copy_1_copy_copy_1_copy_1_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18_copy_1_copy_copy_copy_1 = new wxFlexGridSizer(2, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_1_copy_copy_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_copy_1_copy_copy_1 = new wxStaticBoxSizer(sizer_186_copy_copy_1_copy_copy_1_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18_copy_copy_1_copy_copy_1 = new wxFlexGridSizer(3, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    grid_sizer_18_copy_copy_1_copy_copy_1->Add(radio_btn_5_copy_2_copy_1_copy_copy_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1->Add(radio_btn_5_copy_2_copy_1_copy_1_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1->Add(choice_32_copy_1_copy_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1->Add(radio_btn_5_copy_1_copy_copy_1_copy_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_1->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_1->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_1, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1->AddGrowableCol(1);
    sizer_186_copy_copy_1_copy_copy_1->Add(grid_sizer_18_copy_copy_1_copy_copy_1, 1, wxEXPAND, 0);
    sizer_211_copy_copy_1->Add(sizer_186_copy_copy_1_copy_copy_1, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_211_copy_copy_1->Add(radio_box_12_copy_copy_1_copy_copy_1, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    grid_sizer_18_copy_1_copy_copy_copy_1->Add(radio_btn_5_copy_3_copy_copy_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1_copy_copy_copy_1->Add(choice_32_copy_1_copy_copy_1_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1_copy_copy_copy_1->Add(radio_btn_5_copy_1_copy_1_copy_copy_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_1_copy_copy_copy_1->Add(text_ctrl_6_copy_2_copy_2_copy_1_copy_copy_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_1_copy_copy_copy_1->Add(button_15_copy_2_copy_2_copy_1_copy_copy_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1_copy_copy_copy_1->Add(sizer_58_copy_1_copy_2_copy_1_copy_copy_copy_1, 1, wxEXPAND, 0);
    grid_sizer_18_copy_1_copy_copy_copy_1->AddGrowableCol(1);
    sizer_186_copy_1_copy_copy_1_copy_1->Add(grid_sizer_18_copy_1_copy_copy_copy_1, 1, wxEXPAND, 0);
    sizer_211_copy_copy_1->Add(sizer_186_copy_1_copy_copy_1_copy_1, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_1->Add(button_67_copy_2_copy_copy_copy_copy_copy_1, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_1->Add(button_67_copy_copy_copy_copy_copy_copy_copy_1, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_1->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_1, 0, wxALL, 1);
    sizer_211_copy_copy_1->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_1, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_211_copy_copy_1);
    sizer_211_copy_copy_1->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeEquipment::EasyRPGDialogEventCommandChangeEquipment(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeEquipment::EasyRPGDialogEventCommandChangeEquipment
    sizer_186_copy_1_copy_copy_1_copy_1_copy_staticbox = new wxStaticBox(this, -1, _("Operand"));
    sizer_186_copy_copy_1_copy_copy_1_copy_staticbox = new wxStaticBox(this, -1, _("Target"));
    radio_btn_5_copy_2_copy_1_copy_copy_copy_1_copy = new wxRadioButton(this, wxID_ANY, _("Whole group"));
    radio_btn_5_copy_2_copy_1_copy_1_copy_1_copy = new wxRadioButton(this, wxID_ANY, _("Fixed"));
    const wxString choice_32_copy_1_copy_copy_1_copy_1_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_1_copy_1 = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_1_copy_1_choices, 0);
    radio_btn_5_copy_1_copy_copy_1_copy_copy_1_copy = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_1_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_1_copy = new wxButton(this, wxID_ANY, _("..."));
    const wxString radio_box_12_copy_copy_1_copy_copy_1_copy_choices[] = {
        _("Equip"),
        _("Unequip")
    };
    radio_box_12_copy_copy_1_copy_copy_1_copy = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 2, radio_box_12_copy_copy_1_copy_copy_1_copy_choices, 1, wxRA_SPECIFY_ROWS);
    radio_btn_5_copy_3_copy_copy_copy_1_copy = new wxRadioButton(this, wxID_ANY, _("Constant"));
    const wxString choice_32_copy_1_copy_copy_1_copy_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_1_copy_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_1_copy_copy_choices, 0);
    radio_btn_5_copy_1_copy_1_copy_copy_copy_1_copy = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2_copy_1_copy_copy_copy_1_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_1_copy_copy_copy_1_copy = new wxButton(this, wxID_ANY, _("..."));
    const wxString radio_box_12_copy_copy_1_copy_copy_1_copy_copy_choices[] = {
        _("Everything"),
        _("Weapon"),
        _("Shield"),
        _("Armor"),
        _("Helmet"),
        _("Accesory")
    };
    radio_box_12_copy_copy_1_copy_copy_1_copy_copy = new wxRadioBox(this, wxID_ANY, _("Remove equipment"), wxDefaultPosition, wxDefaultSize, 6, radio_box_12_copy_copy_1_copy_copy_1_copy_copy_choices, 1, wxRA_SPECIFY_ROWS);
    button_67_copy_2_copy_copy_copy_copy_copy_1_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_1_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_1_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeEquipment::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeEquipment::set_properties
    SetTitle(_("Change equipment"));
    choice_32_copy_1_copy_copy_1_copy_1->SetSize(wxSize(75, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_1_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_1_copy->SetSize(wxSize(25, -1));
    radio_box_12_copy_copy_1_copy_copy_1_copy->SetSelection(0);
    choice_32_copy_1_copy_copy_1_copy_copy->SetSize(wxSize(75, -1));
    text_ctrl_6_copy_2_copy_2_copy_1_copy_copy_copy_1_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_1_copy_copy_copy_1_copy->SetSize(wxSize(25, -1));
    radio_box_12_copy_copy_1_copy_copy_1_copy_copy->SetSelection(0);
    button_67_copy_2_copy_copy_copy_copy_copy_1_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeEquipment::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeEquipment::do_layout
    wxBoxSizer* sizer_211_copy_copy_1_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_1_copy_copy_1_copy_1_copy = new wxStaticBoxSizer(sizer_186_copy_1_copy_copy_1_copy_1_copy_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18_copy_1_copy_copy_copy_1_copy = new wxFlexGridSizer(2, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_1_copy_copy_copy_1_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_copy_1_copy_copy_1_copy = new wxStaticBoxSizer(sizer_186_copy_copy_1_copy_copy_1_copy_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18_copy_copy_1_copy_copy_1_copy = new wxFlexGridSizer(3, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_1_copy = new wxBoxSizer(wxHORIZONTAL);
    grid_sizer_18_copy_copy_1_copy_copy_1_copy->Add(radio_btn_5_copy_2_copy_1_copy_copy_copy_1_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1_copy->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1_copy->Add(radio_btn_5_copy_2_copy_1_copy_1_copy_1_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1_copy->Add(choice_32_copy_1_copy_copy_1_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1_copy->Add(radio_btn_5_copy_1_copy_copy_1_copy_copy_1_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_1_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_1_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_1_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_1_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_1_copy, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1_copy->AddGrowableCol(1);
    sizer_186_copy_copy_1_copy_copy_1_copy->Add(grid_sizer_18_copy_copy_1_copy_copy_1_copy, 1, wxEXPAND, 0);
    sizer_211_copy_copy_1_copy->Add(sizer_186_copy_copy_1_copy_copy_1_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_211_copy_copy_1_copy->Add(radio_box_12_copy_copy_1_copy_copy_1_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    grid_sizer_18_copy_1_copy_copy_copy_1_copy->Add(radio_btn_5_copy_3_copy_copy_copy_1_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1_copy_copy_copy_1_copy->Add(choice_32_copy_1_copy_copy_1_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1_copy_copy_copy_1_copy->Add(radio_btn_5_copy_1_copy_1_copy_copy_copy_1_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_1_copy_copy_copy_1_copy->Add(text_ctrl_6_copy_2_copy_2_copy_1_copy_copy_copy_1_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_1_copy_copy_copy_1_copy->Add(button_15_copy_2_copy_2_copy_1_copy_copy_copy_1_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1_copy_copy_copy_1_copy->Add(sizer_58_copy_1_copy_2_copy_1_copy_copy_copy_1_copy, 1, wxEXPAND, 0);
    grid_sizer_18_copy_1_copy_copy_copy_1_copy->AddGrowableCol(1);
    sizer_186_copy_1_copy_copy_1_copy_1_copy->Add(grid_sizer_18_copy_1_copy_copy_copy_1_copy, 1, wxEXPAND, 0);
    sizer_211_copy_copy_1_copy->Add(sizer_186_copy_1_copy_copy_1_copy_1_copy, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_211_copy_copy_1_copy->Add(radio_box_12_copy_copy_1_copy_copy_1_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_1_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_1_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_1_copy, 0, wxALL, 1);
    sizer_211_copy_copy_1_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_211_copy_copy_1_copy);
    sizer_211_copy_copy_1_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeHP::EasyRPGDialogEventCommandChangeHP(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeHP::EasyRPGDialogEventCommandChangeHP
    sizer_186_copy_1_copy_copy_1_copy_1_copy_copy_staticbox = new wxStaticBox(this, -1, _("Operand"));
    sizer_186_copy_1_copy_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Options"));
    sizer_186_copy_copy_1_copy_copy_1_copy_copy_staticbox = new wxStaticBox(this, -1, _("Target"));
    radio_btn_5_copy_2_copy_1_copy_copy_copy_1_copy_copy = new wxRadioButton(this, wxID_ANY, _("Whole group"));
    radio_btn_5_copy_2_copy_1_copy_1_copy_1_copy_copy = new wxRadioButton(this, wxID_ANY, _("Fixed"));
    const wxString choice_32_copy_1_copy_copy_1_copy_1_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_1_copy_1_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_1_copy_1_copy_choices, 0);
    radio_btn_5_copy_1_copy_copy_1_copy_copy_1_copy_copy = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    const wxString radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_choices[] = {
        _("Increase HP"),
        _("Decrease HP")
    };
    radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1 = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 2, radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_choices, 1, wxRA_SPECIFY_ROWS);
    radio_btn_5_copy_3_copy_copy_copy_1_copy_copy = new wxRadioButton(this, wxID_ANY, _("Constant"));
    spin_ctrl_8_copy_1_copy_3_copy_1_copy_copy_copy_copy_1 = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    radio_btn_5_copy_1_copy_1_copy_copy_copy_1_copy_copy = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2_copy_1_copy_copy_copy_1_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_1_copy_copy_copy_1_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    checkbox_11_copy_1_copy = new wxCheckBox(this, wxID_ANY, _("Allow no battle"));
    button_67_copy_2_copy_copy_copy_copy_copy_1_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_1_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_1_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeHP::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeHP::set_properties
    SetTitle(_("Change HP"));
    choice_32_copy_1_copy_copy_1_copy_1_copy->SetSize(wxSize(75, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_copy->SetSize(wxSize(25, -1));
    radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1->SetSelection(0);
    spin_ctrl_8_copy_1_copy_3_copy_1_copy_copy_copy_copy_1->SetSize(wxSize(60, -1));
    text_ctrl_6_copy_2_copy_2_copy_1_copy_copy_copy_1_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_1_copy_copy_copy_1_copy_copy->SetSize(wxSize(25, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_1_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeHP::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeHP::do_layout
    wxBoxSizer* sizer_211_copy_copy_1_copy_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_1_copy_copy_copy_copy = new wxStaticBoxSizer(sizer_186_copy_1_copy_copy_copy_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_1_copy_copy_1_copy_1_copy_copy = new wxStaticBoxSizer(sizer_186_copy_1_copy_copy_1_copy_1_copy_copy_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18_copy_1_copy_copy_copy_1_copy_copy = new wxFlexGridSizer(2, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_1_copy_copy_copy_1_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_copy_1_copy_copy_1_copy_copy = new wxStaticBoxSizer(sizer_186_copy_copy_1_copy_copy_1_copy_copy_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18_copy_copy_1_copy_copy_1_copy_copy = new wxFlexGridSizer(3, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_1_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    grid_sizer_18_copy_copy_1_copy_copy_1_copy_copy->Add(radio_btn_5_copy_2_copy_1_copy_copy_copy_1_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1_copy_copy->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1_copy_copy->Add(radio_btn_5_copy_2_copy_1_copy_1_copy_1_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1_copy_copy->Add(choice_32_copy_1_copy_copy_1_copy_1_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1_copy_copy->Add(radio_btn_5_copy_1_copy_copy_1_copy_copy_1_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_1_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_1_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1_copy_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_1_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1_copy_copy->AddGrowableCol(1);
    sizer_186_copy_copy_1_copy_copy_1_copy_copy->Add(grid_sizer_18_copy_copy_1_copy_copy_1_copy_copy, 1, wxEXPAND, 0);
    sizer_211_copy_copy_1_copy_copy->Add(sizer_186_copy_copy_1_copy_copy_1_copy_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_211_copy_copy_1_copy_copy->Add(radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    grid_sizer_18_copy_1_copy_copy_copy_1_copy_copy->Add(radio_btn_5_copy_3_copy_copy_copy_1_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1_copy_copy_copy_1_copy_copy->Add(spin_ctrl_8_copy_1_copy_3_copy_1_copy_copy_copy_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1_copy_copy_copy_1_copy_copy->Add(radio_btn_5_copy_1_copy_1_copy_copy_copy_1_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_1_copy_copy_copy_1_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_1_copy_copy_copy_1_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_1_copy_copy_copy_1_copy_copy->Add(button_15_copy_2_copy_2_copy_1_copy_copy_copy_1_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1_copy_copy_copy_1_copy_copy->Add(sizer_58_copy_1_copy_2_copy_1_copy_copy_copy_1_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_18_copy_1_copy_copy_copy_1_copy_copy->AddGrowableCol(1);
    sizer_186_copy_1_copy_copy_1_copy_1_copy_copy->Add(grid_sizer_18_copy_1_copy_copy_copy_1_copy_copy, 1, wxEXPAND, 0);
    sizer_211_copy_copy_1_copy_copy->Add(sizer_186_copy_1_copy_copy_1_copy_1_copy_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_186_copy_1_copy_copy_copy_copy->Add(checkbox_11_copy_1_copy, 1, 0, 0);
    sizer_211_copy_copy_1_copy_copy->Add(sizer_186_copy_1_copy_copy_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_1_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_1_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_1_copy_copy, 0, wxALL, 1);
    sizer_211_copy_copy_1_copy_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_211_copy_copy_1_copy_copy);
    sizer_211_copy_copy_1_copy_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeMP::EasyRPGDialogEventCommandChangeMP(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeMP::EasyRPGDialogEventCommandChangeMP
    sizer_186_copy_1_copy_copy_1_copy_1_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Operand"));
    sizer_186_copy_copy_1_copy_copy_1_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Target"));
    radio_btn_5_copy_2_copy_1_copy_copy_copy_1_copy_copy_copy = new wxRadioButton(this, wxID_ANY, _("Whole group"));
    radio_btn_5_copy_2_copy_1_copy_1_copy_1_copy_copy_copy = new wxRadioButton(this, wxID_ANY, _("Fixed"));
    const wxString choice_32_copy_1_copy_copy_1_copy_1_copy_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_1_copy_1_copy_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_1_copy_1_copy_copy_choices, 0);
    radio_btn_5_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    const wxString radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_choices[] = {
        _("Increase MP"),
        _("Decrease MP")
    };
    radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 2, radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_choices, 1, wxRA_SPECIFY_ROWS);
    radio_btn_5_copy_3_copy_copy_copy_1_copy_copy_copy = new wxRadioButton(this, wxID_ANY, _("Constant"));
    spin_ctrl_8_copy_1_copy_3_copy_1_copy_copy_copy_copy_1_copy = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    radio_btn_5_copy_1_copy_1_copy_copy_copy_1_copy_copy_copy = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2_copy_1_copy_copy_copy_1_copy_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_1_copy_copy_copy_1_copy_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    button_67_copy_2_copy_copy_copy_copy_copy_1_copy_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_1_copy_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeMP::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeMP::set_properties
    SetTitle(_("Change MP"));
    choice_32_copy_1_copy_copy_1_copy_1_copy_copy->SetSize(wxSize(75, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_copy_copy->SetSize(wxSize(25, -1));
    radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy->SetSelection(0);
    spin_ctrl_8_copy_1_copy_3_copy_1_copy_copy_copy_copy_1_copy->SetSize(wxSize(60, -1));
    text_ctrl_6_copy_2_copy_2_copy_1_copy_copy_copy_1_copy_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_1_copy_copy_copy_1_copy_copy_copy->SetSize(wxSize(25, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_1_copy_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeMP::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeMP::do_layout
    wxBoxSizer* sizer_211_copy_copy_1_copy_copy_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_1_copy_copy_1_copy_1_copy_copy_copy = new wxStaticBoxSizer(sizer_186_copy_1_copy_copy_1_copy_1_copy_copy_copy_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18_copy_1_copy_copy_copy_1_copy_copy_copy = new wxFlexGridSizer(2, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_1_copy_copy_copy_1_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_copy_1_copy_copy_1_copy_copy_copy = new wxStaticBoxSizer(sizer_186_copy_copy_1_copy_copy_1_copy_copy_copy_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18_copy_copy_1_copy_copy_1_copy_copy_copy = new wxFlexGridSizer(3, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_1_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    grid_sizer_18_copy_copy_1_copy_copy_1_copy_copy_copy->Add(radio_btn_5_copy_2_copy_1_copy_copy_copy_1_copy_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1_copy_copy_copy->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1_copy_copy_copy->Add(radio_btn_5_copy_2_copy_1_copy_1_copy_1_copy_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1_copy_copy_copy->Add(choice_32_copy_1_copy_copy_1_copy_1_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1_copy_copy_copy->Add(radio_btn_5_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_1_copy_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_1_copy_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1_copy_copy_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_1_copy_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy_1_copy_copy_1_copy_copy_copy->AddGrowableCol(1);
    sizer_186_copy_copy_1_copy_copy_1_copy_copy_copy->Add(grid_sizer_18_copy_copy_1_copy_copy_1_copy_copy_copy, 1, wxEXPAND, 0);
    sizer_211_copy_copy_1_copy_copy_copy->Add(sizer_186_copy_copy_1_copy_copy_1_copy_copy_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_211_copy_copy_1_copy_copy_copy->Add(radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    grid_sizer_18_copy_1_copy_copy_copy_1_copy_copy_copy->Add(radio_btn_5_copy_3_copy_copy_copy_1_copy_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1_copy_copy_copy_1_copy_copy_copy->Add(spin_ctrl_8_copy_1_copy_3_copy_1_copy_copy_copy_copy_1_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1_copy_copy_copy_1_copy_copy_copy->Add(radio_btn_5_copy_1_copy_1_copy_copy_copy_1_copy_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_1_copy_copy_copy_1_copy_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_1_copy_copy_copy_1_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_1_copy_copy_copy_1_copy_copy_copy->Add(button_15_copy_2_copy_2_copy_1_copy_copy_copy_1_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_1_copy_copy_copy_1_copy_copy_copy->Add(sizer_58_copy_1_copy_2_copy_1_copy_copy_copy_1_copy_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_18_copy_1_copy_copy_copy_1_copy_copy_copy->AddGrowableCol(1);
    sizer_186_copy_1_copy_copy_1_copy_1_copy_copy_copy->Add(grid_sizer_18_copy_1_copy_copy_copy_1_copy_copy_copy, 1, wxEXPAND, 0);
    sizer_211_copy_copy_1_copy_copy_copy->Add(sizer_186_copy_1_copy_copy_1_copy_1_copy_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy_copy_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_1_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy_copy_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy_copy_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_1_copy_copy_copy, 0, wxALL, 1);
    sizer_211_copy_copy_1_copy_copy_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_211_copy_copy_1_copy_copy_copy);
    sizer_211_copy_copy_1_copy_copy_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeState::EasyRPGDialogEventCommandChangeState(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeState::EasyRPGDialogEventCommandChangeState
    sizer_186_copy_copy_1_copy_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("State"));
    sizer_186_copy_copy_1_copy_copy_copy_1_staticbox = new wxStaticBox(this, -1, _("Target"));
    radio_btn_5_copy_2_copy_1_copy_copy_copy_copy = new wxRadioButton(this, wxID_ANY, _("Whole group"));
    radio_btn_5_copy_2_copy_1_copy_1_copy_copy = new wxRadioButton(this, wxID_ANY, _("Fixed"));
    const wxString choice_32_copy_1_copy_copy_copy_1_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy_1 = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_1_choices, 0);
    radio_btn_5_copy_1_copy_copy_1_copy_copy_copy = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    const wxString radio_box_12_copy_copy_1_copy_copy_copy_choices[] = {
        _("Cause state"),
        _("Heal state")
    };
    radio_box_12_copy_copy_1_copy_copy_copy = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 2, radio_box_12_copy_copy_1_copy_copy_copy_choices, 1, wxRA_SPECIFY_ROWS);
    const wxString choice_32_copy_1_copy_copy_copy_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_copy_choices, 0);
    button_67_copy_2_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeState::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeState::set_properties
    SetTitle(_("Change state"));
    choice_32_copy_1_copy_copy_copy_1->SetSize(wxSize(75, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy->SetSize(wxSize(25, -1));
    radio_box_12_copy_copy_1_copy_copy_copy->SetSelection(0);
    choice_32_copy_1_copy_copy_copy_copy->SetSize(wxSize(100, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeState::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeState::do_layout
    wxBoxSizer* sizer_211_copy_copy_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_318_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_copy_1_copy_copy_copy_copy = new wxStaticBoxSizer(sizer_186_copy_copy_1_copy_copy_copy_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_copy_1_copy_copy_copy_1 = new wxStaticBoxSizer(sizer_186_copy_copy_1_copy_copy_copy_1_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18_copy_copy_1_copy_copy_copy = new wxFlexGridSizer(3, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    grid_sizer_18_copy_copy_1_copy_copy_copy->Add(radio_btn_5_copy_2_copy_1_copy_copy_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy->Add(radio_btn_5_copy_2_copy_1_copy_1_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy->Add(choice_32_copy_1_copy_copy_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy->Add(radio_btn_5_copy_1_copy_copy_1_copy_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy->AddGrowableCol(1);
    sizer_186_copy_copy_1_copy_copy_copy_1->Add(grid_sizer_18_copy_copy_1_copy_copy_copy, 1, wxEXPAND, 0);
    sizer_211_copy_copy_copy->Add(sizer_186_copy_copy_1_copy_copy_copy_1, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_318_copy->Add(radio_box_12_copy_copy_1_copy_copy_copy, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_186_copy_copy_1_copy_copy_copy_copy->Add(choice_32_copy_1_copy_copy_copy_copy, 1, 0, 0);
    sizer_318_copy->Add(sizer_186_copy_copy_1_copy_copy_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_211_copy_copy_copy->Add(sizer_318_copy, 1, wxEXPAND, 0);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_211_copy_copy_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_211_copy_copy_copy);
    sizer_211_copy_copy_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandFullRecover::EasyRPGDialogEventCommandFullRecover(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandFullRecover::EasyRPGDialogEventCommandFullRecover
    sizer_186_copy_copy_1_copy_copy_copy_1_copy_staticbox = new wxStaticBox(this, -1, _("Target"));
    radio_btn_5_copy_2_copy_1_copy_copy_copy_copy_copy = new wxRadioButton(this, wxID_ANY, _("Whole group"));
    radio_btn_5_copy_2_copy_1_copy_1_copy_copy_copy = new wxRadioButton(this, wxID_ANY, _("Fixed"));
    const wxString choice_32_copy_1_copy_copy_copy_1_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy_1_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_1_copy_choices, 0);
    radio_btn_5_copy_1_copy_copy_1_copy_copy_copy_copy = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandFullRecover::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandFullRecover::set_properties
    SetTitle(_("Full recover"));
    choice_32_copy_1_copy_copy_copy_1_copy->SetSize(wxSize(75, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy->SetSize(wxSize(25, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandFullRecover::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandFullRecover::do_layout
    wxBoxSizer* sizer_211_copy_copy_copy_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_copy_1_copy_copy_copy_1_copy = new wxStaticBoxSizer(sizer_186_copy_copy_1_copy_copy_copy_1_copy_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18_copy_copy_1_copy_copy_copy_copy = new wxFlexGridSizer(3, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    grid_sizer_18_copy_copy_1_copy_copy_copy_copy->Add(radio_btn_5_copy_2_copy_1_copy_copy_copy_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy_copy->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy_copy->Add(radio_btn_5_copy_2_copy_1_copy_1_copy_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy_copy->Add(choice_32_copy_1_copy_copy_copy_1_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy_copy->Add(radio_btn_5_copy_1_copy_copy_1_copy_copy_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy_copy->AddGrowableCol(1);
    sizer_186_copy_copy_1_copy_copy_copy_1_copy->Add(grid_sizer_18_copy_copy_1_copy_copy_copy_copy, 1, wxEXPAND, 0);
    sizer_211_copy_copy_copy_copy->Add(sizer_186_copy_copy_1_copy_copy_copy_1_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_211_copy_copy_copy_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_211_copy_copy_copy_copy);
    sizer_211_copy_copy_copy_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandTakeDamage::EasyRPGDialogEventCommandTakeDamage(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandTakeDamage::EasyRPGDialogEventCommandTakeDamage
    sizer_316_copy_staticbox = new wxStaticBox(this, -1, _("Attack"));
    sizer_316_copy_copy_staticbox = new wxStaticBox(this, -1, _("Defense influence"));
    sizer_316_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Intelligence influence"));
    sizer_316_copy_copy_1_staticbox = new wxStaticBox(this, -1, _("Attack"));
    sizer_316_copy_copy_copy_1_staticbox = new wxStaticBox(this, -1, _("Variable"));
    sizer_186_copy_copy_1_copy_copy_copy_1_copy_1_staticbox = new wxStaticBox(this, -1, _("Target"));
    radio_btn_5_copy_2_copy_1_copy_copy_copy_copy_copy_1 = new wxRadioButton(this, wxID_ANY, _("Whole group"));
    radio_btn_5_copy_2_copy_1_copy_1_copy_copy_copy_1 = new wxRadioButton(this, wxID_ANY, _("Fixed"));
    const wxString choice_32_copy_1_copy_copy_copy_1_copy_1_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy_1_copy_1 = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_1_copy_1_choices, 0);
    radio_btn_5_copy_1_copy_copy_1_copy_copy_copy_copy_1 = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1 = new wxButton(this, wxID_ANY, _("..."));
    spin_ctrl_36_copy = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    spin_ctrl_36_copy_copy = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_46 = new wxStaticText(this, wxID_ANY, _("%"));
    spin_ctrl_36_copy_copy_copy = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_46_copy = new wxStaticText(this, wxID_ANY, _("%"));
    spin_ctrl_36_copy_copy_1 = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    checkbox_12 = new wxCheckBox(this, wxID_ANY, _("Enable"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy = new wxButton(this, wxID_ANY, _("..."));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1 = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1 = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1 = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandTakeDamage::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandTakeDamage::set_properties
    SetTitle(_("Take damage"));
    choice_32_copy_1_copy_copy_copy_1_copy_1->SetSize(wxSize(75, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1->SetSize(wxSize(25, -1));
    spin_ctrl_36_copy->SetSize(wxSize(125, -1));
    spin_ctrl_36_copy_copy->SetSize(wxSize(125, -1));
    spin_ctrl_36_copy_copy_copy->SetSize(wxSize(125, -1));
    spin_ctrl_36_copy_copy_1->SetSize(wxSize(75, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy->SetSize(wxSize(25, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandTakeDamage::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandTakeDamage::do_layout
    wxBoxSizer* sizer_211_copy_copy_copy_copy_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_318_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1 = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_1 = new wxStaticBoxSizer(sizer_316_copy_copy_1_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_318_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy = new wxStaticBoxSizer(sizer_316_copy_copy_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy = new wxStaticBoxSizer(sizer_316_copy_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy = new wxStaticBoxSizer(sizer_316_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_copy_1_copy_copy_copy_1_copy_1 = new wxStaticBoxSizer(sizer_186_copy_copy_1_copy_copy_copy_1_copy_1_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18_copy_copy_1_copy_copy_copy_copy_1 = new wxFlexGridSizer(3, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    grid_sizer_18_copy_copy_1_copy_copy_copy_copy_1->Add(radio_btn_5_copy_2_copy_1_copy_copy_copy_copy_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy_copy_1->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy_copy_1->Add(radio_btn_5_copy_2_copy_1_copy_1_copy_copy_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy_copy_1->Add(choice_32_copy_1_copy_copy_copy_1_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy_copy_1->Add(radio_btn_5_copy_1_copy_copy_1_copy_copy_copy_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_1->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_1->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy_copy_1->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_1, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy_copy_1->AddGrowableCol(1);
    sizer_186_copy_copy_1_copy_copy_copy_1_copy_1->Add(grid_sizer_18_copy_copy_1_copy_copy_copy_copy_1, 1, wxEXPAND, 0);
    sizer_211_copy_copy_copy_copy_1->Add(sizer_186_copy_copy_1_copy_copy_copy_1_copy_1, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_316_copy->Add(spin_ctrl_36_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_318_copy_copy->Add(sizer_316_copy, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_316_copy_copy->Add(spin_ctrl_36_copy_copy, 1, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_316_copy_copy->Add(label_46, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_318_copy_copy->Add(sizer_316_copy_copy, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_316_copy_copy_copy->Add(spin_ctrl_36_copy_copy_copy, 1, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_316_copy_copy_copy->Add(label_46_copy, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_318_copy_copy->Add(sizer_316_copy_copy_copy, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_211_copy_copy_copy_copy_1->Add(sizer_318_copy_copy, 0, wxEXPAND, 0);
    sizer_316_copy_copy_1->Add(spin_ctrl_36_copy_copy_1, 1, 0, 0);
    sizer_318_copy_copy_copy->Add(sizer_316_copy_copy_1, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_316_copy_copy_copy_1->Add(checkbox_12, 0, wxRIGHT, 1);
    sizer_316_copy_copy_copy_1->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy, 1, wxLEFT, 1);
    sizer_316_copy_copy_copy_1->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy, 0, 0, 0);
    sizer_318_copy_copy_copy->Add(sizer_316_copy_copy_copy_1, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_211_copy_copy_copy_copy_1->Add(sizer_318_copy_copy_copy, 1, wxEXPAND, 0);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1, 0, wxALL, 1);
    sizer_211_copy_copy_copy_copy_1->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_211_copy_copy_copy_copy_1);
    sizer_211_copy_copy_copy_copy_1->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeActorName::EasyRPGDialogEventCommandChangeActorName(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeActorName::EasyRPGDialogEventCommandChangeActorName
    sizer_317_copy_staticbox = new wxStaticBox(this, -1, _("Name"));
    sizer_316_copy_1_staticbox = new wxStaticBox(this, -1, _("Actor"));
    const wxString choice_32_copy_1_copy_copy_copy_copy_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy_copy_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_copy_copy_choices, 0);
    text_ctrl_33_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_64_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_65_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_66_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeActorName::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeActorName::set_properties
    SetTitle(_("Change actor name"));
    choice_32_copy_1_copy_copy_copy_copy_copy->SetSize(wxSize(100, -1));
    text_ctrl_33_copy->SetSize(wxSize(100, -1));
    button_64_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeActorName::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeActorName::do_layout
    wxBoxSizer* sizer_313_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_315_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_314_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_317_copy = new wxStaticBoxSizer(sizer_317_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_1 = new wxStaticBoxSizer(sizer_316_copy_1_staticbox, wxHORIZONTAL);
    sizer_316_copy_1->Add(choice_32_copy_1_copy_copy_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_314_copy->Add(sizer_316_copy_1, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_317_copy->Add(text_ctrl_33_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_314_copy->Add(sizer_317_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_313_copy->Add(sizer_314_copy, 1, wxEXPAND, 0);
    sizer_315_copy->Add(button_64_copy, 0, wxALL, 1);
    sizer_315_copy->Add(button_65_copy, 0, wxALL, 1);
    sizer_315_copy->Add(button_66_copy, 0, wxALL, 1);
    sizer_313_copy->Add(sizer_315_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_313_copy);
    sizer_313_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeActorTitle::EasyRPGDialogEventCommandChangeActorTitle(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeActorTitle::EasyRPGDialogEventCommandChangeActorTitle
    sizer_317_copy_copy_staticbox = new wxStaticBox(this, -1, _("Title"));
    sizer_316_copy_1_copy_staticbox = new wxStaticBox(this, -1, _("Actor"));
    const wxString choice_32_copy_1_copy_copy_copy_copy_copy_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy_copy_copy_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_copy_copy_copy_choices, 0);
    text_ctrl_33_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_64_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_65_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_66_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeActorTitle::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeActorTitle::set_properties
    SetTitle(_("Change actor title"));
    choice_32_copy_1_copy_copy_copy_copy_copy_copy->SetSize(wxSize(100, -1));
    text_ctrl_33_copy_copy->SetSize(wxSize(100, -1));
    button_64_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeActorTitle::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeActorTitle::do_layout
    wxBoxSizer* sizer_313_copy_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_315_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_314_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_317_copy_copy = new wxStaticBoxSizer(sizer_317_copy_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_1_copy = new wxStaticBoxSizer(sizer_316_copy_1_copy_staticbox, wxHORIZONTAL);
    sizer_316_copy_1_copy->Add(choice_32_copy_1_copy_copy_copy_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_314_copy_copy->Add(sizer_316_copy_1_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_317_copy_copy->Add(text_ctrl_33_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_314_copy_copy->Add(sizer_317_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_313_copy_copy->Add(sizer_314_copy_copy, 1, wxEXPAND, 0);
    sizer_315_copy_copy->Add(button_64_copy_copy, 0, wxALL, 1);
    sizer_315_copy_copy->Add(button_65_copy_copy, 0, wxALL, 1);
    sizer_315_copy_copy->Add(button_66_copy_copy, 0, wxALL, 1);
    sizer_313_copy_copy->Add(sizer_315_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_313_copy_copy);
    sizer_313_copy_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeActorGraphic::EasyRPGDialogEventCommandChangeActorGraphic(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeActorGraphic::EasyRPGDialogEventCommandChangeActorGraphic
    sizer_85_copy_staticbox = new wxStaticBox(this, -1, _("Graphic"));
    sizer_316_copy_1_copy_copy_staticbox = new wxStaticBox(this, -1, _("Actor"));
    const wxString choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_choices, 0);
    bitmap_10_copy = new wxStaticBitmap(this, wxID_ANY, wxBitmap(wxT("chara.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    checkbox_14_copy = new wxCheckBox(this, wxID_ANY, _("Translucent"));
    button_26_copy = new wxButton(this, wxID_ANY, _("Select..."));
    button_64_copy_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_65_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_66_copy_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeActorGraphic::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeActorGraphic::set_properties
    SetTitle(_("Change actor graphic"));
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy->SetSize(wxSize(100, -1));
    bitmap_10_copy->SetSize(wxSize(48, 64));
    button_64_copy_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeActorGraphic::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeActorGraphic::do_layout
    wxBoxSizer* sizer_313_copy_copy_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_315_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_314_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_85_copy = new wxStaticBoxSizer(sizer_85_copy_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_86_copy = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_316_copy_1_copy_copy = new wxStaticBoxSizer(sizer_316_copy_1_copy_copy_staticbox, wxHORIZONTAL);
    sizer_316_copy_1_copy_copy->Add(choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_314_copy_copy_copy->Add(sizer_316_copy_1_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM, 1);
    sizer_85_copy->Add(bitmap_10_copy, 0, wxRIGHT, 1);
    sizer_86_copy->Add(checkbox_14_copy, 0, wxLEFT|wxBOTTOM, 1);
    sizer_86_copy->Add(button_26_copy, 0, wxLEFT|wxTOP, 1);
    sizer_85_copy->Add(sizer_86_copy, 0, wxEXPAND, 0);
    sizer_314_copy_copy_copy->Add(sizer_85_copy, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_313_copy_copy_copy->Add(sizer_314_copy_copy_copy, 1, wxEXPAND, 0);
    sizer_315_copy_copy_copy->Add(button_64_copy_copy_copy, 0, wxALL, 1);
    sizer_315_copy_copy_copy->Add(button_65_copy_copy_copy, 0, wxALL, 1);
    sizer_315_copy_copy_copy->Add(button_66_copy_copy_copy, 0, wxALL, 1);
    sizer_313_copy_copy_copy->Add(sizer_315_copy_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_313_copy_copy_copy);
    sizer_313_copy_copy_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeActorFaceGraphic::EasyRPGDialogEventCommandChangeActorFaceGraphic(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeActorFaceGraphic::EasyRPGDialogEventCommandChangeActorFaceGraphic
    sizer_85_copy_copy_staticbox = new wxStaticBox(this, -1, _("Face graphic"));
    sizer_316_copy_1_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Actor"));
    const wxString choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_choices, 0);
    bitmap_5_copy = new wxStaticBitmap(this, wxID_ANY, wxBitmap(wxT("face.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    button_26_copy_copy = new wxButton(this, wxID_ANY, _("Select..."));
    button_64_copy_copy_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_65_copy_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_66_copy_copy_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeActorFaceGraphic::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeActorFaceGraphic::set_properties
    SetTitle(_("Change actor face graphic"));
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_copy->SetSize(wxSize(100, -1));
    button_64_copy_copy_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeActorFaceGraphic::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeActorFaceGraphic::do_layout
    wxBoxSizer* sizer_313_copy_copy_copy_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_315_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_314_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_85_copy_copy = new wxStaticBoxSizer(sizer_85_copy_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_1_copy_copy_copy = new wxStaticBoxSizer(sizer_316_copy_1_copy_copy_copy_staticbox, wxHORIZONTAL);
    sizer_316_copy_1_copy_copy_copy->Add(choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_314_copy_copy_copy_copy->Add(sizer_316_copy_1_copy_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM, 1);
    sizer_85_copy_copy->Add(bitmap_5_copy, 0, wxRIGHT, 1);
    sizer_85_copy_copy->Add(button_26_copy_copy, 0, wxLEFT, 1);
    sizer_314_copy_copy_copy_copy->Add(sizer_85_copy_copy, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_313_copy_copy_copy_copy->Add(sizer_314_copy_copy_copy_copy, 1, wxEXPAND, 0);
    sizer_315_copy_copy_copy_copy->Add(button_64_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_315_copy_copy_copy_copy->Add(button_65_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_315_copy_copy_copy_copy->Add(button_66_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_313_copy_copy_copy_copy->Add(sizer_315_copy_copy_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_313_copy_copy_copy_copy);
    sizer_313_copy_copy_copy_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeVehicleGraphic::EasyRPGDialogEventCommandChangeVehicleGraphic(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeVehicleGraphic::EasyRPGDialogEventCommandChangeVehicleGraphic
    sizer_85_copy_copy_1_staticbox = new wxStaticBox(this, -1, _("Vehicle graphic"));
    const wxString radio_box_4_copy_1_choices[] = {
        _("Small ship"),
        _("Big ship"),
        _("Aeroship")
    };
    radio_box_4_copy_1 = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 3, radio_box_4_copy_1_choices, 1, wxRA_SPECIFY_COLS);
    bitmap_10_copy_copy = new wxStaticBitmap(this, wxID_ANY, wxBitmap(wxT("chara.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    button_26_copy_copy_1 = new wxButton(this, wxID_ANY, _("Select..."));
    button_64_copy_copy_copy_copy_1 = new wxButton(this, wxID_OK, wxEmptyString);
    button_65_copy_copy_copy_copy_1 = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_66_copy_copy_copy_copy_1 = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeVehicleGraphic::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeVehicleGraphic::set_properties
    SetTitle(_("Change vehicle graphic"));
    radio_box_4_copy_1->SetSelection(0);
    bitmap_10_copy_copy->SetSize(wxSize(48, 64));
    button_64_copy_copy_copy_copy_1->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeVehicleGraphic::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeVehicleGraphic::do_layout
    wxBoxSizer* sizer_313_copy_copy_copy_copy_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_315_copy_copy_copy_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_314_copy_copy_copy_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_85_copy_copy_1 = new wxStaticBoxSizer(sizer_85_copy_copy_1_staticbox, wxHORIZONTAL);
    sizer_314_copy_copy_copy_copy_1->Add(radio_box_4_copy_1, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_85_copy_copy_1->Add(bitmap_10_copy_copy, 0, wxRIGHT, 1);
    sizer_85_copy_copy_1->Add(button_26_copy_copy_1, 0, wxLEFT, 1);
    sizer_314_copy_copy_copy_copy_1->Add(sizer_85_copy_copy_1, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_313_copy_copy_copy_copy_1->Add(sizer_314_copy_copy_copy_copy_1, 1, wxEXPAND, 0);
    sizer_315_copy_copy_copy_copy_1->Add(button_64_copy_copy_copy_copy_1, 0, wxALL, 1);
    sizer_315_copy_copy_copy_copy_1->Add(button_65_copy_copy_copy_copy_1, 0, wxALL, 1);
    sizer_315_copy_copy_copy_copy_1->Add(button_66_copy_copy_copy_copy_1, 0, wxALL, 1);
    sizer_313_copy_copy_copy_copy_1->Add(sizer_315_copy_copy_copy_copy_1, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_313_copy_copy_copy_copy_1);
    sizer_313_copy_copy_copy_copy_1->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeSystemMusic::EasyRPGDialogEventCommandChangeSystemMusic(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeSystemMusic::EasyRPGDialogEventCommandChangeSystemMusic
    sizer_317_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Music"));
    sizer_316_copy_1_copy_copy_1_staticbox = new wxStaticBox(this, -1, _("Music type"));
    const wxString choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1 = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_choices, 0);
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_1 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_1 = new wxButton(this, wxID_ANY, _("..."));
    button_64_copy_copy_copy_1 = new wxButton(this, wxID_OK, wxEmptyString);
    button_65_copy_copy_copy_1 = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_66_copy_copy_copy_1 = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeSystemMusic::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeSystemMusic::set_properties
    SetTitle(_("Change system music"));
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1->SetSize(wxSize(100, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_1->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_1->SetSize(wxSize(25, -1));
    button_64_copy_copy_copy_1->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeSystemMusic::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeSystemMusic::do_layout
    wxBoxSizer* sizer_313_copy_copy_copy_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_315_copy_copy_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_314_copy_copy_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_317_copy_copy_copy = new wxStaticBoxSizer(sizer_317_copy_copy_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_1_copy_copy_1 = new wxStaticBoxSizer(sizer_316_copy_1_copy_copy_1_staticbox, wxHORIZONTAL);
    sizer_316_copy_1_copy_copy_1->Add(choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_314_copy_copy_copy_1->Add(sizer_316_copy_1_copy_copy_1, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_317_copy_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_317_copy_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_314_copy_copy_copy_1->Add(sizer_317_copy_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_313_copy_copy_copy_1->Add(sizer_314_copy_copy_copy_1, 1, wxEXPAND, 0);
    sizer_315_copy_copy_copy_1->Add(button_64_copy_copy_copy_1, 0, wxALL, 1);
    sizer_315_copy_copy_copy_1->Add(button_65_copy_copy_copy_1, 0, wxALL, 1);
    sizer_315_copy_copy_copy_1->Add(button_66_copy_copy_copy_1, 0, wxALL, 1);
    sizer_313_copy_copy_copy_1->Add(sizer_315_copy_copy_copy_1, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_313_copy_copy_copy_1);
    sizer_313_copy_copy_copy_1->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeSystemSound::EasyRPGDialogEventCommandChangeSystemSound(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeSystemSound::EasyRPGDialogEventCommandChangeSystemSound
    sizer_317_copy_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Sound"));
    sizer_316_copy_1_copy_copy_1_copy_staticbox = new wxStaticBox(this, -1, _("Sound type"));
    const wxString choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_choices, 0);
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_1_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_1_copy = new wxButton(this, wxID_ANY, _("..."));
    button_64_copy_copy_copy_1_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_65_copy_copy_copy_1_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_66_copy_copy_copy_1_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeSystemSound::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeSystemSound::set_properties
    SetTitle(_("Change system sound"));
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy->SetSize(wxSize(100, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_1_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_1_copy->SetSize(wxSize(25, -1));
    button_64_copy_copy_copy_1_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeSystemSound::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeSystemSound::do_layout
    wxBoxSizer* sizer_313_copy_copy_copy_1_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_315_copy_copy_copy_1_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_314_copy_copy_copy_1_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_317_copy_copy_copy_copy = new wxStaticBoxSizer(sizer_317_copy_copy_copy_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_1_copy_copy_1_copy = new wxStaticBoxSizer(sizer_316_copy_1_copy_copy_1_copy_staticbox, wxHORIZONTAL);
    sizer_316_copy_1_copy_copy_1_copy->Add(choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_314_copy_copy_copy_1_copy->Add(sizer_316_copy_1_copy_copy_1_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_317_copy_copy_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_1_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_317_copy_copy_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_1_copy_1_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_314_copy_copy_copy_1_copy->Add(sizer_317_copy_copy_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_313_copy_copy_copy_1_copy->Add(sizer_314_copy_copy_copy_1_copy, 1, wxEXPAND, 0);
    sizer_315_copy_copy_copy_1_copy->Add(button_64_copy_copy_copy_1_copy, 0, wxALL, 1);
    sizer_315_copy_copy_copy_1_copy->Add(button_65_copy_copy_copy_1_copy, 0, wxALL, 1);
    sizer_315_copy_copy_copy_1_copy->Add(button_66_copy_copy_copy_1_copy, 0, wxALL, 1);
    sizer_313_copy_copy_copy_1_copy->Add(sizer_315_copy_copy_copy_1_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_313_copy_copy_copy_1_copy);
    sizer_313_copy_copy_copy_1_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeSystemGraphic::EasyRPGDialogEventCommandChangeSystemGraphic(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeSystemGraphic::EasyRPGDialogEventCommandChangeSystemGraphic
    const wxString list_box_4_copy_choices[] = {
        
    };
    list_box_4_copy = new wxListBox(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_4_copy_choices, 0);
    bitmap_11_copy_copy_copy = new wxStaticBitmap(this, wxID_ANY, wxBitmap(wxT("system.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    const wxString radio_box_1_copy_copy_choices[] = {
        _("Expanded"),
        _("Tiled")
    };
    radio_box_1_copy_copy = new wxRadioBox(this, wxID_ANY, _("Background"), wxDefaultPosition, wxDefaultSize, 2, radio_box_1_copy_copy_choices, 1, wxRA_SPECIFY_COLS);
    const wxString radio_box_1_copy_choices[] = {
        _("Gothic"),
        _("Modern")
    };
    radio_box_1_copy = new wxRadioBox(this, wxID_ANY, _("Font"), wxDefaultPosition, wxDefaultSize, 2, radio_box_1_copy_choices, 1, wxRA_SPECIFY_COLS);
    button_4_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_5_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeSystemGraphic::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeSystemGraphic::set_properties
    SetTitle(_("Change system graphic"));
    bitmap_11_copy_copy_copy->SetSize(wxSize(160, 80));
    radio_box_1_copy_copy->SetSelection(0);
    radio_box_1_copy->SetSelection(0);
    button_4_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeSystemGraphic::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeSystemGraphic::do_layout
    wxBoxSizer* sizer_33_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_34_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_35_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_37_copy = new wxBoxSizer(wxVERTICAL);
    sizer_35_copy->Add(list_box_4_copy, 1, wxALL|wxEXPAND, 1);
    sizer_37_copy->Add(bitmap_11_copy_copy_copy, 0, wxLEFT|wxRIGHT|wxTOP|wxALIGN_BOTTOM|wxALIGN_CENTER_HORIZONTAL, 1);
    sizer_37_copy->Add(radio_box_1_copy_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_37_copy->Add(radio_box_1_copy, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_35_copy->Add(sizer_37_copy, 0, wxEXPAND, 0);
    sizer_33_copy->Add(sizer_35_copy, 1, wxEXPAND, 0);
    sizer_34_copy->Add(button_4_copy, 0, wxALL, 1);
    sizer_34_copy->Add(button_5_copy, 0, wxALL, 1);
    sizer_33_copy->Add(sizer_34_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_33_copy);
    sizer_33_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeWindowTransition::EasyRPGDialogEventCommandChangeWindowTransition(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeWindowTransition::EasyRPGDialogEventCommandChangeWindowTransition
    sizer_317_copy_copy_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Out"));
    sizer_316_copy_1_copy_copy_1_copy_copy_staticbox = new wxStaticBox(this, -1, _("In"));
    const wxString choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_choices, 0);
    const wxString choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_choices, 0);
    button_64_copy_copy_copy_1_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_65_copy_copy_copy_1_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_66_copy_copy_copy_1_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeWindowTransition::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeWindowTransition::set_properties
    SetTitle(_("Change window transition"));
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy->SetSize(wxSize(100, -1));
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy->SetSize(wxSize(100, -1));
    button_64_copy_copy_copy_1_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeWindowTransition::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeWindowTransition::do_layout
    wxBoxSizer* sizer_313_copy_copy_copy_1_copy_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_315_copy_copy_copy_1_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_314_copy_copy_copy_1_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_317_copy_copy_copy_copy_copy = new wxStaticBoxSizer(sizer_317_copy_copy_copy_copy_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_1_copy_copy_1_copy_copy = new wxStaticBoxSizer(sizer_316_copy_1_copy_copy_1_copy_copy_staticbox, wxHORIZONTAL);
    sizer_316_copy_1_copy_copy_1_copy_copy->Add(choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_314_copy_copy_copy_1_copy_copy->Add(sizer_316_copy_1_copy_copy_1_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_317_copy_copy_copy_copy_copy->Add(choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_314_copy_copy_copy_1_copy_copy->Add(sizer_317_copy_copy_copy_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_313_copy_copy_copy_1_copy_copy->Add(sizer_314_copy_copy_copy_1_copy_copy, 1, wxEXPAND, 0);
    sizer_315_copy_copy_copy_1_copy_copy->Add(button_64_copy_copy_copy_1_copy_copy, 0, wxALL, 1);
    sizer_315_copy_copy_copy_1_copy_copy->Add(button_65_copy_copy_copy_1_copy_copy, 0, wxALL, 1);
    sizer_315_copy_copy_copy_1_copy_copy->Add(button_66_copy_copy_copy_1_copy_copy, 0, wxALL, 1);
    sizer_313_copy_copy_copy_1_copy_copy->Add(sizer_315_copy_copy_copy_1_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_313_copy_copy_copy_1_copy_copy);
    sizer_313_copy_copy_copy_1_copy_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandStartBattle::EasyRPGDialogEventCommandStartBattle(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandStartBattle::EasyRPGDialogEventCommandStartBattle
    sizer_316_copy_copy_copy_1_copy_copy_staticbox = new wxStaticBox(this, -1, _("Battle background"));
    sizer_316_copy_copy_copy_1_copy_staticbox = new wxStaticBox(this, -1, _("Options"));
    sizer_186_copy_copy_1_copy_copy_copy_1_copy_1_copy_staticbox = new wxStaticBox(this, -1, _("Enemy troop"));
    radio_btn_5_copy_2_copy_1_copy_1_copy_copy_copy_1_copy = new wxRadioButton(this, wxID_ANY, _("Fixed"));
    const wxString choice_32_copy_1_copy_copy_copy_1_copy_1_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy_1_copy_1_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_1_copy_1_copy_choices, 0);
    radio_btn_5_copy_1_copy_copy_1_copy_copy_copy_copy_1_copy = new wxRadioButton(this, wxID_ANY, _("Variable"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy_1 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy_1 = new wxButton(this, wxID_ANY, _("..."));
    radio_btn_6 = new wxRadioButton(this, wxID_ANY, _("From terrain"));
    radio_btn_6_copy_1 = new wxRadioButton(this, wxID_ANY, _("Select"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    const wxString radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_choices[] = {
        _("Deny"),
        _("Allow"),
        _("Condition")
    };
    radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy = new wxRadioBox(this, wxID_ANY, _("Escape"), wxDefaultPosition, wxDefaultSize, 3, radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_choices, 1, wxRA_SPECIFY_ROWS);
    const wxString radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy_choices[] = {
        _("Game over"),
        _("Condition")
    };
    radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy = new wxRadioBox(this, wxID_ANY, _("On defeat"), wxDefaultPosition, wxDefaultSize, 2, radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy_choices, 1, wxRA_SPECIFY_ROWS);
    checkbox_12_copy_1 = new wxCheckBox(this, wxID_ANY, _("Allied first torn"));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandStartBattle::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandStartBattle::set_properties
    SetTitle(_("Start battle"));
    choice_32_copy_1_copy_copy_copy_1_copy_1_copy->SetSize(wxSize(75, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy_1->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy_1->SetSize(wxSize(25, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy_copy_copy->SetSize(wxSize(25, -1));
    radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy->SetSelection(0);
    radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy->SetSelection(0);
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandStartBattle::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandStartBattle::do_layout
    wxBoxSizer* sizer_211_copy_copy_copy_copy_1_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_318_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_copy_1_copy_copy_copy_1_copy_1_copy = new wxStaticBoxSizer(sizer_186_copy_copy_1_copy_copy_copy_1_copy_1_copy_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_18_copy_copy_1_copy_copy_copy_copy_1_copy = new wxFlexGridSizer(3, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy = new wxBoxSizer(wxHORIZONTAL);
    grid_sizer_18_copy_copy_1_copy_copy_copy_copy_1_copy->Add(radio_btn_5_copy_2_copy_1_copy_1_copy_copy_copy_1_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy_copy_1_copy->Add(choice_32_copy_1_copy_copy_copy_1_copy_1_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy_copy_1_copy->Add(radio_btn_5_copy_1_copy_copy_1_copy_copy_copy_copy_1_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy_copy_1_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy, 1, wxEXPAND, 0);
    grid_sizer_18_copy_copy_1_copy_copy_copy_copy_1_copy->AddGrowableCol(1);
    sizer_186_copy_copy_1_copy_copy_copy_1_copy_1_copy->Add(grid_sizer_18_copy_copy_1_copy_copy_copy_copy_1_copy, 1, wxEXPAND, 0);
    sizer_211_copy_copy_copy_copy_1_copy->Add(sizer_186_copy_copy_1_copy_copy_copy_1_copy_1_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_316_copy_copy_copy_1_copy_copy->Add(radio_btn_6, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_316_copy_copy_copy_1_copy_copy->Add(radio_btn_6_copy_1, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_316_copy_copy_copy_1_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy_copy_copy, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_316_copy_copy_copy_1_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_1_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_211_copy_copy_copy_copy_1_copy->Add(sizer_316_copy_copy_copy_1_copy_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_211_copy_copy_copy_copy_1_copy->Add(radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_318_copy_copy_copy_copy->Add(radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_316_copy_copy_copy_1_copy->Add(checkbox_12_copy_1, 1, 0, 0);
    sizer_318_copy_copy_copy_copy->Add(sizer_316_copy_copy_copy_1_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_211_copy_copy_copy_copy_1_copy->Add(sizer_318_copy_copy_copy_copy, 1, wxEXPAND, 0);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy, 0, wxALL, 1);
    sizer_211_copy_copy_copy_copy_1_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_211_copy_copy_copy_copy_1_copy);
    sizer_211_copy_copy_copy_copy_1_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandVisitCommerce::EasyRPGDialogEventCommandVisitCommerce(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandVisitCommerce::EasyRPGDialogEventCommandVisitCommerce
    sizer_316_copy_copy_copy_1_copy_copy_copy_1_staticbox = new wxStaticBox(this, -1, _("Objects to sell"));
    sizer_316_copy_copy_copy_1_copy_copy_1_staticbox = new wxStaticBox(this, -1, _("Options"));
    sizer_316_copy_copy_copy_1_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Commerce style"));
    const wxString radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy_1_choices[] = {
        _("Normal"),
        _("Doesn't sell"),
        _("Doesn't buy")
    };
    radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy_1 = new wxRadioBox(this, wxID_ANY, _("Commerce type"), wxDefaultPosition, wxDefaultSize, 3, radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy_1_choices, 1, wxRA_SPECIFY_ROWS);
    const wxString choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_choices, 0);
    const wxString list_box_22_choices[] = {
        
    };
    list_box_22 = new wxListBox(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_22_choices, 0);
    button_68 = new wxButton(this, wxID_ANY, _("< Add"));
    button_68_copy = new wxButton(this, wxID_ANY, _("Remove >"));
    const wxString list_box_22_copy_choices[] = {
        
    };
    list_box_22_copy = new wxListBox(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, list_box_22_copy_choices, 0);
    checkbox_12_copy_1_copy = new wxCheckBox(this, wxID_ANY, _("Merchant doesn't sell goods already sold"));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandVisitCommerce::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandVisitCommerce::set_properties
    SetTitle(_("Visit commerce"));
    radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy_1->SetSelection(0);
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy->SetSize(wxSize(100, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandVisitCommerce::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandVisitCommerce::do_layout
    wxBoxSizer* sizer_319 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_1 = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_1 = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_1_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_320 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_staticbox, wxHORIZONTAL);
    sizer_319->Add(radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy_1, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_316_copy_copy_copy_1_copy_copy_copy->Add(choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_319->Add(sizer_316_copy_copy_copy_1_copy_copy_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_316_copy_copy_copy_1_copy_copy_copy_1->Add(list_box_22, 1, wxRIGHT|wxEXPAND, 1);
    sizer_320->Add(0, 0, 1, wxEXPAND, 0);
    sizer_320->Add(button_68, 0, wxLEFT|wxRIGHT|wxBOTTOM, 1);
    sizer_320->Add(button_68_copy, 0, wxLEFT|wxRIGHT|wxTOP, 1);
    sizer_320->Add(0, 0, 1, wxEXPAND, 0);
    sizer_316_copy_copy_copy_1_copy_copy_copy_1->Add(sizer_320, 0, wxEXPAND, 0);
    sizer_316_copy_copy_copy_1_copy_copy_copy_1->Add(list_box_22_copy, 1, wxLEFT|wxEXPAND, 1);
    sizer_319->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_1, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_316_copy_copy_copy_1_copy_copy_1->Add(checkbox_12_copy_1_copy, 1, 0, 0);
    sizer_319->Add(sizer_316_copy_copy_copy_1_copy_copy_1, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy, 0, wxALL, 1);
    sizer_319->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_319);
    sizer_319->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandVisitInn::EasyRPGDialogEventCommandVisitInn(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandVisitInn::EasyRPGDialogEventCommandVisitInn
    sizer_316_copy_copy_copy_1_copy_copy_3_staticbox = new wxStaticBox(this, -1, _("Stay price"));
    sizer_316_copy_copy_copy_1_copy_copy_2_staticbox = new wxStaticBox(this, -1, _("Options"));
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Inn message type"));
    const wxString choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_choices, 0);
    spin_ctrl_37 = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    checkbox_12_copy_1_copy_1 = new wxCheckBox(this, wxID_ANY, _("Create condition"));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandVisitInn::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandVisitInn::set_properties
    SetTitle(_("Visit inn"));
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy->SetSize(wxSize(100, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandVisitInn::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandVisitInn::do_layout
    wxBoxSizer* sizer_319_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_321 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_2 = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_2_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_3 = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_3_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_staticbox, wxHORIZONTAL);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy->Add(choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_319_copy->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_316_copy_copy_copy_1_copy_copy_3->Add(spin_ctrl_37, 1, 0, 0);
    sizer_321->Add(sizer_316_copy_copy_copy_1_copy_copy_3, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_316_copy_copy_copy_1_copy_copy_2->Add(checkbox_12_copy_1_copy_1, 1, 0, 0);
    sizer_321->Add(sizer_316_copy_copy_copy_1_copy_copy_2, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_319_copy->Add(sizer_321, 1, wxEXPAND, 0);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy, 0, wxALL, 1);
    sizer_319_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_319_copy);
    sizer_319_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandActorNameInput::EasyRPGDialogEventCommandActorNameInput(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandActorNameInput::EasyRPGDialogEventCommandActorNameInput
    sizer_316_copy_copy_copy_1_copy_copy_4_staticbox = new wxStaticBox(this, -1, _("Options"));
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Actor"));
    const wxString choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_choices, 0);
    const wxString radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy_copy_choices[] = {
        _("Hiragana"),
        _("Katakana")
    };
    radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy_copy = new wxRadioBox(this, wxID_ANY, _("Initial mode"), wxDefaultPosition, wxDefaultSize, 2, radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy_copy_choices, 1, wxRA_SPECIFY_ROWS);
    checkbox_12_copy_1_copy_2 = new wxCheckBox(this, wxID_ANY, _("Show initial name"));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandActorNameInput::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandActorNameInput::set_properties
    SetTitle(_("Actor name input"));
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy->SetSize(wxSize(100, -1));
    radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy_copy->SetSelection(0);
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandActorNameInput::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandActorNameInput::do_layout
    wxBoxSizer* sizer_319_copy_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_4 = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_4_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_318_copy_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_staticbox, wxHORIZONTAL);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy->Add(choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_318_copy_copy_copy_copy_copy->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_318_copy_copy_copy_copy_copy->Add(radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_319_copy_copy->Add(sizer_318_copy_copy_copy_copy_copy, 0, wxEXPAND, 0);
    sizer_316_copy_copy_copy_1_copy_copy_4->Add(checkbox_12_copy_1_copy_2, 1, 0, 0);
    sizer_319_copy_copy->Add(sizer_316_copy_copy_copy_1_copy_copy_4, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_319_copy_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_319_copy_copy);
    sizer_319_copy_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandTeleport::EasyRPGDialogEventCommandTeleport(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandTeleport::EasyRPGDialogEventCommandTeleport
    tree_ctrl_1 = new wxTreeCtrl(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTR_HAS_BUTTONS|wxTR_NO_LINES|wxTR_LINES_AT_ROOT|wxTR_DEFAULT_STYLE|wxSUNKEN_BORDER);
    panel_1 = new wxPanel(this, wxID_ANY);
    label_47 = new wxStaticText(this, wxID_ANY, _("XXXX:MAPXXXX (XXX,YYY)"));
    button_69_copy_copy = new wxToggleButton(this, wxID_ANY, _("1:1"));
    button_69_copy = new wxToggleButton(this, wxID_ANY, _("1:2"));
    button_69_copy_1 = new wxToggleButton(this, wxID_ANY, _("1:4"));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandTeleport::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandTeleport::set_properties
    SetTitle(_("Teleport"));
    tree_ctrl_1->SetSize(wxSize(150, -1));
    button_69_copy_copy->SetSize(wxSize(25, -1));
    button_69_copy->SetSize(wxSize(25, -1));
    button_69_copy_1->SetSize(wxSize(25, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandTeleport::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandTeleport::do_layout
    wxBoxSizer* sizer_322 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_324 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_323 = new wxBoxSizer(wxHORIZONTAL);
    sizer_323->Add(tree_ctrl_1, 2, wxALL|wxEXPAND, 1);
    sizer_323->Add(panel_1, 5, wxEXPAND, 0);
    sizer_322->Add(sizer_323, 1, wxEXPAND, 0);
    sizer_324->Add(label_47, 1, wxALL|wxALIGN_CENTER_VERTICAL, 1);
    sizer_324->Add(20, 0, 0, wxEXPAND, 0);
    sizer_324->Add(button_69_copy_copy, 0, wxLEFT|wxTOP|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_324->Add(button_69_copy, 0, wxTOP|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_324->Add(button_69_copy_1, 0, wxRIGHT|wxTOP|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_324->Add(20, 0, 0, wxEXPAND, 0);
    sizer_324->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy, 0, wxALL|wxALIGN_CENTER_VERTICAL, 1);
    sizer_324->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy, 0, wxALL|wxALIGN_CENTER_VERTICAL, 1);
    sizer_322->Add(sizer_324, 0, wxEXPAND, 0);
    SetSizer(sizer_322);
    sizer_322->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandMemorizePlace::EasyRPGDialogEventCommandMemorizePlace(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandMemorizePlace::EasyRPGDialogEventCommandMemorizePlace
    sizer_186_copy_1_copy_copy_1_copy_1_copy_1_staticbox = new wxStaticBox(this, -1, _("Store in variable"));
    label_48 = new wxStaticText(this, wxID_ANY, _("Map ID:"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2 = new wxButton(this, wxID_ANY, _("..."));
    label_48_copy = new wxStaticText(this, wxID_ANY, _("X ordinate:"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3 = new wxButton(this, wxID_ANY, _("..."));
    label_48_copy_1 = new wxStaticText(this, wxID_ANY, _("Y ordinate:"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4 = new wxButton(this, wxID_ANY, _("..."));
    button_67_copy_2_copy_copy_copy_copy_copy_1_copy_1 = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_1_copy_1 = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_1_copy_1 = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandMemorizePlace::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandMemorizePlace::set_properties
    SetTitle(_("Memorize place"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2->SetSize(wxSize(25, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3->SetSize(wxSize(25, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4->SetSize(wxSize(25, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_1_copy_1->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandMemorizePlace::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandMemorizePlace::do_layout
    wxBoxSizer* sizer_211_copy_copy_1_copy_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_1_copy_copy_1_copy_1_copy_1 = new wxStaticBoxSizer(sizer_186_copy_1_copy_copy_1_copy_1_copy_1_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_19 = new wxFlexGridSizer(3, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_2 = new wxBoxSizer(wxHORIZONTAL);
    grid_sizer_19->Add(label_48, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_2->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_2->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_19->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_2, 1, wxEXPAND, 0);
    grid_sizer_19->Add(label_48_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_19->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3, 1, wxEXPAND, 0);
    grid_sizer_19->Add(label_48_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_19->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4, 1, wxEXPAND, 0);
    grid_sizer_19->AddGrowableCol(1);
    sizer_186_copy_1_copy_copy_1_copy_1_copy_1->Add(grid_sizer_19, 1, wxEXPAND, 0);
    sizer_211_copy_copy_1_copy_1->Add(sizer_186_copy_1_copy_copy_1_copy_1_copy_1, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy_1->Add(button_67_copy_2_copy_copy_copy_copy_copy_1_copy_1, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy_1->Add(button_67_copy_copy_copy_copy_copy_copy_copy_1_copy_1, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy_1->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_1_copy_1, 0, wxALL, 1);
    sizer_211_copy_copy_1_copy_1->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy_1, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_211_copy_copy_1_copy_1);
    sizer_211_copy_copy_1_copy_1->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandGoToMemorizedPlace::EasyRPGDialogEventCommandGoToMemorizedPlace(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandGoToMemorizedPlace::EasyRPGDialogEventCommandGoToMemorizedPlace
    sizer_186_copy_1_copy_copy_1_copy_1_copy_1_copy_staticbox = new wxStaticBox(this, -1, _("Place in variable"));
    label_48_copy_2 = new wxStaticText(this, wxID_ANY, _("Map ID:"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy = new wxButton(this, wxID_ANY, _("..."));
    label_48_copy_copy = new wxStaticText(this, wxID_ANY, _("X ordinate:"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy = new wxButton(this, wxID_ANY, _("..."));
    label_48_copy_1_copy = new wxStaticText(this, wxID_ANY, _("Y ordinate:"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy = new wxButton(this, wxID_ANY, _("..."));
    button_67_copy_2_copy_copy_copy_copy_copy_1_copy_1_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_1_copy_1_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_1_copy_1_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandGoToMemorizedPlace::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandGoToMemorizedPlace::set_properties
    SetTitle(_("Go to memorized place"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy->SetSize(wxSize(25, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy->SetSize(wxSize(25, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy->SetSize(wxSize(25, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_1_copy_1_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandGoToMemorizedPlace::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandGoToMemorizedPlace::do_layout
    wxBoxSizer* sizer_211_copy_copy_1_copy_1_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy_1_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_186_copy_1_copy_copy_1_copy_1_copy_1_copy = new wxStaticBoxSizer(sizer_186_copy_1_copy_copy_1_copy_1_copy_1_copy_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_19_copy = new wxFlexGridSizer(3, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy = new wxBoxSizer(wxHORIZONTAL);
    grid_sizer_19_copy->Add(label_48_copy_2, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_19_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy, 1, wxEXPAND, 0);
    grid_sizer_19_copy->Add(label_48_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_19_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy, 1, wxEXPAND, 0);
    grid_sizer_19_copy->Add(label_48_copy_1_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_19_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy, 1, wxEXPAND, 0);
    grid_sizer_19_copy->AddGrowableCol(1);
    sizer_186_copy_1_copy_copy_1_copy_1_copy_1_copy->Add(grid_sizer_19_copy, 1, wxEXPAND, 0);
    sizer_211_copy_copy_1_copy_1_copy->Add(sizer_186_copy_1_copy_copy_1_copy_1_copy_1_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy_1_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_1_copy_1_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy_1_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_1_copy_1_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy_1_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_1_copy_1_copy, 0, wxALL, 1);
    sizer_211_copy_copy_1_copy_1_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_1_copy_1_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_211_copy_copy_1_copy_1_copy);
    sizer_211_copy_copy_1_copy_1_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeVehiclePosition::EasyRPGDialogEventCommandChangeVehiclePosition(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeVehiclePosition::EasyRPGDialogEventCommandChangeVehiclePosition
    sizer_325_staticbox = new wxStaticBox(this, -1, _("Vehicle position"));
    sizer_326_staticbox = new wxStaticBox(this, -1, _("Origin variable"));
    const wxString radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy_1_copy_choices[] = {
        _("Small ship"),
        _("Big ship"),
        _("Aeroship")
    };
    radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy_1_copy = new wxRadioBox(this, wxID_ANY, _("Vehicle"), wxDefaultPosition, wxDefaultSize, 3, radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy_1_copy_choices, 1, wxRA_SPECIFY_ROWS);
    radio_btn_7 = new wxRadioButton(this, wxID_ANY, _("Specify"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy_1 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy_1 = new wxButton(this, wxID_ANY, _("..."));
    radio_btn_7_copy = new wxRadioButton(this, wxID_ANY, _("Variable"));
    label_48_copy_2_copy = new wxStaticText(this, wxID_ANY, _("Map ID:"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    label_48_copy_copy_copy = new wxStaticText(this, wxID_ANY, _("X ordinate:"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    label_48_copy_1_copy_copy = new wxStaticText(this, wxID_ANY, _("Y ordinate:"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1 = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1 = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1 = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeVehiclePosition::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeVehiclePosition::set_properties
    SetTitle(_("Change vehicle position"));
    radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy_1_copy->SetSelection(0);
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy_1->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy_1->SetSize(wxSize(25, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy_copy->SetSize(wxSize(25, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy->SetSize(wxSize(25, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy->SetSize(wxSize(25, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeVehiclePosition::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeVehiclePosition::do_layout
    wxBoxSizer* sizer_319_copy_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_325 = new wxStaticBoxSizer(sizer_325_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_326 = new wxStaticBoxSizer(sizer_326_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_19_copy_copy = new wxFlexGridSizer(3, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    sizer_319_copy_1->Add(radio_box_12_copy_copy_1_copy_copy_1_copy_copy_1_copy_copy_copy_1_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_325->Add(radio_btn_7, 0, wxBOTTOM|wxEXPAND, 1);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy_1->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy_1->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_325->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy_1, 0, wxEXPAND, 0);
    sizer_325->Add(radio_btn_7_copy, 0, wxTOP|wxEXPAND, 1);
    grid_sizer_19_copy_copy->Add(label_48_copy_2_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_19_copy_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_2_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_19_copy_copy->Add(label_48_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_19_copy_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_19_copy_copy->Add(label_48_copy_1_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_19_copy_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_19_copy_copy->AddGrowableCol(1);
    sizer_326->Add(grid_sizer_19_copy_copy, 1, wxEXPAND, 0);
    sizer_325->Add(sizer_326, 0, wxEXPAND, 0);
    sizer_319_copy_1->Add(sizer_325, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1, 0, wxALL, 1);
    sizer_319_copy_1->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_319_copy_1);
    sizer_319_copy_1->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeEventPosition::EasyRPGDialogEventCommandChangeEventPosition(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeEventPosition::EasyRPGDialogEventCommandChangeEventPosition
    sizer_326_copy_staticbox = new wxStaticBox(this, -1, _("Origin variable"));
    sizer_325_copy_staticbox = new wxStaticBox(this, -1, _("Event position"));
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Event"));
    const wxString choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_choices, 0);
    radio_btn_7_copy_copy_copy = new wxRadioButton(this, wxID_ANY, _("Specify"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_1 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_1 = new wxButton(this, wxID_ANY, _("..."));
    radio_btn_7_copy_copy = new wxRadioButton(this, wxID_ANY, _("Variable"));
    label_48_copy_copy_copy_copy = new wxStaticText(this, wxID_ANY, _("X ordinate:"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    label_48_copy_1_copy_copy_copy = new wxStaticText(this, wxID_ANY, _("Y ordinate:"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeEventPosition::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeEventPosition::set_properties
    SetTitle(_("Change event position"));
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy->SetSize(wxSize(100, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_1->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_1->SetSize(wxSize(25, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy->SetSize(wxSize(25, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy->SetSize(wxSize(25, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeEventPosition::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeEventPosition::do_layout
    wxBoxSizer* sizer_319_copy_1_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_325_copy = new wxStaticBoxSizer(sizer_325_copy_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_326_copy = new wxStaticBoxSizer(sizer_326_copy_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_19_copy_copy_copy = new wxFlexGridSizer(2, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_328 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_staticbox, wxHORIZONTAL);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy->Add(choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_319_copy_1_copy->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_328->Add(radio_btn_7_copy_copy_copy, 0, wxRIGHT|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_328->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_1, 1, wxLEFT|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_328->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_1, 0, wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_325_copy->Add(sizer_328, 0, wxEXPAND, 0);
    sizer_325_copy->Add(radio_btn_7_copy_copy, 0, wxTOP|wxEXPAND, 1);
    grid_sizer_19_copy_copy_copy->Add(label_48_copy_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_19_copy_copy_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_19_copy_copy_copy->Add(label_48_copy_1_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_19_copy_copy_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_19_copy_copy_copy->AddGrowableCol(1);
    sizer_326_copy->Add(grid_sizer_19_copy_copy_copy, 1, wxEXPAND, 0);
    sizer_325_copy->Add(sizer_326_copy, 0, wxEXPAND, 0);
    sizer_319_copy_1_copy->Add(sizer_325_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy, 0, wxALL, 1);
    sizer_319_copy_1_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_319_copy_1_copy);
    sizer_319_copy_1_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandSwapEvents::EasyRPGDialogEventCommandSwapEvents(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandSwapEvents::EasyRPGDialogEventCommandSwapEvents
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Event 2"));
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Event 1"));
    const wxString choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_choices, 0);
    const wxString choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy_choices, 0);
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandSwapEvents::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandSwapEvents::set_properties
    SetTitle(_("Swap events"));
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy->SetSize(wxSize(100, -1));
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy->SetSize(wxSize(100, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandSwapEvents::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandSwapEvents::do_layout
    wxBoxSizer* sizer_319_copy_1_copy_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_327 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_staticbox, wxHORIZONTAL);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy->Add(choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy, 1, 0, 0);
    sizer_327->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy->Add(choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy, 1, 0, 0);
    sizer_327->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_319_copy_1_copy_copy->Add(sizer_327, 1, wxEXPAND, 0);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy, 0, wxALL, 1);
    sizer_319_copy_1_copy_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_319_copy_1_copy_copy);
    sizer_319_copy_1_copy_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandGetTerrainID::EasyRPGDialogEventCommandGetTerrainID(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandGetTerrainID::EasyRPGDialogEventCommandGetTerrainID
    sizer_325_copy_copy_staticbox = new wxStaticBox(this, -1, _("Place"));
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_1_staticbox = new wxStaticBox(this, -1, _("Store ID in variable"));
    sizer_326_copy_copy_staticbox = new wxStaticBox(this, -1, _("Origin variable"));
    radio_btn_7_copy_copy_copy_copy = new wxRadioButton(this, wxID_ANY, _("Specify"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_1 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_1 = new wxButton(this, wxID_ANY, _("..."));
    radio_btn_7_copy_copy_copy_1 = new wxRadioButton(this, wxID_ANY, _("Variable"));
    label_48_copy_copy_copy_copy_copy = new wxStaticText(this, wxID_ANY, _("X ordinate:"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    label_48_copy_1_copy_copy_copy_copy = new wxStaticText(this, wxID_ANY, _("Y ordinate:"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1 = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1 = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1 = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandGetTerrainID::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandGetTerrainID::set_properties
    SetTitle(_("Get terrain ID"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_1->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_1->SetSize(wxSize(25, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy->SetSize(wxSize(25, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy->SetSize(wxSize(25, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy->SetSize(wxSize(25, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandGetTerrainID::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandGetTerrainID::do_layout
    wxBoxSizer* sizer_319_copy_1_copy_copy_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_1 = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_325_copy_copy = new wxStaticBoxSizer(sizer_325_copy_copy_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_326_copy_copy = new wxStaticBoxSizer(sizer_326_copy_copy_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_19_copy_copy_copy_copy = new wxFlexGridSizer(2, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_328_copy = new wxBoxSizer(wxHORIZONTAL);
    sizer_328_copy->Add(radio_btn_7_copy_copy_copy_copy, 0, wxRIGHT|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_328_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_1, 1, wxLEFT|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_328_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_1, 0, wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_325_copy_copy->Add(sizer_328_copy, 0, wxEXPAND, 0);
    sizer_325_copy_copy->Add(radio_btn_7_copy_copy_copy_1, 0, wxTOP|wxEXPAND, 1);
    grid_sizer_19_copy_copy_copy_copy->Add(label_48_copy_copy_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_19_copy_copy_copy_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_19_copy_copy_copy_copy->Add(label_48_copy_1_copy_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_19_copy_copy_copy_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_19_copy_copy_copy_copy->AddGrowableCol(1);
    sizer_326_copy_copy->Add(grid_sizer_19_copy_copy_copy_copy, 1, wxEXPAND, 0);
    sizer_325_copy_copy->Add(sizer_326_copy_copy, 0, wxEXPAND, 0);
    sizer_319_copy_1_copy_copy_1->Add(sizer_325_copy_copy, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_1->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy, 1, 0, 0);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_1->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy, 0, 0, 0);
    sizer_319_copy_1_copy_copy_1->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_1, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1, 0, wxALL, 1);
    sizer_319_copy_1_copy_copy_1->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_319_copy_1_copy_copy_1);
    sizer_319_copy_1_copy_copy_1->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandGetPositionID::EasyRPGDialogEventCommandGetPositionID(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandGetPositionID::EasyRPGDialogEventCommandGetPositionID
    sizer_325_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Place"));
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_staticbox = new wxStaticBox(this, -1, _("Store ID in variable"));
    sizer_326_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Origin variable"));
    radio_btn_7_copy_copy_copy_copy_copy = new wxRadioButton(this, wxID_ANY, _("Specify"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_1_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_1_copy = new wxButton(this, wxID_ANY, _("..."));
    radio_btn_7_copy_copy_copy_1_copy = new wxRadioButton(this, wxID_ANY, _("Variable"));
    label_48_copy_copy_copy_copy_copy_copy = new wxStaticText(this, wxID_ANY, _("X ordinate:"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_2 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_2 = new wxButton(this, wxID_ANY, _("..."));
    label_48_copy_1_copy_copy_copy_copy_copy = new wxStaticText(this, wxID_ANY, _("Y ordinate:"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandGetPositionID::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandGetPositionID::set_properties
    SetTitle(_("Get position ID"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_1_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_1_copy->SetSize(wxSize(25, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_2->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_2->SetSize(wxSize(25, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_copy->SetSize(wxSize(25, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_copy->SetSize(wxSize(25, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandGetPositionID::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandGetPositionID::do_layout
    wxBoxSizer* sizer_319_copy_1_copy_copy_1_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_325_copy_copy_copy = new wxStaticBoxSizer(sizer_325_copy_copy_copy_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_326_copy_copy_copy = new wxStaticBoxSizer(sizer_326_copy_copy_copy_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_19_copy_copy_copy_copy_copy = new wxFlexGridSizer(2, 2, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_328_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    sizer_328_copy_copy->Add(radio_btn_7_copy_copy_copy_copy_copy, 0, wxRIGHT|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_328_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_1_copy, 1, wxLEFT|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_328_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_1_copy, 0, wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    sizer_325_copy_copy_copy->Add(sizer_328_copy_copy, 0, wxEXPAND, 0);
    sizer_325_copy_copy_copy->Add(radio_btn_7_copy_copy_copy_1_copy, 0, wxTOP|wxEXPAND, 1);
    grid_sizer_19_copy_copy_copy_copy_copy->Add(label_48_copy_copy_copy_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_2, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_2, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_19_copy_copy_copy_copy_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_19_copy_copy_copy_copy_copy->Add(label_48_copy_1_copy_copy_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_19_copy_copy_copy_copy_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_19_copy_copy_copy_copy_copy->AddGrowableCol(1);
    sizer_326_copy_copy_copy->Add(grid_sizer_19_copy_copy_copy_copy_copy, 1, wxEXPAND, 0);
    sizer_325_copy_copy_copy->Add(sizer_326_copy_copy_copy, 0, wxEXPAND, 0);
    sizer_319_copy_1_copy_copy_1_copy->Add(sizer_325_copy_copy_copy, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_copy, 1, 0, 0);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_copy_copy, 0, 0, 0);
    sizer_319_copy_1_copy_copy_1_copy->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1_copy, 0, wxALL, 1);
    sizer_319_copy_1_copy_copy_1_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_1_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_319_copy_1_copy_copy_1_copy);
    sizer_319_copy_1_copy_copy_1_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandBlankScreen::EasyRPGDialogEventCommandBlankScreen(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandBlankScreen::EasyRPGDialogEventCommandBlankScreen
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_staticbox = new wxStaticBox(this, -1, _("Method"));
    const wxString choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy_1 = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_choices, 0);
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandBlankScreen::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandBlankScreen::set_properties
    SetTitle(_("Blank screen"));
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy_1->SetSize(wxSize(100, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandBlankScreen::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandBlankScreen::do_layout
    wxBoxSizer* sizer_319_copy_1_copy_copy_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1 = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_staticbox, wxHORIZONTAL);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1->Add(choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy_1, 1, 0, 0);
    sizer_319_copy_1_copy_copy_copy->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy, 0, wxALL, 1);
    sizer_319_copy_1_copy_copy_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_319_copy_1_copy_copy_copy);
    sizer_319_copy_1_copy_copy_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandShowScreen::EasyRPGDialogEventCommandShowScreen(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandShowScreen::EasyRPGDialogEventCommandShowScreen
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_staticbox = new wxStaticBox(this, -1, _("Method"));
    const wxString choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_choices[] = {
        
    };
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_choices, 0);
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandShowScreen::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandShowScreen::set_properties
    SetTitle(_("Show screen"));
    choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy->SetSize(wxSize(100, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandShowScreen::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandShowScreen::do_layout
    wxBoxSizer* sizer_319_copy_1_copy_copy_copy_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_staticbox, wxHORIZONTAL);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy->Add(choice_32_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy, 1, 0, 0);
    sizer_319_copy_1_copy_copy_copy_copy->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_319_copy_1_copy_copy_copy_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_319_copy_1_copy_copy_copy_copy);
    sizer_319_copy_1_copy_copy_copy_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeScreenTone::EasyRPGDialogEventCommandChangeScreenTone(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeScreenTone::EasyRPGDialogEventCommandChangeScreenTone
    sizer_331_staticbox = new wxStaticBox(this, -1, _("Tone"));
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_staticbox = new wxStaticBox(this, -1, _("Apply tone change"));
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_staticbox = new wxStaticBox(this, -1, _("Options"));
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_staticbox = new wxStaticBox(this, -1, _("Preview"));
    label_50 = new wxStaticText(this, wxID_ANY, _("0%"));
    label_50_copy = new wxStaticText(this, wxID_ANY, _("  100%"));
    label_50_copy_1 = new wxStaticText(this, wxID_ANY, _("200%"));
    label_49 = new wxStaticText(this, wxID_ANY, _("Red"));
    slider_8 = new wxSlider(this, wxID_ANY, 100, 0, 200);
    spin_ctrl_38 = new wxSpinCtrl(this, wxID_ANY, wxT("100"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 200);
    label_51 = new wxStaticText(this, wxID_ANY, _("%"));
    label_49_copy = new wxStaticText(this, wxID_ANY, _("Green"));
    slider_8_copy = new wxSlider(this, wxID_ANY, 100, 0, 200);
    spin_ctrl_38_copy = new wxSpinCtrl(this, wxID_ANY, wxT("100"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 200);
    label_51_copy = new wxStaticText(this, wxID_ANY, _("%"));
    label_49_copy_1 = new wxStaticText(this, wxID_ANY, _("Blue"));
    slider_8_copy_1 = new wxSlider(this, wxID_ANY, 100, 0, 200);
    spin_ctrl_38_copy_1 = new wxSpinCtrl(this, wxID_ANY, wxT("100"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 200);
    label_51_copy_1 = new wxStaticText(this, wxID_ANY, _("%"));
    label_49_copy_2 = new wxStaticText(this, wxID_ANY, _("Chroma"));
    slider_8_copy_2 = new wxSlider(this, wxID_ANY, 100, 0, 200);
    spin_ctrl_38_copy_2 = new wxSpinCtrl(this, wxID_ANY, wxT("100"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 200);
    label_51_copy_2 = new wxStaticText(this, wxID_ANY, _("%"));
    bitmap_6 = new wxStaticBitmap(this, wxID_ANY, wxBitmap(wxT("tone.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    spin_ctrl_38_copy_2_copy = new wxSpinCtrl(this, wxID_ANY, wxT("10"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_49_copy_2_copy = new wxStaticText(this, wxID_ANY, _("x0.1 sec."));
    checkbox_13 = new wxCheckBox(this, wxID_ANY, _("Wait to end change"));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeScreenTone::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeScreenTone::set_properties
    SetTitle(_("Change screen tone"));
    spin_ctrl_38->SetSize(wxSize(60, -1));
    spin_ctrl_38_copy->SetSize(wxSize(60, -1));
    spin_ctrl_38_copy_1->SetSize(wxSize(60, -1));
    spin_ctrl_38_copy_2->SetSize(wxSize(60, -1));
    spin_ctrl_38_copy_2_copy->SetSize(wxSize(60, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeScreenTone::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeScreenTone::do_layout
    wxBoxSizer* sizer_329 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_330 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1 = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_331 = new wxStaticBoxSizer(sizer_331_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_20 = new wxFlexGridSizer(5, 4, 2, 2);
    wxBoxSizer* sizer_332 = new wxBoxSizer(wxHORIZONTAL);
    grid_sizer_20->Add(0, 0, 0, wxEXPAND, 0);
    sizer_332->Add(label_50, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_332->Add(0, 0, 1, wxEXPAND, 0);
    sizer_332->Add(label_50_copy, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_332->Add(0, 0, 1, wxEXPAND, 0);
    sizer_332->Add(label_50_copy_1, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_20->Add(sizer_332, 1, wxEXPAND, 0);
    grid_sizer_20->Add(0, 0, 0, wxEXPAND, 0);
    grid_sizer_20->Add(0, 0, 0, wxEXPAND, 0);
    grid_sizer_20->Add(label_49, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20->Add(slider_8, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20->Add(spin_ctrl_38, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20->Add(label_51, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20->Add(label_49_copy, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20->Add(slider_8_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20->Add(spin_ctrl_38_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20->Add(label_51_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20->Add(label_49_copy_1, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20->Add(slider_8_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20->Add(spin_ctrl_38_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20->Add(label_51_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20->Add(label_49_copy_2, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20->Add(slider_8_copy_2, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20->Add(spin_ctrl_38_copy_2, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20->Add(label_51_copy_2, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20->AddGrowableCol(1);
    sizer_331->Add(grid_sizer_20, 0, wxEXPAND, 0);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy->Add(bitmap_6, 1, wxALIGN_CENTER_HORIZONTAL, 0);
    sizer_331->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_329->Add(sizer_331, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy->Add(spin_ctrl_38_copy_2_copy, 0, wxRIGHT, 1);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy->Add(label_49_copy_2_copy, 0, wxLEFT, 1);
    sizer_330->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1->Add(checkbox_13, 1, 0, 0);
    sizer_330->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_329->Add(sizer_330, 1, wxEXPAND, 0);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_329->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_329);
    sizer_329->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandFlashScreen::EasyRPGDialogEventCommandFlashScreen(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandFlashScreen::EasyRPGDialogEventCommandFlashScreen
    sizer_333_staticbox = new wxStaticBox(this, -1, _("Flash color"));
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Time"));
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_1_staticbox = new wxStaticBox(this, -1, _("Options"));
    sizer_334_staticbox = new wxStaticBox(this, -1, _("Sample"));
    bitmap_7 = new wxStaticBitmap(this, wxID_ANY, wxBitmap(wxT("color.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    label_50_copy_2 = new wxStaticText(this, wxID_ANY, _("0"));
    label_50_copy_1_copy = new wxStaticText(this, wxID_ANY, _("31"));
    label_49_copy_3 = new wxStaticText(this, wxID_ANY, _("Red"));
    slider_8_copy_3 = new wxSlider(this, wxID_ANY, 31, 0, 31);
    spin_ctrl_38_copy_3 = new wxSpinCtrl(this, wxID_ANY, wxT("31"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 31);
    label_49_copy_copy = new wxStaticText(this, wxID_ANY, _("Green"));
    slider_8_copy_3_copy = new wxSlider(this, wxID_ANY, 31, 0, 31);
    spin_ctrl_38_copy_3_copy = new wxSpinCtrl(this, wxID_ANY, wxT("31"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 31);
    label_49_copy_1_copy = new wxStaticText(this, wxID_ANY, _("Blue"));
    slider_8_copy_3_copy_1 = new wxSlider(this, wxID_ANY, 31, 0, 31);
    spin_ctrl_38_copy_3_copy_1 = new wxSpinCtrl(this, wxID_ANY, wxT("31"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 31);
    label_49_copy_2_copy_1 = new wxStaticText(this, wxID_ANY, _("Opacity"));
    slider_8_copy_3_copy_2 = new wxSlider(this, wxID_ANY, 31, 0, 31);
    spin_ctrl_38_copy_3_copy_2 = new wxSpinCtrl(this, wxID_ANY, wxT("31"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 31);
    spin_ctrl_38_copy_2_copy_copy = new wxSpinCtrl(this, wxID_ANY, wxT("10"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_49_copy_2_copy_copy = new wxStaticText(this, wxID_ANY, _("x0.1 sec."));
    checkbox_13_copy_1 = new wxCheckBox(this, wxID_ANY, _("Wait to end"));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandFlashScreen::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandFlashScreen::set_properties
    SetTitle(_("Flash screen"));
    spin_ctrl_38_copy_3->SetSize(wxSize(60, -1));
    spin_ctrl_38_copy_3_copy->SetSize(wxSize(60, -1));
    spin_ctrl_38_copy_3_copy_1->SetSize(wxSize(60, -1));
    spin_ctrl_38_copy_3_copy_2->SetSize(wxSize(60, -1));
    spin_ctrl_38_copy_2_copy_copy->SetSize(wxSize(60, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandFlashScreen::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandFlashScreen::do_layout
    wxBoxSizer* sizer_329_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_330_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_1 = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_333 = new wxStaticBoxSizer(sizer_333_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_20_copy = new wxFlexGridSizer(5, 3, 2, 2);
    wxBoxSizer* sizer_332_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_334 = new wxStaticBoxSizer(sizer_334_staticbox, wxHORIZONTAL);
    sizer_334->Add(bitmap_7, 0, 0, 0);
    sizer_333->Add(sizer_334, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 2);
    grid_sizer_20_copy->Add(0, 0, 0, wxEXPAND, 0);
    sizer_332_copy->Add(label_50_copy_2, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_332_copy->Add(0, 0, 1, wxEXPAND, 0);
    sizer_332_copy->Add(label_50_copy_1_copy, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_20_copy->Add(sizer_332_copy, 1, wxEXPAND, 0);
    grid_sizer_20_copy->Add(0, 0, 0, wxEXPAND, 0);
    grid_sizer_20_copy->Add(label_49_copy_3, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20_copy->Add(slider_8_copy_3, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20_copy->Add(spin_ctrl_38_copy_3, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20_copy->Add(label_49_copy_copy, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20_copy->Add(slider_8_copy_3_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20_copy->Add(spin_ctrl_38_copy_3_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20_copy->Add(label_49_copy_1_copy, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20_copy->Add(slider_8_copy_3_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20_copy->Add(spin_ctrl_38_copy_3_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20_copy->Add(label_49_copy_2_copy_1, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20_copy->Add(slider_8_copy_3_copy_2, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20_copy->Add(spin_ctrl_38_copy_3_copy_2, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_20_copy->AddGrowableCol(1);
    sizer_333->Add(grid_sizer_20_copy, 1, 0, 0);
    sizer_329_copy->Add(sizer_333, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy->Add(spin_ctrl_38_copy_2_copy_copy, 0, wxRIGHT, 1);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy->Add(label_49_copy_2_copy_copy, 0, wxLEFT, 1);
    sizer_330_copy->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_1->Add(checkbox_13_copy_1, 1, 0, 0);
    sizer_330_copy->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_1, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_329_copy->Add(sizer_330_copy, 1, wxEXPAND, 0);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_329_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_329_copy);
    sizer_329_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandShakeScreen::EasyRPGDialogEventCommandShakeScreen(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandShakeScreen::EasyRPGDialogEventCommandShakeScreen
    sizer_336_copy_staticbox = new wxStaticBox(this, -1, _("Speed"));
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Shaking time"));
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_1_copy_staticbox = new wxStaticBox(this, -1, _("Options"));
    sizer_336_staticbox = new wxStaticBox(this, -1, _("Shaking strengh"));
    slider_9 = new wxSlider(this, wxID_ANY, 4, 0, 8, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL|wxSL_AUTOTICKS|wxSL_BOTTOM);
    label_52 = new wxStaticText(this, wxID_ANY, _("Lower"));
    label_52_copy = new wxStaticText(this, wxID_ANY, _("Normal"));
    label_52_copy_1 = new wxStaticText(this, wxID_ANY, _("Higher"));
    slider_9_copy = new wxSlider(this, wxID_ANY, 4, 0, 8, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL|wxSL_AUTOTICKS|wxSL_BOTTOM);
    label_52_copy_2 = new wxStaticText(this, wxID_ANY, _("Slower"));
    label_52_copy_copy = new wxStaticText(this, wxID_ANY, _("Normal"));
    label_52_copy_1_copy = new wxStaticText(this, wxID_ANY, _("Faster"));
    spin_ctrl_38_copy_2_copy_copy_copy = new wxSpinCtrl(this, wxID_ANY, wxT("2"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_49_copy_2_copy_copy_copy = new wxStaticText(this, wxID_ANY, _("x0.1 sec."));
    checkbox_13_copy_1_copy = new wxCheckBox(this, wxID_ANY, _("Wait until end"));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandShakeScreen::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandShakeScreen::set_properties
    SetTitle(_("Shake screen"));
    spin_ctrl_38_copy_2_copy_copy_copy->SetSize(wxSize(60, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandShakeScreen::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandShakeScreen::do_layout
    wxBoxSizer* sizer_329_copy_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_330_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_1_copy = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_1_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_335 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_336_copy = new wxStaticBoxSizer(sizer_336_copy_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_337_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_336 = new wxStaticBoxSizer(sizer_336_staticbox, wxVERTICAL);
    wxBoxSizer* sizer_337 = new wxBoxSizer(wxHORIZONTAL);
    sizer_336->Add(slider_9, 0, wxEXPAND, 0);
    sizer_337->Add(label_52, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_337->Add(2, 0, 1, wxEXPAND, 0);
    sizer_337->Add(label_52_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_337->Add(2, 0, 1, wxEXPAND, 0);
    sizer_337->Add(label_52_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_336->Add(sizer_337, 1, wxEXPAND, 0);
    sizer_335->Add(sizer_336, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_336_copy->Add(slider_9_copy, 0, wxEXPAND, 0);
    sizer_337_copy->Add(label_52_copy_2, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_337_copy->Add(2, 0, 1, wxEXPAND, 0);
    sizer_337_copy->Add(label_52_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_337_copy->Add(2, 0, 1, wxEXPAND, 0);
    sizer_337_copy->Add(label_52_copy_1_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_336_copy->Add(sizer_337_copy, 1, wxEXPAND, 0);
    sizer_335->Add(sizer_336_copy, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_329_copy_copy->Add(sizer_335, 0, wxEXPAND, 0);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy->Add(spin_ctrl_38_copy_2_copy_copy_copy, 0, wxRIGHT, 1);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy->Add(label_49_copy_2_copy_copy_copy, 0, wxLEFT, 1);
    sizer_330_copy_copy->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_1_copy->Add(checkbox_13_copy_1_copy, 1, 0, 0);
    sizer_330_copy_copy->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_1_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_329_copy_copy->Add(sizer_330_copy_copy, 1, wxEXPAND, 0);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_329_copy_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_329_copy_copy);
    sizer_329_copy_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandMoveScreen::EasyRPGDialogEventCommandMoveScreen(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandMoveScreen::EasyRPGDialogEventCommandMoveScreen
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Number of tiles"));
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_staticbox = new wxStaticBox(this, -1, _("Movement speed"));
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_1_copy_copy_staticbox = new wxStaticBox(this, -1, _("Options"));
    sizer_336_copy_copy_staticbox = new wxStaticBox(this, -1, _("Direction"));
    const wxString radio_box_13_choices[] = {
        _("Fix"),
        _("Cancel fix"),
        _("Move position"),
        _("Return to origin")
    };
    radio_box_13 = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 4, radio_box_13_choices, 0, wxRA_SPECIFY_ROWS);
    radio_btn_8 = new wxRadioButton(this, wxID_ANY, _("Up"));
    radio_btn_8_copy = new wxRadioButton(this, wxID_ANY, _("Left"));
    radio_btn_8_copy_1 = new wxRadioButton(this, wxID_ANY, _("Right"));
    radio_btn_8_copy_2 = new wxRadioButton(this, wxID_ANY, _("Down"));
    spin_ctrl_39 = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    const wxString choice_33_choices[] = {
        
    };
    choice_33 = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_33_choices, 0);
    checkbox_13_copy_1_copy_copy = new wxCheckBox(this, wxID_ANY, _("Wait until end movement"));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandMoveScreen::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandMoveScreen::set_properties
    SetTitle(_("Move screen"));
    radio_box_13->SetSelection(0);
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandMoveScreen::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandMoveScreen::do_layout
    wxBoxSizer* sizer_329_copy_copy_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_330_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_1_copy_copy = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_1_copy_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_335_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_336_copy_copy = new wxStaticBoxSizer(sizer_336_copy_copy_staticbox, wxVERTICAL);
    wxGridSizer* grid_sizer_21 = new wxGridSizer(3, 3, 2, 2);
    sizer_335_copy->Add(radio_box_13, 0, wxLEFT|wxRIGHT, 1);
    grid_sizer_21->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_21->Add(radio_btn_8, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_21->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_21->Add(radio_btn_8_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_21->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_21->Add(radio_btn_8_copy_1, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_21->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_21->Add(radio_btn_8_copy_2, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_21->Add(0, 0, 1, wxEXPAND, 0);
    sizer_336_copy_copy->Add(grid_sizer_21, 1, wxEXPAND, 0);
    sizer_335_copy->Add(sizer_336_copy_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy->Add(spin_ctrl_39, 1, 0, 0);
    sizer_335_copy->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy_copy, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_329_copy_copy_copy->Add(sizer_335_copy, 0, wxEXPAND, 0);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy->Add(choice_33, 1, 0, 0);
    sizer_330_copy_copy_copy->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_1_copy_copy->Add(checkbox_13_copy_1_copy_copy, 1, 0, 0);
    sizer_330_copy_copy_copy->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_1_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_329_copy_copy_copy->Add(sizer_330_copy_copy_copy, 1, wxEXPAND, 0);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_329_copy_copy_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_329_copy_copy_copy);
    sizer_329_copy_copy_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandWeatherEffect::EasyRPGDialogEventCommandWeatherEffect(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandWeatherEffect::EasyRPGDialogEventCommandWeatherEffect
    const wxString radio_box_13_copy_choices[] = {
        _("None"),
        _("Rain"),
        _("Snow")
    };
    radio_box_13_copy = new wxRadioBox(this, wxID_ANY, _("Effect type"), wxDefaultPosition, wxDefaultSize, 3, radio_box_13_copy_choices, 0, wxRA_SPECIFY_ROWS);
    const wxString radio_box_13_copy_copy_choices[] = {
        _("Low"),
        _("Medium"),
        _("High")
    };
    radio_box_13_copy_copy = new wxRadioBox(this, wxID_ANY, _("Intensity"), wxDefaultPosition, wxDefaultSize, 3, radio_box_13_copy_copy_choices, 0, wxRA_SPECIFY_ROWS);
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandWeatherEffect::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandWeatherEffect::set_properties
    SetTitle(_("Weather effect"));
    radio_box_13_copy->SetSelection(0);
    radio_box_13_copy_copy->SetSelection(0);
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandWeatherEffect::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandWeatherEffect::do_layout
    wxBoxSizer* sizer_329_copy_copy_copy_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_335_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    sizer_335_copy_copy->Add(radio_box_13_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_335_copy_copy->Add(radio_box_13_copy_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_329_copy_copy_copy_copy->Add(sizer_335_copy_copy, 1, wxEXPAND, 0);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_329_copy_copy_copy_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_329_copy_copy_copy_copy);
    sizer_329_copy_copy_copy_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandShowPicture::EasyRPGDialogEventCommandShowPicture(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandShowPicture::EasyRPGDialogEventCommandShowPicture
    sizer_343_staticbox = new wxStaticBox(this, -1, _("Picture"));
    sizer_325_copy_copy_1_copy_staticbox = new wxStaticBox(this, -1, _("Picture position (coordinates)"));
    sizer_341_staticbox = new wxStaticBox(this, -1, _("Intensity"));
    sizer_342_staticbox = new wxStaticBox(this, -1, _("Transparency"));
    sizer_343_copy_staticbox = new wxStaticBox(this, -1, _("Other picture attributes"));
    sizer_340_staticbox = new wxStaticBox(this, -1, _("Picture number"));
    spin_ctrl_40 = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    radio_btn_7_copy_copy_copy_copy_1_copy = new wxRadioButton(this, wxID_ANY, _("Specify"));
    label_48_copy_copy_copy_copy_copy_1_copy_copy = new wxStaticText(this, wxID_ANY, _("X:"));
    spin_ctrl_40_copy_copy_1 = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_48_copy_copy_copy_copy_copy_1_copy_copy_copy_1 = new wxStaticText(this, wxID_ANY, _("Y:"));
    spin_ctrl_40_copy_copy_2 = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    radio_btn_7_copy_copy_copy_2 = new wxRadioButton(this, wxID_ANY, _("Variable"));
    label_48_copy_copy_copy_copy_copy_1_copy_copy_copy = new wxStaticText(this, wxID_ANY, _("X:"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    label_48_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy = new wxStaticText(this, wxID_ANY, _("Y:"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_1_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_1_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    static_line_2 = new wxStaticLine(this, wxID_ANY);
    checkbox_29 = new wxCheckBox(this, wxID_ANY, _("Scroll map fix"));
    spin_ctrl_40_copy = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_53 = new wxStaticText(this, wxID_ANY, _("%"));
    spin_ctrl_40_copy_copy = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_53_copy = new wxStaticText(this, wxID_ANY, _("%"));
    const wxString radio_box_14_choices[] = {
        _("Yes"),
        _("No")
    };
    radio_box_14 = new wxRadioBox(this, wxID_ANY, _("Transparent color"), wxDefaultPosition, wxDefaultSize, 2, radio_box_14_choices, 1, wxRA_SPECIFY_ROWS);
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2 = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2 = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2 = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandShowPicture::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandShowPicture::set_properties
    SetTitle(_("Show picture"));
    spin_ctrl_40->SetSize(wxSize(90, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy->SetSize(wxSize(25, -1));
    spin_ctrl_40_copy_copy_1->SetSize(wxSize(75, -1));
    spin_ctrl_40_copy_copy_2->SetSize(wxSize(75, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy->SetSize(wxSize(25, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_1_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_1_copy_copy->SetSize(wxSize(25, -1));
    spin_ctrl_40_copy->SetSize(wxSize(75, -1));
    spin_ctrl_40_copy_copy->SetSize(wxSize(75, -1));
    radio_box_14->SetSelection(0);
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy_copy->SetSize(wxSize(25, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandShowPicture::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandShowPicture::do_layout
    wxBoxSizer* sizer_319_copy_1_copy_copy_2 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_343_copy = new wxStaticBoxSizer(sizer_343_copy_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_339 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_342 = new wxStaticBoxSizer(sizer_342_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_341 = new wxStaticBoxSizer(sizer_341_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_325_copy_copy_1_copy = new wxStaticBoxSizer(sizer_325_copy_copy_1_copy_staticbox, wxVERTICAL);
    wxFlexGridSizer* grid_sizer_22 = new wxFlexGridSizer(4, 3, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_1_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_1_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_338 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_343 = new wxStaticBoxSizer(sizer_343_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_340 = new wxStaticBoxSizer(sizer_340_staticbox, wxHORIZONTAL);
    sizer_340->Add(spin_ctrl_40, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_338->Add(sizer_340, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_343->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_343->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_338->Add(sizer_343, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_319_copy_1_copy_copy_2->Add(sizer_338, 0, wxEXPAND, 0);
    grid_sizer_22->Add(radio_btn_7_copy_copy_copy_copy_1_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_22->Add(label_48_copy_copy_copy_copy_copy_1_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_22->Add(spin_ctrl_40_copy_copy_1, 1, wxRIGHT|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_22->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_22->Add(label_48_copy_copy_copy_copy_copy_1_copy_copy_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_22->Add(spin_ctrl_40_copy_copy_2, 1, wxRIGHT|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_22->Add(radio_btn_7_copy_copy_copy_2, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_22->Add(label_48_copy_copy_copy_copy_copy_1_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_1_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_1_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_22->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_1_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_22->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_22->Add(label_48_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_1_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_1_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_1_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_1_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_22->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_1_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_22->AddGrowableCol(2);
    sizer_325_copy_copy_1_copy->Add(grid_sizer_22, 1, wxBOTTOM|wxEXPAND, 1);
    sizer_325_copy_copy_1_copy->Add(static_line_2, 0, wxTOP|wxBOTTOM|wxEXPAND, 1);
    sizer_325_copy_copy_1_copy->Add(checkbox_29, 0, wxTOP|wxEXPAND, 1);
    sizer_319_copy_1_copy_copy_2->Add(sizer_325_copy_copy_1_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_341->Add(spin_ctrl_40_copy, 1, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_341->Add(label_53, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_339->Add(sizer_341, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_342->Add(spin_ctrl_40_copy_copy, 1, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_342->Add(label_53_copy, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_339->Add(sizer_342, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_339->Add(radio_box_14, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_319_copy_1_copy_copy_2->Add(sizer_339, 0, wxEXPAND, 0);
    sizer_343_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy_copy, 1, 0, 0);
    sizer_343_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy_copy, 0, 0, 0);
    sizer_319_copy_1_copy_copy_2->Add(sizer_343_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2, 0, wxALL, 1);
    sizer_319_copy_1_copy_copy_2->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_319_copy_1_copy_copy_2);
    sizer_319_copy_1_copy_copy_2->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandMovePicture::EasyRPGDialogEventCommandMovePicture(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandMovePicture::EasyRPGDialogEventCommandMovePicture
    sizer_325_copy_copy_1_copy_copy_staticbox = new wxStaticBox(this, -1, _("Move to position (coordinates)"));
    sizer_341_copy_staticbox = new wxStaticBox(this, -1, _("Intensity"));
    sizer_342_copy_staticbox = new wxStaticBox(this, -1, _("Transparency"));
    sizer_343_copy_copy_staticbox = new wxStaticBox(this, -1, _("Other picture attributes"));
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_1_staticbox = new wxStaticBox(this, -1, _("Time"));
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_1_copy_1_staticbox = new wxStaticBox(this, -1, _("Options"));
    sizer_340_copy_staticbox = new wxStaticBox(this, -1, _("Picture number"));
    spin_ctrl_40_copy_1 = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    radio_btn_7_copy_copy_copy_copy_1_copy_copy = new wxRadioButton(this, wxID_ANY, _("Specify"));
    label_48_copy_copy_copy_copy_copy_1_copy_copy_copy_2 = new wxStaticText(this, wxID_ANY, _("X:"));
    spin_ctrl_40_copy_copy_1_copy = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_48_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_1 = new wxStaticText(this, wxID_ANY, _("Y:"));
    spin_ctrl_40_copy_copy_2_copy = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    radio_btn_7_copy_copy_copy_2_copy = new wxRadioButton(this, wxID_ANY, _("Variable"));
    label_48_copy_copy_copy_copy_copy_1_copy_copy_copy_copy = new wxStaticText(this, wxID_ANY, _("X:"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy_1 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy_1 = new wxButton(this, wxID_ANY, _("..."));
    label_48_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy = new wxStaticText(this, wxID_ANY, _("Y:"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_1_copy_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_1_copy_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    spin_ctrl_40_copy_copy_3 = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_53_copy_1 = new wxStaticText(this, wxID_ANY, _("%"));
    spin_ctrl_40_copy_copy_copy = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_53_copy_copy = new wxStaticText(this, wxID_ANY, _("%"));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy_copy_copy = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy_copy_copy = new wxButton(this, wxID_ANY, _("..."));
    spin_ctrl_38_copy_2_copy_copy_copy_1 = new wxSpinCtrl(this, wxID_ANY, wxT("10"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    label_49_copy_2_copy_copy_copy_1 = new wxStaticText(this, wxID_ANY, _("x0.1 sec."));
    checkbox_13_copy_1_copy_1 = new wxCheckBox(this, wxID_ANY, _("Wait to end"));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandMovePicture::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandMovePicture::set_properties
    SetTitle(_("Move picture"));
    spin_ctrl_40_copy_1->SetSize(wxSize(90, -1));
    spin_ctrl_40_copy_copy_1_copy->SetSize(wxSize(75, -1));
    spin_ctrl_40_copy_copy_2_copy->SetSize(wxSize(75, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy_1->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy_1->SetSize(wxSize(25, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_1_copy_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_1_copy_copy_copy->SetSize(wxSize(25, -1));
    spin_ctrl_40_copy_copy_3->SetSize(wxSize(75, -1));
    spin_ctrl_40_copy_copy_copy->SetSize(wxSize(75, -1));
    text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy_copy_copy->SetSize(wxSize(75, -1));
    button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy_copy_copy->SetSize(wxSize(25, -1));
    spin_ctrl_38_copy_2_copy_copy_copy_1->SetSize(wxSize(60, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandMovePicture::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandMovePicture::do_layout
    wxBoxSizer* sizer_319_copy_1_copy_copy_2_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_330_copy_copy_1 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_1_copy_1 = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_1_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_1 = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_1_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_343_copy_copy = new wxStaticBoxSizer(sizer_343_copy_copy_staticbox, wxHORIZONTAL);
    wxBoxSizer* sizer_339_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_342_copy = new wxStaticBoxSizer(sizer_342_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_341_copy = new wxStaticBoxSizer(sizer_341_copy_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_325_copy_copy_1_copy_copy = new wxStaticBoxSizer(sizer_325_copy_copy_1_copy_copy_staticbox, wxVERTICAL);
    wxFlexGridSizer* grid_sizer_22_copy = new wxFlexGridSizer(4, 3, 2, 2);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_1_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_1_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_338_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_340_copy = new wxStaticBoxSizer(sizer_340_copy_staticbox, wxHORIZONTAL);
    sizer_340_copy->Add(spin_ctrl_40_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_338_copy->Add(sizer_340_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_319_copy_1_copy_copy_2_copy->Add(sizer_338_copy, 0, wxEXPAND, 0);
    grid_sizer_22_copy->Add(radio_btn_7_copy_copy_copy_copy_1_copy_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_22_copy->Add(label_48_copy_copy_copy_copy_copy_1_copy_copy_copy_2, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_22_copy->Add(spin_ctrl_40_copy_copy_1_copy, 1, wxRIGHT|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_22_copy->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_22_copy->Add(label_48_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_22_copy->Add(spin_ctrl_40_copy_copy_2_copy, 1, wxRIGHT|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    grid_sizer_22_copy->Add(radio_btn_7_copy_copy_copy_2_copy, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_22_copy->Add(label_48_copy_copy_copy_copy_copy_1_copy_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_1_copy_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy_1, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_1_copy_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy_1, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_22_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_1_copy_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_22_copy->Add(0, 0, 1, wxEXPAND, 0);
    grid_sizer_22_copy->Add(label_48_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_1_copy_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_1_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_1_copy_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_1_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_22_copy->Add(sizer_58_copy_1_copy_2_copy_copy_1_copy_copy_copy_copy_4_copy_copy_copy_copy_1_copy_copy_copy, 1, wxEXPAND, 0);
    grid_sizer_22_copy->AddGrowableCol(2);
    sizer_325_copy_copy_1_copy_copy->Add(grid_sizer_22_copy, 1, wxBOTTOM|wxEXPAND, 1);
    sizer_319_copy_1_copy_copy_2_copy->Add(sizer_325_copy_copy_1_copy_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_341_copy->Add(spin_ctrl_40_copy_copy_3, 1, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_341_copy->Add(label_53_copy_1, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_339_copy->Add(sizer_341_copy, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_342_copy->Add(spin_ctrl_40_copy_copy_copy, 1, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_342_copy->Add(label_53_copy_copy, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    sizer_339_copy->Add(sizer_342_copy, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_339_copy->Add(0, 0, 1, wxEXPAND, 0);
    sizer_319_copy_1_copy_copy_2_copy->Add(sizer_339_copy, 0, wxEXPAND, 0);
    sizer_343_copy_copy->Add(text_ctrl_6_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy_copy_copy, 1, wxALIGN_CENTER_VERTICAL, 0);
    sizer_343_copy_copy->Add(button_15_copy_2_copy_2_copy_copy_1_copy_copy_copy_copy_3_copy_copy_copy_copy_2_copy_copy_copy_copy_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    sizer_319_copy_1_copy_copy_2_copy->Add(sizer_343_copy_copy, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_1->Add(spin_ctrl_38_copy_2_copy_copy_copy_1, 0, wxRIGHT, 1);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_1->Add(label_49_copy_2_copy_copy_copy_1, 0, wxLEFT, 1);
    sizer_330_copy_copy_1->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_1, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_1_copy_1->Add(checkbox_13_copy_1_copy_1, 1, 0, 0);
    sizer_330_copy_copy_1->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_1_copy_1_copy_1, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_319_copy_1_copy_copy_2_copy->Add(sizer_330_copy_copy_1, 1, wxEXPAND, 0);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy, 0, wxALL, 1);
    sizer_319_copy_1_copy_copy_2_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_319_copy_1_copy_copy_2_copy);
    sizer_319_copy_1_copy_copy_2_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandDeletePicture::EasyRPGDialogEventCommandDeletePicture(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandDeletePicture::EasyRPGDialogEventCommandDeletePicture
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_1_copy_staticbox = new wxStaticBox(this, -1, _("Picture number"));
    spin_ctrl_38_copy_2_copy_copy_copy_1_copy = new wxSpinCtrl(this, wxID_ANY, wxT("10"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandDeletePicture::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandDeletePicture::set_properties
    SetTitle(_("Delete picture"));
    spin_ctrl_38_copy_2_copy_copy_copy_1_copy->SetSize(wxSize(90, -1));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandDeletePicture::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandDeletePicture::do_layout
    wxBoxSizer* sizer_319_copy_1_copy_copy_2_copy_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_1_copy = new wxStaticBoxSizer(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_1_copy_staticbox, wxHORIZONTAL);
    sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_1_copy->Add(spin_ctrl_38_copy_2_copy_copy_copy_1_copy, 1, 0, 0);
    sizer_319_copy_1_copy_copy_2_copy_copy->Add(sizer_316_copy_copy_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_copy_1_copy, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy, 0, wxALL, 1);
    sizer_319_copy_1_copy_copy_2_copy_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_319_copy_1_copy_copy_2_copy_copy);
    sizer_319_copy_1_copy_copy_2_copy_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandShowAnimation::EasyRPGDialogEventCommandShowAnimation(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandShowAnimation::EasyRPGDialogEventCommandShowAnimation
    sizer_345_staticbox = new wxStaticBox(this, -1, _("Target"));
    sizer_346_staticbox = new wxStaticBox(this, -1, _("Options"));
    sizer_347_staticbox = new wxStaticBox(this, -1, _("Animation"));
    bitmap_8 = new wxStaticBitmap(this, wxID_ANY, wxBitmap(wxT("background.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    const wxString choice_35_choices[] = {
        
    };
    choice_35 = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_35_choices, 0);
    const wxString choice_34_choices[] = {
        
    };
    choice_34 = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, choice_34_choices, 0);
    checkbox_30 = new wxCheckBox(this, wxID_ANY, _("Wait until end"));
    checkbox_30_copy = new wxCheckBox(this, wxID_ANY, _("Whole map range"));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandShowAnimation::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandShowAnimation::set_properties
    SetTitle(_("Show animation"));
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandShowAnimation::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandShowAnimation::do_layout
    wxBoxSizer* sizer_319_copy_1_copy_copy_2_copy_copy_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_330_copy_copy_1_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_344 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* sizer_346 = new wxStaticBoxSizer(sizer_346_staticbox, wxVERTICAL);
    wxStaticBoxSizer* sizer_345 = new wxStaticBoxSizer(sizer_345_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* sizer_347 = new wxStaticBoxSizer(sizer_347_staticbox, wxVERTICAL);
    sizer_347->Add(bitmap_8, 0, wxBOTTOM|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 1);
    sizer_347->Add(choice_35, 0, wxBOTTOM|wxEXPAND, 1);
    sizer_330_copy_copy_1_copy_copy->Add(sizer_347, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_345->Add(choice_34, 1, 0, 0);
    sizer_344->Add(sizer_345, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    sizer_346->Add(checkbox_30, 0, wxBOTTOM|wxEXPAND, 1);
    sizer_346->Add(checkbox_30_copy, 0, wxTOP|wxEXPAND, 1);
    sizer_344->Add(sizer_346, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_330_copy_copy_1_copy_copy->Add(sizer_344, 1, wxEXPAND, 0);
    sizer_319_copy_1_copy_copy_2_copy_copy_copy->Add(sizer_330_copy_copy_1_copy_copy, 1, wxEXPAND, 0);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy, 0, wxALL, 1);
    sizer_319_copy_1_copy_copy_2_copy_copy_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_319_copy_1_copy_copy_2_copy_copy_copy);
    sizer_319_copy_1_copy_copy_2_copy_copy_copy->Fit(this);
    Layout();
    // end wxGlade
}


EasyRPGDialogEventCommandChangeActorTransparency::EasyRPGDialogEventCommandChangeActorTransparency(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeActorTransparency::EasyRPGDialogEventCommandChangeActorTransparency
    const wxString radio_box_15_choices[] = {
        _("Transparent"),
        _("Normal")
    };
    radio_box_15 = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 2, radio_box_15_choices, 1, wxRA_SPECIFY_ROWS);
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy_copy = new wxButton(this, wxID_OK, wxEmptyString);
    button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy_copy = new wxButton(this, wxID_CANCEL, wxEmptyString);
    button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy_copy = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeActorTransparency::set_properties()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeActorTransparency::set_properties
    SetTitle(_("Change actor transparency"));
    radio_box_15->SetSelection(0);
    button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy_copy->SetDefault();
    // end wxGlade
}


void EasyRPGDialogEventCommandChangeActorTransparency::do_layout()
{
    // begin wxGlade: EasyRPGDialogEventCommandChangeActorTransparency::do_layout
    wxBoxSizer* sizer_319_copy_1_copy_copy_2_copy_copy_copy_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy_copy = new wxBoxSizer(wxHORIZONTAL);
    sizer_319_copy_1_copy_copy_2_copy_copy_copy_copy->Add(radio_box_15, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy_copy->Add(button_67_copy_2_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy_copy->Add(button_67_copy_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy_copy->Add(button_67_copy_1_copy_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy_copy, 0, wxALL, 1);
    sizer_319_copy_1_copy_copy_2_copy_copy_copy_copy->Add(sizer_73_copy_1_copy_copy_copy_copy_copy_copy_copy_1_copy_copy_copy_1_copy_copy_2_copy_copy_copy_copy, 0, wxALIGN_RIGHT, 0);
    SetSizer(sizer_319_copy_1_copy_copy_2_copy_copy_copy_copy);
    sizer_319_copy_1_copy_copy_2_copy_copy_copy_copy->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandFlashCharacter::DlgEventCommandFlashCharacter(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandFlashCharacter::DlgEventCommandFlashCharacter
    SzSample_staticbox = new wxStaticBox(this, -1, _("Sample"));
    SzFlash_staticbox = new wxStaticBox(this, -1, _("Flash color"));
    SzTime_staticbox = new wxStaticBox(this, -1, _("Time"));
    SzOptions_staticbox = new wxStaticBox(this, -1, _("Options"));
    SzTarget_staticbox = new wxStaticBox(this, -1, _("Target"));
    const wxString ChoiceTarget_choices[] = {
        
    };
    ChoiceTarget = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, ChoiceTarget_choices, 0);
    BitmapSample = new wxStaticBitmap(this, wxID_ANY, wxBitmap(wxT("color.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    LblColor01 = new wxStaticText(this, wxID_ANY, _("0"));
    LblColor02 = new wxStaticText(this, wxID_ANY, _("31"));
    LblColorRed = new wxStaticText(this, wxID_ANY, _("Red"));
    SliderColorRed = new wxSlider(this, wxID_ANY, 31, 0, 31);
    SpinColorRed = new wxSpinCtrl(this, wxID_ANY, wxT("31"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 31);
    LblColorGreen = new wxStaticText(this, wxID_ANY, _("Green"));
    SliderColorGreen = new wxSlider(this, wxID_ANY, 31, 0, 31);
    SpinColorGreen = new wxSpinCtrl(this, wxID_ANY, wxT("31"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 31);
    LblColorBlue = new wxStaticText(this, wxID_ANY, _("Blue"));
    SliderColorBlue = new wxSlider(this, wxID_ANY, 31, 0, 31);
    SpinColorBlue = new wxSpinCtrl(this, wxID_ANY, wxT("31"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 31);
    LblOpacity = new wxStaticText(this, wxID_ANY, _("Opacity"));
    SliderOpacity = new wxSlider(this, wxID_ANY, 31, 0, 31);
    SpinOpacity = new wxSpinCtrl(this, wxID_ANY, wxT("31"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 31);
    SpinTime = new wxSpinCtrl(this, wxID_ANY, wxT("10"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    LblTime = new wxStaticText(this, wxID_ANY, _("x0.1 sec."));
    ChkWait = new wxCheckBox(this, wxID_ANY, _("Wait to end"));
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancelBtnHel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandFlashCharacter::set_properties()
{
    // begin wxGlade: DlgEventCommandFlashCharacter::set_properties
    SetTitle(_("Flash character"));
    SpinColorRed->SetSize(wxSize(60, -1));
    SpinColorGreen->SetSize(wxSize(60, -1));
    SpinColorBlue->SetSize(wxSize(60, -1));
    SpinOpacity->SetSize(wxSize(60, -1));
    SpinTime->SetSize(wxSize(60, -1));
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandFlashCharacter::do_layout()
{
    // begin wxGlade: DlgEventCommandFlashCharacter::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzOptionsRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzOptions = new wxStaticBoxSizer(SzOptions_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* SzTime = new wxStaticBoxSizer(SzTime_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* SzFlash = new wxStaticBoxSizer(SzFlash_staticbox, wxHORIZONTAL);
    wxFlexGridSizer* SzColorsUp = new wxFlexGridSizer(5, 3, 2, 2);
    wxBoxSizer* SzText = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzSample = new wxStaticBoxSizer(SzSample_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* SzTarget = new wxStaticBoxSizer(SzTarget_staticbox, wxHORIZONTAL);
    SzTarget->Add(ChoiceTarget, 1, 0, 0);
    SzUp->Add(SzTarget, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    SzSample->Add(BitmapSample, 0, 0, 0);
    SzFlash->Add(SzSample, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 2);
    SzColorsUp->Add(0, 0, 0, wxEXPAND, 0);
    SzText->Add(LblColor01, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzText->Add(0, 0, 1, wxEXPAND, 0);
    SzText->Add(LblColor02, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    SzColorsUp->Add(SzText, 1, wxEXPAND, 0);
    SzColorsUp->Add(0, 0, 0, wxEXPAND, 0);
    SzColorsUp->Add(LblColorRed, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    SzColorsUp->Add(SliderColorRed, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    SzColorsUp->Add(SpinColorRed, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzColorsUp->Add(LblColorGreen, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    SzColorsUp->Add(SliderColorGreen, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    SzColorsUp->Add(SpinColorGreen, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzColorsUp->Add(LblColorBlue, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    SzColorsUp->Add(SliderColorBlue, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    SzColorsUp->Add(SpinColorBlue, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzColorsUp->Add(LblOpacity, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    SzColorsUp->Add(SliderOpacity, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    SzColorsUp->Add(SpinOpacity, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzColorsUp->AddGrowableCol(1);
    SzFlash->Add(SzColorsUp, 1, 0, 0);
    SzUp->Add(SzFlash, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    SzTime->Add(SpinTime, 0, wxRIGHT, 1);
    SzTime->Add(LblTime, 0, wxLEFT, 1);
    SzOptionsRight->Add(SzTime, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzOptions->Add(ChkWait, 1, 0, 0);
    SzOptionsRight->Add(SzOptions, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzUp->Add(SzOptionsRight, 1, wxEXPAND, 0);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancelBtnHel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandEventMovement::DlgEventCommandEventMovement(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandEventMovement::DlgEventCommandEventMovement
    SzOptionsUp_staticbox = new wxStaticBox(this, -1, _("Options"));
    SzRight02_staticbox = new wxStaticBox(this, -1, _("Path"));
    SzTarget_staticbox = new wxStaticBox(this, -1, _("Move target"));
    const wxString ChoiceTarget_choices[] = {
        
    };
    ChoiceTarget = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, ChoiceTarget_choices, 0);
    const wxString RadioBoxSpeed_choices[] = {
        _("1"),
        _("2"),
        _("3"),
        _("4"),
        _("5"),
        _("6"),
        _("7"),
        _("8")
    };
    RadioBoxSpeed = new wxRadioBox(this, wxID_ANY, _("Movement speed"), wxDefaultPosition, wxDefaultSize, 8, RadioBoxSpeed_choices, 1, wxRA_SPECIFY_ROWS);
    const wxString ListMoves_choices[] = {
        _("<>")
    };
    ListMoves = new wxListBox(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 1, ListMoves_choices, 0);
    BtnMovesDelete = new wxButton(this, wxID_ANY, _("Delete"));
    BtnMovesClear = new wxButton(this, wxID_ANY, _("Clear"));
    ChkRepeat = new wxCheckBox(this, wxID_ANY, _("Repeat path"));
    ChkIgnore = new wxCheckBox(this, wxID_ANY, _("Ignore if gets blocked"));
    BtnUp = new wxButton(this, wxID_ANY, _("Up"));
    BtnLookUp = new wxButton(this, wxID_ANY, _("Look up"));
    BtnStartJump = new wxButton(this, wxID_ANY, _("Start jump"));
    BtnRight = new wxButton(this, wxID_ANY, _("Right"));
    BtnLookRight = new wxButton(this, wxID_ANY, _("Look Right"));
    BtnEndJump = new wxButton(this, wxID_ANY, _("End jump"));
    BtnDown = new wxButton(this, wxID_ANY, _("Down"));
    BtnLookDown = new wxButton(this, wxID_ANY, _("Look down"));
    BtnFixDirection = new wxButton(this, wxID_ANY, _("Fix direction"));
    BtnLeft = new wxButton(this, wxID_ANY, _("Left"));
    BtnLookLeft = new wxButton(this, wxID_ANY, _("Look left"));
    BtnCancelFix = new wxButton(this, wxID_ANY, _("Cancel fix"));
    BtnRightUp = new wxButton(this, wxID_ANY, _("Right - Up"));
    Btn90Right = new wxButton(this, wxID_ANY, _("Rotate 90º Right"));
    BtnGhost = new wxButton(this, wxID_ANY, _("Ghost like"));
    BtnRightDown = new wxButton(this, wxID_ANY, _("Right - Down"));
    Btn90Left = new wxButton(this, wxID_ANY, _("Rotate 90º Left"));
    BtnEndGhost = new wxButton(this, wxID_ANY, _("End ghost like"));
    BtnLeftUp = new wxButton(this, wxID_ANY, _("Left - Up"));
    Btn180Right = new wxButton(this, wxID_ANY, _("Rotate 180º Right"));
    BtnStopAnimation = new wxButton(this, wxID_ANY, _("Stop animation"));
    BtnLeftDown = new wxButton(this, wxID_ANY, _("Left - Down"));
    BtnRightLeft = new wxButton(this, wxID_ANY, _("Rotate 90º Rght-Lft"));
    BtnContinueAnimation = new wxButton(this, wxID_ANY, _("Continue animation"));
    BtnRandom = new wxButton(this, wxID_ANY, _("Random step"));
    BtnRandomDirection = new wxButton(this, wxID_ANY, _("Random direction"));
    BtnTrasparencyUp = new wxButton(this, wxID_ANY, _("Transparency up"));
    BtnFollowPlayer = new wxButton(this, wxID_ANY, _("Follow player"));
    BtnLookPlayer = new wxButton(this, wxID_ANY, _("Look player"));
    BtnTrasparencyDown = new wxButton(this, wxID_ANY, _("Transparency down"));
    BtnEvadePlayer = new wxButton(this, wxID_ANY, _("Evade player"));
    BtnTurnBack = new wxButton(this, wxID_ANY, _("Turn back on player"));
    BtnEnableSwitch = new wxButton(this, wxID_ANY, _("Enable switch"));
    BtnGo = new wxButton(this, wxID_ANY, _("Go"));
    BtnWait = new wxButton(this, wxID_ANY, _("Wait"));
    BtnDisableSwitch = new wxButton(this, wxID_ANY, _("Disable switch"));
    BtnSpeedUp = new wxButton(this, wxID_ANY, _("Speed up"));
    BtnFrequencyUp = new wxButton(this, wxID_ANY, _("Frequency up"));
    BtnChangeGraphic = new wxButton(this, wxID_ANY, _("Change graphic..."));
    BtnSpeedDown = new wxButton(this, wxID_ANY, _("Speed down"));
    BtnFrequencyDown = new wxButton(this, wxID_ANY, _("Frequency down"));
    BtnSoundEffect = new wxButton(this, wxID_ANY, _("Sound effect..."));
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandEventMovement::set_properties()
{
    // begin wxGlade: DlgEventCommandEventMovement::set_properties
    SetTitle(_("Event movement"));
    RadioBoxSpeed->SetSelection(0);
    ListMoves->SetSelection(0);
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandEventMovement::do_layout()
{
    // begin wxGlade: DlgEventCommandEventMovement::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzRight02 = new wxStaticBoxSizer(SzRight02_staticbox, wxHORIZONTAL);
    wxGridSizer* SzDirections = new wxGridSizer(14, 3, 0, 0);
    wxBoxSizer* SzPathUp = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* SzOptionsUp = new wxStaticBoxSizer(SzOptionsUp_staticbox, wxVERTICAL);
    wxBoxSizer* SzMovesOptions = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzRight01 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzTarget = new wxStaticBoxSizer(SzTarget_staticbox, wxHORIZONTAL);
    SzTarget->Add(ChoiceTarget, 1, wxALIGN_CENTER_VERTICAL, 0);
    SzRight01->Add(SzTarget, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    SzRight01->Add(RadioBoxSpeed, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    SzUp->Add(SzRight01, 0, wxEXPAND, 0);
    SzPathUp->Add(ListMoves, 1, wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzMovesOptions->Add(BtnMovesDelete, 1, wxRIGHT|wxTOP, 1);
    SzMovesOptions->Add(BtnMovesClear, 1, wxLEFT|wxRIGHT|wxTOP, 1);
    SzPathUp->Add(SzMovesOptions, 0, wxEXPAND, 0);
    SzOptionsUp->Add(ChkRepeat, 0, wxBOTTOM|wxEXPAND, 1);
    SzOptionsUp->Add(ChkIgnore, 0, wxTOP|wxEXPAND, 1);
    SzPathUp->Add(SzOptionsUp, 0, wxRIGHT|wxEXPAND, 1);
    SzRight02->Add(SzPathUp, 0, wxEXPAND, 0);
    SzDirections->Add(BtnUp, 0, wxEXPAND, 0);
    SzDirections->Add(BtnLookUp, 0, wxEXPAND, 0);
    SzDirections->Add(BtnStartJump, 0, wxEXPAND, 0);
    SzDirections->Add(BtnRight, 0, wxEXPAND, 0);
    SzDirections->Add(BtnLookRight, 0, wxEXPAND, 0);
    SzDirections->Add(BtnEndJump, 0, wxEXPAND, 0);
    SzDirections->Add(BtnDown, 0, wxEXPAND, 0);
    SzDirections->Add(BtnLookDown, 0, wxEXPAND, 0);
    SzDirections->Add(BtnFixDirection, 0, wxEXPAND, 0);
    SzDirections->Add(BtnLeft, 0, wxEXPAND, 0);
    SzDirections->Add(BtnLookLeft, 0, wxEXPAND, 0);
    SzDirections->Add(BtnCancelFix, 0, wxEXPAND, 0);
    SzDirections->Add(BtnRightUp, 0, wxEXPAND, 0);
    SzDirections->Add(Btn90Right, 0, wxEXPAND, 0);
    SzDirections->Add(BtnGhost, 0, wxEXPAND, 0);
    SzDirections->Add(BtnRightDown, 0, wxEXPAND, 0);
    SzDirections->Add(Btn90Left, 0, wxEXPAND, 0);
    SzDirections->Add(BtnEndGhost, 0, wxEXPAND, 0);
    SzDirections->Add(BtnLeftUp, 0, wxEXPAND, 0);
    SzDirections->Add(Btn180Right, 0, wxEXPAND, 0);
    SzDirections->Add(BtnStopAnimation, 0, wxEXPAND, 0);
    SzDirections->Add(BtnLeftDown, 0, wxEXPAND, 0);
    SzDirections->Add(BtnRightLeft, 0, wxEXPAND, 0);
    SzDirections->Add(BtnContinueAnimation, 0, wxEXPAND, 0);
    SzDirections->Add(BtnRandom, 0, wxEXPAND, 0);
    SzDirections->Add(BtnRandomDirection, 0, wxEXPAND, 0);
    SzDirections->Add(BtnTrasparencyUp, 0, wxEXPAND, 0);
    SzDirections->Add(BtnFollowPlayer, 0, wxEXPAND, 0);
    SzDirections->Add(BtnLookPlayer, 0, wxEXPAND, 0);
    SzDirections->Add(BtnTrasparencyDown, 0, wxEXPAND, 0);
    SzDirections->Add(BtnEvadePlayer, 0, wxEXPAND, 0);
    SzDirections->Add(BtnTurnBack, 0, wxEXPAND, 0);
    SzDirections->Add(BtnEnableSwitch, 0, wxEXPAND, 0);
    SzDirections->Add(BtnGo, 0, wxEXPAND, 0);
    SzDirections->Add(BtnWait, 0, wxEXPAND, 0);
    SzDirections->Add(BtnDisableSwitch, 0, wxEXPAND, 0);
    SzDirections->Add(BtnSpeedUp, 0, wxEXPAND, 0);
    SzDirections->Add(BtnFrequencyUp, 0, wxEXPAND, 0);
    SzDirections->Add(BtnChangeGraphic, 0, wxEXPAND, 0);
    SzDirections->Add(BtnSpeedDown, 0, wxEXPAND, 0);
    SzDirections->Add(BtnFrequencyDown, 0, wxEXPAND, 0);
    SzDirections->Add(BtnSoundEffect, 0, wxEXPAND, 0);
    SzRight02->Add(SzDirections, 1, wxLEFT|wxEXPAND, 1);
    SzUp->Add(SzRight02, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandWait::DlgEventCommandWait(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandWait::DlgEventCommandWait
    SzTimeRight_staticbox = new wxStaticBox(this, -1, _("Wait time"));
    SpinTime = new wxSpinCtrl(this, wxID_ANY, wxT("10"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    LblTime = new wxStaticText(this, wxID_ANY, _("x0.1 sec."));
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandWait::set_properties()
{
    // begin wxGlade: DlgEventCommandWait::set_properties
    SetTitle(_("Wait"));
    SpinTime->SetSize(wxSize(75, -1));
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandWait::do_layout()
{
    // begin wxGlade: DlgEventCommandWait::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzTimeRight = new wxStaticBoxSizer(SzTimeRight_staticbox, wxHORIZONTAL);
    SzTimeRight->Add(SpinTime, 1, wxRIGHT, 1);
    SzTimeRight->Add(LblTime, 0, wxLEFT, 1);
    SzUp->Add(SzTimeRight, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandPlayMusic::DlgEventCommandPlayMusic(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandPlayMusic::DlgEventCommandPlayMusic
    SzVolumeUp_staticbox = new wxStaticBox(this, -1, _("Volume"));
    SzTempoUp_staticbox = new wxStaticBox(this, -1, _("Tempo"));
    SzBalanceUp_staticbox = new wxStaticBox(this, -1, _("Balance"));
    SzFadeUp_staticbox = new wxStaticBox(this, -1, _("Fade in"));
    const wxString ListMusic_choices[] = {
        
    };
    ListMusic = new wxListBox(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, ListMusic_choices, 0);
    SliderFade = new wxSlider(this, wxID_ANY, 0, 0, 10, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL|wxSL_AUTOTICKS);
    LblFade01 = new wxStaticText(this, wxID_ANY, _("None"));
    LblFade02 = new wxStaticText(this, wxID_ANY, _("5 sec."));
    LblFade03 = new wxStaticText(this, wxID_ANY, _("10 sec."));
    SliderVolume = new wxSlider(this, wxID_ANY, 10, 0, 10, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL|wxSL_AUTOTICKS);
    LblVolume01 = new wxStaticText(this, wxID_ANY, _("0%"));
    LblVolume02 = new wxStaticText(this, wxID_ANY, _("50%"));
    LblVolume03 = new wxStaticText(this, wxID_ANY, _("100%"));
    SliderTempo = new wxSlider(this, wxID_ANY, 5, 0, 10, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL|wxSL_AUTOTICKS);
    LblTempo01 = new wxStaticText(this, wxID_ANY, _("50%"));
    LblTempo02 = new wxStaticText(this, wxID_ANY, _("100%"));
    LblTempo03 = new wxStaticText(this, wxID_ANY, _("150%"));
    SliderBalance = new wxSlider(this, wxID_ANY, 0, -5, 5, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL|wxSL_AUTOTICKS);
    LblBalance01 = new wxStaticText(this, wxID_ANY, _("Left"));
    LblBalance02 = new wxStaticText(this, wxID_ANY, _("Center"));
    LblBalance03 = new wxStaticText(this, wxID_ANY, _("Right"));
    BtnPlayMusic = new wxButton(this, wxID_ANY, _("Play"));
    BtnStopMusic = new wxButton(this, wxID_ANY, _("Stop"));
    StaticLine = new wxStaticLine(this, wxID_ANY);
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandPlayMusic::set_properties()
{
    // begin wxGlade: DlgEventCommandPlayMusic::set_properties
    SetTitle(_("Play music"));
    ListMusic->SetSize(wxDLG_UNIT(ListMusic, wxSize(100,-1)));
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandPlayMusic::do_layout()
{
    // begin wxGlade: DlgEventCommandPlayMusic::do_layout
    wxBoxSizer* SzUp01 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzRight = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzUp02 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzPlayRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzBalanceUp = new wxStaticBoxSizer(SzBalanceUp_staticbox, wxVERTICAL);
    wxBoxSizer* SzBalanceRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzTempoUp = new wxStaticBoxSizer(SzTempoUp_staticbox, wxVERTICAL);
    wxBoxSizer* SzTempoRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzVolumeUp = new wxStaticBoxSizer(SzVolumeUp_staticbox, wxVERTICAL);
    wxBoxSizer* SzVolumeRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzFadeUp = new wxStaticBoxSizer(SzFadeUp_staticbox, wxVERTICAL);
    wxBoxSizer* SzFadeRight = new wxBoxSizer(wxHORIZONTAL);
    SzRight->Add(ListMusic, 1, wxALL|wxEXPAND, 1);
    SzFadeUp->Add(SliderFade, 0, wxEXPAND, 0);
    SzFadeRight->Add(LblFade01, 0, wxRIGHT, 1);
    SzFadeRight->Add(0, 0, 1, wxEXPAND, 0);
    SzFadeRight->Add(LblFade02, 0, wxLEFT|wxRIGHT, 1);
    SzFadeRight->Add(0, 0, 1, wxEXPAND, 0);
    SzFadeRight->Add(LblFade03, 0, wxLEFT, 1);
    SzFadeUp->Add(SzFadeRight, 0, wxEXPAND, 0);
    SzUp02->Add(SzFadeUp, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    SzVolumeUp->Add(SliderVolume, 0, wxEXPAND, 0);
    SzVolumeRight->Add(LblVolume01, 0, wxRIGHT, 1);
    SzVolumeRight->Add(0, 0, 1, wxEXPAND, 0);
    SzVolumeRight->Add(LblVolume02, 0, wxLEFT|wxRIGHT, 1);
    SzVolumeRight->Add(0, 0, 1, wxEXPAND, 0);
    SzVolumeRight->Add(LblVolume03, 0, wxLEFT, 1);
    SzVolumeUp->Add(SzVolumeRight, 0, wxEXPAND, 0);
    SzUp02->Add(SzVolumeUp, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    SzTempoUp->Add(SliderTempo, 0, wxEXPAND, 0);
    SzTempoRight->Add(LblTempo01, 0, wxRIGHT, 1);
    SzTempoRight->Add(0, 0, 1, wxEXPAND, 0);
    SzTempoRight->Add(LblTempo02, 0, wxLEFT|wxRIGHT, 1);
    SzTempoRight->Add(0, 0, 1, wxEXPAND, 0);
    SzTempoRight->Add(LblTempo03, 0, wxLEFT, 1);
    SzTempoUp->Add(SzTempoRight, 0, wxEXPAND, 0);
    SzUp02->Add(SzTempoUp, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    SzBalanceUp->Add(SliderBalance, 0, wxEXPAND, 0);
    SzBalanceRight->Add(LblBalance01, 0, wxRIGHT, 1);
    SzBalanceRight->Add(0, 0, 1, wxEXPAND, 0);
    SzBalanceRight->Add(LblBalance02, 0, wxLEFT|wxRIGHT, 1);
    SzBalanceRight->Add(0, 0, 1, wxEXPAND, 0);
    SzBalanceRight->Add(LblBalance03, 0, wxLEFT, 1);
    SzBalanceUp->Add(SzBalanceRight, 0, wxEXPAND, 0);
    SzUp02->Add(SzBalanceUp, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzPlayRight->Add(BtnPlayMusic, 0, wxALL, 1);
    SzPlayRight->Add(BtnStopMusic, 0, wxALL, 1);
    SzUp02->Add(SzPlayRight, 0, wxEXPAND, 0);
    SzRight->Add(SzUp02, 0, wxEXPAND, 0);
    SzUp01->Add(SzRight, 1, wxEXPAND, 0);
    SzUp01->Add(StaticLine, 0, wxALL|wxEXPAND, 1);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp01->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp01);
    SzUp01->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandFadeMusic::DlgEventCommandFadeMusic(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandFadeMusic::DlgEventCommandFadeMusic
    SzRight_staticbox = new wxStaticBox(this, -1, _("Fade time"));
    SliderFade = new wxSlider(this, wxID_ANY, 5, 0, 20, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL|wxSL_AUTOTICKS);
    LblFade01 = new wxStaticText(this, wxID_ANY, _("0 sec"));
    LblFade02 = new wxStaticText(this, wxID_ANY, _("5 sec"));
    LblFade03 = new wxStaticText(this, wxID_ANY, _("10 sec"));
    LblFade04 = new wxStaticText(this, wxID_ANY, _("15 sec"));
    LblFade05 = new wxStaticText(this, wxID_ANY, _("20 sec"));
    BtnFade = new wxButton(this, wxID_ANY, _("Fade"));
    BtnPlay = new wxButton(this, wxID_ANY, _("Play"));
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandFadeMusic::set_properties()
{
    // begin wxGlade: DlgEventCommandFadeMusic::set_properties
    SetTitle(_("Fade music"));
    SliderFade->SetSize(wxSize(200, -1));
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandFadeMusic::do_layout()
{
    // begin wxGlade: DlgEventCommandFadeMusic::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzRight = new wxStaticBoxSizer(SzRight_staticbox, wxHORIZONTAL);
    wxBoxSizer* SzFadeUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzFadeRight = new wxBoxSizer(wxHORIZONTAL);
    SzFadeUp->Add(SliderFade, 0, wxEXPAND, 0);
    SzFadeRight->Add(LblFade01, 0, wxRIGHT, 1);
    SzFadeRight->Add(0, 0, 1, wxEXPAND, 0);
    SzFadeRight->Add(LblFade02, 0, wxLEFT|wxRIGHT, 1);
    SzFadeRight->Add(0, 0, 1, wxEXPAND, 0);
    SzFadeRight->Add(LblFade03, 0, wxLEFT|wxRIGHT, 1);
    SzFadeRight->Add(0, 0, 1, wxEXPAND, 0);
    SzFadeRight->Add(LblFade04, 0, wxLEFT|wxRIGHT, 1);
    SzFadeRight->Add(0, 0, 1, wxEXPAND, 0);
    SzFadeRight->Add(LblFade05, 0, wxLEFT, 1);
    SzFadeUp->Add(SzFadeRight, 0, wxEXPAND, 0);
    SzRight->Add(SzFadeUp, 1, wxEXPAND, 0);
    SzRight->Add(BtnFade, 0, wxRIGHT, 1);
    SzRight->Add(BtnPlay, 0, wxLEFT, 1);
    SzUp->Add(SzRight, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND|wxALIGN_BOTTOM, 1);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandPlaySound::DlgEventCommandPlaySound(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandPlaySound::DlgEventCommandPlaySound
    SzVolumeUp_staticbox = new wxStaticBox(this, -1, _("Volume"));
    SzTempoUp_staticbox = new wxStaticBox(this, -1, _("Tempo"));
    SzBalanceUp_staticbox = new wxStaticBox(this, -1, _("Balance"));
    SzFadeUp_staticbox = new wxStaticBox(this, -1, _("Fade in"));
    const wxString ListMusic_choices[] = {
        
    };
    ListMusic = new wxListBox(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, ListMusic_choices, 0);
    SliderFade = new wxSlider(this, wxID_ANY, 0, 0, 10, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL|wxSL_AUTOTICKS);
    LblFade01 = new wxStaticText(this, wxID_ANY, _("None"));
    LblFade02 = new wxStaticText(this, wxID_ANY, _("5 sec."));
    LblFade03 = new wxStaticText(this, wxID_ANY, _("10 sec."));
    SliderVolume = new wxSlider(this, wxID_ANY, 10, 0, 10, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL|wxSL_AUTOTICKS);
    LblVolume01 = new wxStaticText(this, wxID_ANY, _("0%"));
    LblVolume02 = new wxStaticText(this, wxID_ANY, _("50%"));
    LblVolume03 = new wxStaticText(this, wxID_ANY, _("100%"));
    SliderTempo = new wxSlider(this, wxID_ANY, 5, 0, 10, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL|wxSL_AUTOTICKS);
    LblTempo01 = new wxStaticText(this, wxID_ANY, _("50%"));
    LblTempo02 = new wxStaticText(this, wxID_ANY, _("100%"));
    LblTempo03 = new wxStaticText(this, wxID_ANY, _("150%"));
    SliderBalance = new wxSlider(this, wxID_ANY, 0, -5, 5, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL|wxSL_AUTOTICKS);
    LblBalance01 = new wxStaticText(this, wxID_ANY, _("Left"));
    LblBalance02 = new wxStaticText(this, wxID_ANY, _("Center"));
    LblBalance03 = new wxStaticText(this, wxID_ANY, _("Right"));
    BtnPlayMusic = new wxButton(this, wxID_ANY, _("Play"));
    BtnStopMusic = new wxButton(this, wxID_ANY, _("Stop"));
    StaticLine = new wxStaticLine(this, wxID_ANY);
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandPlaySound::set_properties()
{
    // begin wxGlade: DlgEventCommandPlaySound::set_properties
    SetTitle(_("Play sound"));
    ListMusic->SetSize(wxDLG_UNIT(ListMusic, wxSize(100,-1)));
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandPlaySound::do_layout()
{
    // begin wxGlade: DlgEventCommandPlaySound::do_layout
    wxBoxSizer* SzUp01 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzRight = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzUp02 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzPlayRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzBalanceUp = new wxStaticBoxSizer(SzBalanceUp_staticbox, wxVERTICAL);
    wxBoxSizer* SzBalanceRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzTempoUp = new wxStaticBoxSizer(SzTempoUp_staticbox, wxVERTICAL);
    wxBoxSizer* SzTempoRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzVolumeUp = new wxStaticBoxSizer(SzVolumeUp_staticbox, wxVERTICAL);
    wxBoxSizer* SzVolumeRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzFadeUp = new wxStaticBoxSizer(SzFadeUp_staticbox, wxVERTICAL);
    wxBoxSizer* SzFadeRight = new wxBoxSizer(wxHORIZONTAL);
    SzRight->Add(ListMusic, 1, wxALL|wxEXPAND, 1);
    SzFadeUp->Add(SliderFade, 0, wxEXPAND, 0);
    SzFadeRight->Add(LblFade01, 0, wxRIGHT, 1);
    SzFadeRight->Add(0, 0, 1, wxEXPAND, 0);
    SzFadeRight->Add(LblFade02, 0, wxLEFT|wxRIGHT, 1);
    SzFadeRight->Add(0, 0, 1, wxEXPAND, 0);
    SzFadeRight->Add(LblFade03, 0, wxLEFT, 1);
    SzFadeUp->Add(SzFadeRight, 0, wxEXPAND, 0);
    SzUp02->Add(SzFadeUp, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    SzVolumeUp->Add(SliderVolume, 0, wxEXPAND, 0);
    SzVolumeRight->Add(LblVolume01, 0, wxRIGHT, 1);
    SzVolumeRight->Add(0, 0, 1, wxEXPAND, 0);
    SzVolumeRight->Add(LblVolume02, 0, wxLEFT|wxRIGHT, 1);
    SzVolumeRight->Add(0, 0, 1, wxEXPAND, 0);
    SzVolumeRight->Add(LblVolume03, 0, wxLEFT, 1);
    SzVolumeUp->Add(SzVolumeRight, 0, wxEXPAND, 0);
    SzUp02->Add(SzVolumeUp, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    SzTempoUp->Add(SliderTempo, 0, wxEXPAND, 0);
    SzTempoRight->Add(LblTempo01, 0, wxRIGHT, 1);
    SzTempoRight->Add(0, 0, 1, wxEXPAND, 0);
    SzTempoRight->Add(LblTempo02, 0, wxLEFT|wxRIGHT, 1);
    SzTempoRight->Add(0, 0, 1, wxEXPAND, 0);
    SzTempoRight->Add(LblTempo03, 0, wxLEFT, 1);
    SzTempoUp->Add(SzTempoRight, 0, wxEXPAND, 0);
    SzUp02->Add(SzTempoUp, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    SzBalanceUp->Add(SliderBalance, 0, wxEXPAND, 0);
    SzBalanceRight->Add(LblBalance01, 0, wxRIGHT, 1);
    SzBalanceRight->Add(0, 0, 1, wxEXPAND, 0);
    SzBalanceRight->Add(LblBalance02, 0, wxLEFT|wxRIGHT, 1);
    SzBalanceRight->Add(0, 0, 1, wxEXPAND, 0);
    SzBalanceRight->Add(LblBalance03, 0, wxLEFT, 1);
    SzBalanceUp->Add(SzBalanceRight, 0, wxEXPAND, 0);
    SzUp02->Add(SzBalanceUp, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzPlayRight->Add(BtnPlayMusic, 0, wxALL, 1);
    SzPlayRight->Add(BtnStopMusic, 0, wxALL, 1);
    SzUp02->Add(SzPlayRight, 0, wxEXPAND, 0);
    SzRight->Add(SzUp02, 0, wxEXPAND, 0);
    SzUp01->Add(SzRight, 1, wxEXPAND, 0);
    SzUp01->Add(StaticLine, 0, wxALL|wxEXPAND, 1);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp01->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp01);
    SzUp01->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandPlayVideo::DlgEventCommandPlayVideo(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandPlayVideo::DlgEventCommandPlayVideo
    SzSizeRight_staticbox = new wxStaticBox(this, -1, _("Size in window"));
    SzMoveUp01_staticbox = new wxStaticBox(this, -1, _("Move to position (coordinates)"));
    SzVideoRight02_staticbox = new wxStaticBox(this, -1, _("Video file"));
    TextVideo = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    BtnVideo = new wxButton(this, wxID_ANY, _("..."));
    SpinSizeX = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    LblSize = new wxStaticText(this, wxID_ANY, _("X"));
    SpinSizeY = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    RadioSpecifyPosition = new wxRadioButton(this, wxID_ANY, _("Specify"));
    LblPosition01 = new wxStaticText(this, wxID_ANY, _("X:"));
    SpinSpecifyPositionX = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    LblPosition02 = new wxStaticText(this, wxID_ANY, _("Y:"));
    SpinSpecifyPositionY = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    RadioVarPosition = new wxRadioButton(this, wxID_ANY, _("Variable"));
    LblPosition03 = new wxStaticText(this, wxID_ANY, _("X:"));
    TextVarPositionX = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    BtnVarPositionX = new wxButton(this, wxID_ANY, _("..."));
    LblPosition04 = new wxStaticText(this, wxID_ANY, _("Y:"));
    TextVarPositionY = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    BtnVarPositionY = new wxButton(this, wxID_ANY, _("..."));
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandPlayVideo::set_properties()
{
    // begin wxGlade: DlgEventCommandPlayVideo::set_properties
    SetTitle(_("Play video"));
    TextVideo->SetSize(wxSize(75, -1));
    BtnVideo->SetSize(wxSize(25, -1));
    SpinSizeX->SetSize(wxSize(75, -1));
    SpinSizeY->SetSize(wxSize(75, -1));
    SpinSpecifyPositionX->SetSize(wxSize(75, -1));
    SpinSpecifyPositionY->SetSize(wxSize(75, -1));
    TextVarPositionX->SetSize(wxSize(75, -1));
    BtnVarPositionX->SetSize(wxSize(25, -1));
    TextVarPositionY->SetSize(wxSize(75, -1));
    BtnVarPositionY->SetSize(wxSize(25, -1));
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandPlayVideo::do_layout()
{
    // begin wxGlade: DlgEventCommandPlayVideo::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzMoveUp01 = new wxStaticBoxSizer(SzMoveUp01_staticbox, wxVERTICAL);
    wxFlexGridSizer* SzMoveUp02 = new wxFlexGridSizer(4, 3, 2, 2);
    wxBoxSizer* SzVarPosition02 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzVarPosition01 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzVideoRight01 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzSizeRight = new wxStaticBoxSizer(SzSizeRight_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* SzVideoRight02 = new wxStaticBoxSizer(SzVideoRight02_staticbox, wxHORIZONTAL);
    SzVideoRight02->Add(TextVideo, 1, wxALIGN_CENTER_VERTICAL, 0);
    SzVideoRight02->Add(BtnVideo, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzVideoRight01->Add(SzVideoRight02, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    SzSizeRight->Add(SpinSizeX, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzSizeRight->Add(LblSize, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzSizeRight->Add(SpinSizeY, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    SzVideoRight01->Add(SzSizeRight, 0, wxEXPAND, 0);
    SzUp->Add(SzVideoRight01, 0, wxEXPAND, 0);
    SzMoveUp02->Add(RadioSpecifyPosition, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    SzMoveUp02->Add(LblPosition01, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzMoveUp02->Add(SpinSpecifyPositionX, 1, wxRIGHT|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    SzMoveUp02->Add(0, 0, 1, wxEXPAND, 0);
    SzMoveUp02->Add(LblPosition02, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzMoveUp02->Add(SpinSpecifyPositionY, 1, wxRIGHT|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    SzMoveUp02->Add(RadioVarPosition, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    SzMoveUp02->Add(LblPosition03, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzVarPosition01->Add(TextVarPositionX, 1, wxALIGN_CENTER_VERTICAL, 0);
    SzVarPosition01->Add(BtnVarPositionX, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzMoveUp02->Add(SzVarPosition01, 1, wxEXPAND, 0);
    SzMoveUp02->Add(0, 0, 1, wxEXPAND, 0);
    SzMoveUp02->Add(LblPosition04, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzVarPosition02->Add(TextVarPositionY, 1, wxALIGN_CENTER_VERTICAL, 0);
    SzVarPosition02->Add(BtnVarPositionY, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzMoveUp02->Add(SzVarPosition02, 1, wxEXPAND, 0);
    SzMoveUp02->AddGrowableCol(2);
    SzMoveUp01->Add(SzMoveUp02, 1, wxBOTTOM|wxEXPAND, 1);
    SzUp->Add(SzMoveUp01, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandKeyAssignment::DlgEventCommandKeyAssignment(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandKeyAssignment::DlgEventCommandKeyAssignment
    SzOptions_staticbox = new wxStaticBox(this, -1, _("Options"));
    SzKeyRight_staticbox = new wxStaticBox(this, -1, _("Keys to assign"));
    SzVarRight_staticbox = new wxStaticBox(this, -1, _("Store value in variable"));
    TextVar = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    BtnVar = new wxButton(this, wxID_ANY, _("..."));
    ChkWait = new wxCheckBox(this, wxID_ANY, _("Wait for key press"));
    ChkKeyDown = new wxCheckBox(this, wxID_ANY, _("Down (1)"));
    ChkKeyDecision = new wxCheckBox(this, wxID_ANY, _("Decision key (5)"));
    ChkKeyLeft = new wxCheckBox(this, wxID_ANY, _("Left (2)"));
    ChkKeyCancel = new wxCheckBox(this, wxID_ANY, _("Cancel key (6)"));
    ChkKeyRight = new wxCheckBox(this, wxID_ANY, _("Right (3)"));
    ChkKeyShift = new wxCheckBox(this, wxID_ANY, _("Shift key (7)"));
    ChkKeyUp = new wxCheckBox(this, wxID_ANY, _("Up (4)"));
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandKeyAssignment::set_properties()
{
    // begin wxGlade: DlgEventCommandKeyAssignment::set_properties
    SetTitle(_("Key assignment"));
    TextVar->SetSize(wxSize(75, -1));
    BtnVar->SetSize(wxSize(25, -1));
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandKeyAssignment::do_layout()
{
    // begin wxGlade: DlgEventCommandKeyAssignment::do_layout
    wxBoxSizer* SzUp01 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzKeyRight = new wxStaticBoxSizer(SzKeyRight_staticbox, wxHORIZONTAL);
    wxGridSizer* SzUp03 = new wxGridSizer(4, 2, 2, 2);
    wxBoxSizer* SzUp02 = new wxBoxSizer(wxVERTICAL);
    wxStaticBoxSizer* SzOptions = new wxStaticBoxSizer(SzOptions_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* SzVarRight = new wxStaticBoxSizer(SzVarRight_staticbox, wxHORIZONTAL);
    SzVarRight->Add(TextVar, 1, wxALIGN_CENTER_VERTICAL, 0);
    SzVarRight->Add(BtnVar, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzUp02->Add(SzVarRight, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    SzOptions->Add(ChkWait, 0, 0, 0);
    SzUp02->Add(SzOptions, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzRight->Add(SzUp02, 1, wxEXPAND, 0);
    SzUp03->Add(ChkKeyDown, 0, 0, 0);
    SzUp03->Add(ChkKeyDecision, 0, 0, 0);
    SzUp03->Add(ChkKeyLeft, 0, 0, 0);
    SzUp03->Add(ChkKeyCancel, 0, 0, 0);
    SzUp03->Add(ChkKeyRight, 0, 0, 0);
    SzUp03->Add(ChkKeyShift, 0, 0, 0);
    SzUp03->Add(ChkKeyUp, 0, 0, 0);
    SzUp03->Add(0, 0, 1, wxEXPAND, 0);
    SzKeyRight->Add(SzUp03, 1, 0, 0);
    SzRight->Add(SzKeyRight, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzUp01->Add(SzRight, 1, wxEXPAND, 0);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp01->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp01);
    SzUp01->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandChangeMapTileset::DlgEventCommandChangeMapTileset(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandChangeMapTileset::DlgEventCommandChangeMapTileset
    SzRight_staticbox = new wxStaticBox(this, -1, _("ChipSet"));
    const wxString ChoiceChipSet_choices[] = {
        
    };
    ChoiceChipSet = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, ChoiceChipSet_choices, 0);
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandChangeMapTileset::set_properties()
{
    // begin wxGlade: DlgEventCommandChangeMapTileset::set_properties
    SetTitle(_("Change map tileset"));
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandChangeMapTileset::do_layout()
{
    // begin wxGlade: DlgEventCommandChangeMapTileset::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzRight = new wxStaticBoxSizer(SzRight_staticbox, wxHORIZONTAL);
    SzRight->Add(ChoiceChipSet, 1, 0, 0);
    SzUp->Add(SzRight, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandChangeMapBackground::DlgEventCommandChangeMapBackground(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandChangeMapBackground::DlgEventCommandChangeMapBackground
    SzOptionsUp_staticbox = new wxStaticBox(this, -1, _("Options"));
    SzBackground_staticbox = new wxStaticBox(this, -1, _("Background"));
    BitmapBackground = new wxStaticBitmap(this, wxID_ANY, wxBitmap(wxT("background.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    BtnBackground = new wxButton(this, wxID_ANY, _("Select..."));
    ChkHorizScroll = new wxCheckBox(this, wxID_ANY, _("Horizontal scroll"));
    ChkHorizScrollAutomatic = new wxCheckBox(this, wxID_ANY, _("Automatic"));
    LblHorizScrollSpeed = new wxStaticText(this, wxID_ANY, _("Speed"));
    SpinHorizScrollSpeed = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    StaticLine = new wxStaticLine(this, wxID_ANY);
    ChkVerScroll = new wxCheckBox(this, wxID_ANY, _("Vertical scroll"));
    ChkVerScrollAutomatic = new wxCheckBox(this, wxID_ANY, _("Automatic"));
    LblVerScrollSpeed = new wxStaticText(this, wxID_ANY, _("Speed"));
    SpinVerScrollSpeed = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandChangeMapBackground::set_properties()
{
    // begin wxGlade: DlgEventCommandChangeMapBackground::set_properties
    SetTitle(_("Change map background"));
    BitmapBackground->SetSize(wxSize(160, 120));
    SpinHorizScrollSpeed->SetSize(wxSize(60, -1));
    SpinVerScrollSpeed->SetSize(wxSize(60, -1));
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandChangeMapBackground::do_layout()
{
    // begin wxGlade: DlgEventCommandChangeMapBackground::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzOptionsUp = new wxStaticBoxSizer(SzOptionsUp_staticbox, wxVERTICAL);
    wxBoxSizer* SzOptionsRight04 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzOptionsRight03 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzOptionsRight02 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzOptionsRight01 = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzBackground = new wxStaticBoxSizer(SzBackground_staticbox, wxVERTICAL);
    SzBackground->Add(BitmapBackground, 0, wxBOTTOM, 1);
    SzBackground->Add(BtnBackground, 0, wxTOP|wxALIGN_RIGHT, 1);
    SzRight->Add(SzBackground, 0, wxRIGHT|wxEXPAND, 1);
    SzOptionsUp->Add(0, 0, 1, wxEXPAND, 0);
    SzOptionsUp->Add(ChkHorizScroll, 0, wxBOTTOM|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    SzOptionsRight01->Add(15, 15, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    SzOptionsRight01->Add(ChkHorizScrollAutomatic, 1, wxTOP|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    SzOptionsUp->Add(SzOptionsRight01, 0, wxEXPAND, 0);
    SzOptionsRight02->Add(LblHorizScrollSpeed, 0, wxRIGHT|wxTOP|wxALIGN_CENTER_VERTICAL, 1);
    SzOptionsRight02->Add(SpinHorizScrollSpeed, 1, wxLEFT|wxTOP|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    SzOptionsUp->Add(SzOptionsRight02, 0, wxEXPAND, 0);
    SzOptionsUp->Add(0, 0, 1, wxEXPAND, 0);
    SzOptionsUp->Add(StaticLine, 0, wxTOP|wxBOTTOM|wxEXPAND, 1);
    SzOptionsUp->Add(0, 0, 1, wxEXPAND, 0);
    SzOptionsUp->Add(ChkVerScroll, 0, wxTOP|wxBOTTOM|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    SzOptionsRight03->Add(15, 15, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    SzOptionsRight03->Add(ChkVerScrollAutomatic, 1, wxTOP|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    SzOptionsUp->Add(SzOptionsRight03, 0, wxEXPAND, 0);
    SzOptionsRight04->Add(LblVerScrollSpeed, 0, wxRIGHT|wxTOP|wxALIGN_CENTER_VERTICAL, 1);
    SzOptionsRight04->Add(SpinVerScrollSpeed, 1, wxLEFT|wxTOP, 1);
    SzOptionsUp->Add(SzOptionsRight04, 0, wxEXPAND, 0);
    SzOptionsUp->Add(0, 0, 1, wxEXPAND, 0);
    SzRight->Add(SzOptionsUp, 1, wxLEFT|wxEXPAND, 1);
    SzUp->Add(SzRight, 1, wxEXPAND, 0);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandChangeEncounterRate::DlgEventCommandChangeEncounterRate(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandChangeEncounterRate::DlgEventCommandChangeEncounterRate
    SzStepsRight_staticbox = new wxStaticBox(this, -1, _("Number of steps"));
    SpinSteps = new wxSpinCtrl(this, wxID_ANY, wxT("10"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandChangeEncounterRate::set_properties()
{
    // begin wxGlade: DlgEventCommandChangeEncounterRate::set_properties
    SetTitle(_("Change encounter rate"));
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandChangeEncounterRate::do_layout()
{
    // begin wxGlade: DlgEventCommandChangeEncounterRate::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzStepsRight = new wxStaticBoxSizer(SzStepsRight_staticbox, wxHORIZONTAL);
    SzStepsRight->Add(SpinSteps, 1, 0, 1);
    SzUp->Add(SzStepsRight, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandChangeTile::DlgEventCommandChangeTile(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandChangeTile::DlgEventCommandChangeTile
    SzReplacedRight_staticbox = new wxStaticBox(this, -1, _("Replace with"));
    SzOriginalRight_staticbox = new wxStaticBox(this, -1, _("Tile to replace"));
    const wxString RadioBoxOptions_choices[] = {
        _("Lower"),
        _("Upper")
    };
    RadioBoxOptions = new wxRadioBox(this, wxID_ANY, _("Tile type"), wxDefaultPosition, wxDefaultSize, 2, RadioBoxOptions_choices, 1, wxRA_SPECIFY_ROWS);
    BitmapOriginal = new wxStaticBitmap(this, wxID_ANY, wxBitmap(wxT("tile.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    BtnOriginal = new wxButton(this, wxID_ANY, _("Select..."));
    BitmapReplaced = new wxStaticBitmap(this, wxID_ANY, wxBitmap(wxT("tile.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    BtnReplaced = new wxButton(this, wxID_ANY, _("Select..."));
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandChangeTile::set_properties()
{
    // begin wxGlade: DlgEventCommandChangeTile::set_properties
    SetTitle(_("Change tile"));
    RadioBoxOptions->SetSelection(0);
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandChangeTile::do_layout()
{
    // begin wxGlade: DlgEventCommandChangeTile::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzOptionsRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzReplacedRight = new wxStaticBoxSizer(SzReplacedRight_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* SzOriginalRight = new wxStaticBoxSizer(SzOriginalRight_staticbox, wxHORIZONTAL);
    SzUp->Add(RadioBoxOptions, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    SzOriginalRight->Add(BitmapOriginal, 0, wxRIGHT, 1);
    SzOriginalRight->Add(BtnOriginal, 0, wxLEFT, 1);
    SzOptionsRight->Add(SzOriginalRight, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzReplacedRight->Add(BitmapReplaced, 0, wxRIGHT, 1);
    SzReplacedRight->Add(BtnReplaced, 0, wxLEFT, 1);
    SzOptionsRight->Add(SzReplacedRight, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzUp->Add(SzOptionsRight, 1, wxEXPAND, 0);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandChangeTeleportPlace::DlgEventCommandChangeTeleportPlace(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandChangeTeleportPlace::DlgEventCommandChangeTeleportPlace
    SzSwitch_staticbox = new wxStaticBox(this, -1, _("Enable switch after teleporting"));
    SzTeleportRight_staticbox = new wxStaticBox(this, -1, _("Teleport position"));
    const wxString RadioBoxOptions_choices[] = {
        _("Add teleport"),
        _("Remove teleport")
    };
    RadioBoxOptions = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 2, RadioBoxOptions_choices, 1, wxRA_SPECIFY_ROWS);
    TextTeleport = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    BtnTeleport = new wxButton(this, wxID_ANY, _("..."));
    ChkSwitch = new wxCheckBox(this, wxID_ANY, _("Enable"));
    TextSwitch = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    BtnSwitch = new wxButton(this, wxID_ANY, _("..."));
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandChangeTeleportPlace::set_properties()
{
    // begin wxGlade: DlgEventCommandChangeTeleportPlace::set_properties
    SetTitle(_("Change teleport place"));
    RadioBoxOptions->SetSelection(0);
    TextTeleport->SetSize(wxSize(125, -1));
    BtnTeleport->SetSize(wxSize(25, -1));
    TextSwitch->SetSize(wxSize(125, -1));
    BtnSwitch->SetSize(wxSize(25, -1));
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandChangeTeleportPlace::do_layout()
{
    // begin wxGlade: DlgEventCommandChangeTeleportPlace::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzSwitch = new wxStaticBoxSizer(SzSwitch_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* SzTeleportRight = new wxStaticBoxSizer(SzTeleportRight_staticbox, wxHORIZONTAL);
    SzUp->Add(RadioBoxOptions, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    SzTeleportRight->Add(TextTeleport, 1, wxALIGN_CENTER_VERTICAL, 0);
    SzTeleportRight->Add(BtnTeleport, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzUp->Add(SzTeleportRight, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    SzSwitch->Add(ChkSwitch, 0, wxRIGHT, 1);
    SzSwitch->Add(TextSwitch, 1, wxLEFT, 1);
    SzSwitch->Add(BtnSwitch, 0, 0, 0);
    SzUp->Add(SzSwitch, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandTeleportPermissions::DlgEventCommandTeleportPermissions(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandTeleportPermissions::DlgEventCommandTeleportPermissions
    const wxString RadioBoxOptions_choices[] = {
        _("Forbid teleporting"),
        _("Alllow teleporting")
    };
    RadioBoxOptions = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 2, RadioBoxOptions_choices, 1, wxRA_SPECIFY_ROWS);
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandTeleportPermissions::set_properties()
{
    // begin wxGlade: DlgEventCommandTeleportPermissions::set_properties
    SetTitle(_("Teleport permissions"));
    RadioBoxOptions->SetSelection(0);
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandTeleportPermissions::do_layout()
{
    // begin wxGlade: DlgEventCommandTeleportPermissions::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    SzUp->Add(RadioBoxOptions, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandChangeEscapePlace::DlgEventCommandChangeEscapePlace(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandChangeEscapePlace::DlgEventCommandChangeEscapePlace
    SzSwitch_staticbox = new wxStaticBox(this, -1, _("Enable switch after escape"));
    SzEscape_staticbox = new wxStaticBox(this, -1, _("Escape position"));
    TextEscape = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    BtnEscape = new wxButton(this, wxID_ANY, _("..."));
    ChkSwitch = new wxCheckBox(this, wxID_ANY, _("Enable"));
    TextSwitch = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    BtnSwitch = new wxButton(this, wxID_ANY, _("..."));
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandChangeEscapePlace::set_properties()
{
    // begin wxGlade: DlgEventCommandChangeEscapePlace::set_properties
    SetTitle(_("Change escape place"));
    TextEscape->SetSize(wxSize(125, -1));
    BtnEscape->SetSize(wxSize(25, -1));
    TextSwitch->SetSize(wxSize(125, -1));
    BtnSwitch->SetSize(wxSize(25, -1));
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandChangeEscapePlace::do_layout()
{
    // begin wxGlade: DlgEventCommandChangeEscapePlace::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzSwitch = new wxStaticBoxSizer(SzSwitch_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* SzEscape = new wxStaticBoxSizer(SzEscape_staticbox, wxHORIZONTAL);
    SzEscape->Add(TextEscape, 1, wxALIGN_CENTER_VERTICAL, 0);
    SzEscape->Add(BtnEscape, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzUp->Add(SzEscape, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    SzSwitch->Add(ChkSwitch, 0, wxRIGHT, 1);
    SzSwitch->Add(TextSwitch, 1, wxLEFT, 1);
    SzSwitch->Add(BtnSwitch, 0, 0, 0);
    SzUp->Add(SzSwitch, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandEscapePermissions::DlgEventCommandEscapePermissions(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandEscapePermissions::DlgEventCommandEscapePermissions
    const wxString RadioBoxOptions_choices[] = {
        _("Forbid escape"),
        _("Alllow escape")
    };
    RadioBoxOptions = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 2, RadioBoxOptions_choices, 1, wxRA_SPECIFY_ROWS);
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandEscapePermissions::set_properties()
{
    // begin wxGlade: DlgEventCommandEscapePermissions::set_properties
    SetTitle(_("Escape permissions"));
    RadioBoxOptions->SetSelection(0);
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandEscapePermissions::do_layout()
{
    // begin wxGlade: DlgEventCommandEscapePermissions::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    SzUp->Add(RadioBoxOptions, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandSavePermissions::DlgEventCommandSavePermissions(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandSavePermissions::DlgEventCommandSavePermissions
    const wxString RadioBoxOptions_choices[] = {
        _("Forbid saving"),
        _("Alllow saving")
    };
    RadioBoxOptions = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 2, RadioBoxOptions_choices, 1, wxRA_SPECIFY_ROWS);
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandSavePermissions::set_properties()
{
    // begin wxGlade: DlgEventCommandSavePermissions::set_properties
    SetTitle(_("Save permissions"));
    RadioBoxOptions->SetSelection(0);
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandSavePermissions::do_layout()
{
    // begin wxGlade: DlgEventCommandSavePermissions::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    SzUp->Add(RadioBoxOptions, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandSystemMenuPermissions::DlgEventCommandSystemMenuPermissions(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandSystemMenuPermissions::DlgEventCommandSystemMenuPermissions
    const wxString RadioBoxOptions_choices[] = {
        _("Forbid menu"),
        _("Alllow menu")
    };
    RadioBoxOptions = new wxRadioBox(this, wxID_ANY, _("Operation"), wxDefaultPosition, wxDefaultSize, 2, RadioBoxOptions_choices, 1, wxRA_SPECIFY_ROWS);
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandSystemMenuPermissions::set_properties()
{
    // begin wxGlade: DlgEventCommandSystemMenuPermissions::set_properties
    SetTitle(_("System menu permissions"));
    RadioBoxOptions->SetSelection(0);
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandSystemMenuPermissions::do_layout()
{
    // begin wxGlade: DlgEventCommandSystemMenuPermissions::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    SzUp->Add(RadioBoxOptions, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandConditions::DlgEventCommandConditions(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandConditions::DlgEventCommandConditions
    NotebookConditions = new wxNotebook(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0);
    NotebookPanel02 = new wxPanel(NotebookConditions, wxID_ANY);
    SzNotebook_staticbox = new wxStaticBox(this, -1, _("Conditions"));
    SzOptionsRight_staticbox = new wxStaticBox(this, -1, _("Options"));
    NotebookPanel01 = new wxPanel(NotebookConditions, wxID_ANY);
    RadioSwitch = new wxRadioButton(NotebookPanel01, wxID_ANY, _("Switch"));
    TextSwitch = new wxTextCtrl(NotebookPanel01, wxID_ANY, wxEmptyString);
    BtnSwitch = new wxButton(NotebookPanel01, wxID_ANY, _("..."));
    LblSwitch = new wxStaticText(NotebookPanel01, wxID_ANY, _(":"));
    const wxString ChoiceSwitchCondition_choices[] = {
        
    };
    ChoiceSwitchCondition = new wxChoice(NotebookPanel01, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, ChoiceSwitchCondition_choices, 0);
    RadioVar = new wxRadioButton(NotebookPanel01, wxID_ANY, _("Variable"));
    TextVar = new wxTextCtrl(NotebookPanel01, wxID_ANY, wxEmptyString);
    BtnVar = new wxButton(NotebookPanel01, wxID_ANY, _("..."));
    LblVar = new wxStaticText(NotebookPanel01, wxID_ANY, _(":"));
    RadioVarFixed = new wxRadioButton(NotebookPanel01, wxID_ANY, _("Fixed"));
    SpinVarFiexd = new wxSpinCtrl(NotebookPanel01, wxID_ANY, wxT("10"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    RadioVarVar = new wxRadioButton(NotebookPanel01, wxID_ANY, _("Variable"));
    TextVarVar = new wxTextCtrl(NotebookPanel01, wxID_ANY, wxEmptyString);
    BtnVarVar = new wxButton(NotebookPanel01, wxID_ANY, _("..."));
    const wxString ChoiceVarCondition_choices[] = {
        
    };
    ChoiceVarCondition = new wxChoice(NotebookPanel01, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, ChoiceVarCondition_choices, 0);
    RadioTimer = new wxRadioButton(NotebookPanel01, wxID_ANY, _("Timer"));
    SpinTimer01 = new wxSpinCtrl(NotebookPanel01, wxID_ANY, wxT("10"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    LblTimer01 = new wxStaticText(NotebookPanel01, wxID_ANY, _(":"));
    SpinTimer02 = new wxSpinCtrl(NotebookPanel01, wxID_ANY, wxT("10"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    LblTimer02 = new wxStaticText(NotebookPanel01, wxID_ANY, _(":"));
    const wxString ChoiceTimerCondition_choices[] = {
        
    };
    ChoiceTimerCondition = new wxChoice(NotebookPanel01, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, ChoiceTimerCondition_choices, 0);
    RadioMoney = new wxRadioButton(NotebookPanel01, wxID_ANY, _("Money"));
    SpinMoney = new wxSpinCtrl(NotebookPanel01, wxID_ANY, wxT("10"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    const wxString ChoiceMoneyCondition_choices[] = {
        
    };
    ChoiceMoneyCondition = new wxChoice(NotebookPanel01, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, ChoiceMoneyCondition_choices, 0);
    RadioItem = new wxRadioButton(NotebookPanel02, wxID_ANY, _("Item"));
    const wxString ChoiceItem_choices[] = {
        
    };
    ChoiceItem = new wxChoice(NotebookPanel02, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, ChoiceItem_choices, 0);
    const wxString ChoiceItemCondition_choices[] = {
        
    };
    ChoiceItemCondition = new wxChoice(NotebookPanel02, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, ChoiceItemCondition_choices, 0);
    RadioActor = new wxRadioButton(NotebookPanel02, wxID_ANY, _("Actor"));
    const wxString ChoiceActor_choices[] = {
        
    };
    ChoiceActor = new wxChoice(NotebookPanel02, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, ChoiceActor_choices, 0);
    TextActorCondition = new wxTextCtrl(NotebookPanel02, wxID_ANY, wxEmptyString);
    BtnActorCondition = new wxButton(NotebookPanel02, wxID_ANY, _("..."));
    RadioGroup = new wxRadioButton(NotebookPanel02, wxID_ANY, _("Group"));
    const wxString ChoiceGroup_choices[] = {
        
    };
    ChoiceGroup = new wxChoice(NotebookPanel02, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, ChoiceGroup_choices, 0);
    LblGroup01 = new wxStaticText(NotebookPanel02, wxID_ANY, _(":"));
    const wxString ChoiceGroupCondition_choices[] = {
        
    };
    ChoiceGroupCondition = new wxChoice(NotebookPanel02, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, ChoiceGroupCondition_choices, 0);
    LblGroup02 = new wxStaticText(NotebookPanel02, wxID_ANY, _("direction"));
    RadioVehicle = new wxRadioButton(NotebookPanel02, wxID_ANY, _("Vehicle"));
    const wxString ChoiceVehicle_choices[] = {
        
    };
    ChoiceVehicle = new wxChoice(NotebookPanel02, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, ChoiceVehicle_choices, 0);
    LblVehicle = new wxStaticText(NotebookPanel02, wxID_ANY, _("boarded"));
    RadioKey = new wxRadioButton(NotebookPanel02, wxID_ANY, _("Pressed decision key"));
    RadioMusic = new wxRadioButton(NotebookPanel02, wxID_ANY, _("Playing music"));
    ChkException = new wxCheckBox(this, wxID_ANY, _("Exception if conditions are insatisfied"));
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandConditions::set_properties()
{
    // begin wxGlade: DlgEventCommandConditions::set_properties
    SetTitle(_("Conditions"));
    TextSwitch->SetSize(wxSize(125, -1));
    BtnSwitch->SetSize(wxSize(25, -1));
    ChoiceSwitchCondition->SetSize(wxSize(100, -1));
    TextVar->SetSize(wxSize(125, -1));
    BtnVar->SetSize(wxSize(25, -1));
    SpinVarFiexd->SetSize(wxSize(75, -1));
    TextVarVar->SetSize(wxSize(125, -1));
    BtnVarVar->SetSize(wxSize(25, -1));
    SpinTimer01->SetSize(wxSize(75, -1));
    SpinTimer02->SetSize(wxSize(75, -1));
    SpinMoney->SetSize(wxSize(75, -1));
    ChoiceItemCondition->SetSize(wxSize(100, -1));
    TextActorCondition->SetSize(wxSize(125, -1));
    BtnActorCondition->SetSize(wxSize(25, -1));
    ChoiceGroupCondition->SetSize(wxSize(100, -1));
    LblVehicle->SetSize(wxSize(100, -1));
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandConditions::do_layout()
{
    // begin wxGlade: DlgEventCommandConditions::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzOptionsRight = new wxStaticBoxSizer(SzOptionsRight_staticbox, wxHORIZONTAL);
    wxStaticBoxSizer* SzNotebook = new wxStaticBoxSizer(SzNotebook_staticbox, wxHORIZONTAL);
    wxBoxSizer* SzSeparator03 = new wxBoxSizer(wxVERTICAL);
    wxFlexGridSizer* SzSeparator04 = new wxFlexGridSizer(5, 2, 3, 2);
    wxBoxSizer* SzVehicle = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzGroup = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzActor02 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzActor01 = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzItem = new wxBoxSizer(wxHORIZONTAL);
    wxFlexGridSizer* SzSeparator01 = new wxFlexGridSizer(6, 2, 2, 2);
    wxBoxSizer* SzMoney = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzTimer = new wxBoxSizer(wxHORIZONTAL);
    wxFlexGridSizer* SzSeparator02 = new wxFlexGridSizer(2, 2, 2, 2);
    wxBoxSizer* SzVarVar = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzVar = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzSwitch = new wxBoxSizer(wxHORIZONTAL);
    SzSeparator01->Add(RadioSwitch, 0, wxLEFT|wxTOP|wxALIGN_CENTER_VERTICAL, 1);
    SzSwitch->Add(TextSwitch, 1, wxALIGN_CENTER_VERTICAL, 0);
    SzSwitch->Add(BtnSwitch, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzSwitch->Add(LblSwitch, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzSwitch->Add(ChoiceSwitchCondition, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzSeparator01->Add(SzSwitch, 1, wxTOP|wxBOTTOM|wxEXPAND, 1);
    SzSeparator01->Add(RadioVar, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    SzVar->Add(TextVar, 1, wxALIGN_CENTER_VERTICAL, 0);
    SzVar->Add(BtnVar, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzVar->Add(LblVar, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzVar->Add(100, 0, 0, wxLEFT|wxRIGHT|wxEXPAND, 1);
    SzSeparator01->Add(SzVar, 1, wxTOP|wxEXPAND, 1);
    SzSeparator01->Add(0, 0, 1, wxEXPAND, 0);
    SzSeparator02->Add(RadioVarFixed, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzSeparator02->Add(SpinVarFiexd, 1, wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    SzSeparator02->Add(RadioVarVar, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzVarVar->Add(TextVarVar, 1, wxALIGN_CENTER_VERTICAL, 0);
    SzVarVar->Add(BtnVarVar, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzSeparator02->Add(SzVarVar, 1, wxEXPAND, 0);
    SzSeparator02->AddGrowableCol(1);
    SzSeparator01->Add(SzSeparator02, 1, wxALL|wxEXPAND, 1);
    SzSeparator01->Add(0, 0, 1, wxEXPAND, 0);
    SzSeparator01->Add(ChoiceVarCondition, 0, wxRIGHT|wxTOP|wxBOTTOM|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    SzSeparator01->Add(RadioTimer, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    SzTimer->Add(SpinTimer01, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzTimer->Add(LblTimer01, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzTimer->Add(SpinTimer02, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzTimer->Add(LblTimer02, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzTimer->Add(ChoiceTimerCondition, 2, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzSeparator01->Add(SzTimer, 1, wxTOP|wxBOTTOM|wxEXPAND, 1);
    SzSeparator01->Add(RadioMoney, 0, wxLEFT|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    SzMoney->Add(SpinMoney, 0, wxRIGHT|wxBOTTOM, 1);
    SzMoney->Add(ChoiceMoneyCondition, 3, wxLEFT|wxRIGHT|wxBOTTOM|wxALIGN_CENTER_VERTICAL, 1);
    SzSeparator01->Add(SzMoney, 1, wxTOP|wxBOTTOM|wxEXPAND, 1);
    NotebookPanel01->SetSizer(SzSeparator01);
    SzSeparator01->AddGrowableCol(1);
    SzSeparator04->Add(RadioItem, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzItem->Add(ChoiceItem, 1, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzItem->Add(ChoiceItemCondition, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    SzSeparator04->Add(SzItem, 1, wxEXPAND, 0);
    SzSeparator04->Add(RadioActor, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzActor01->Add(ChoiceActor, 1, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzActor01->Add(100, 0, 0, wxEXPAND, 0);
    SzSeparator04->Add(SzActor01, 1, wxEXPAND, 0);
    SzSeparator04->Add(0, 0, 1, wxEXPAND, 0);
    SzActor02->Add(TextActorCondition, 1, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    SzActor02->Add(BtnActorCondition, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzSeparator04->Add(SzActor02, 1, wxEXPAND, 0);
    SzSeparator04->Add(RadioGroup, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzGroup->Add(ChoiceGroup, 2, wxLEFT|wxRIGHT|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    SzGroup->Add(LblGroup01, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzGroup->Add(ChoiceGroupCondition, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzGroup->Add(LblGroup02, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzSeparator04->Add(SzGroup, 1, wxEXPAND, 0);
    SzSeparator04->Add(RadioVehicle, 0, wxALIGN_CENTER_VERTICAL, 0);
    SzVehicle->Add(ChoiceVehicle, 2, wxLEFT|wxRIGHT|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    SzVehicle->Add(LblVehicle, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzSeparator04->Add(SzVehicle, 1, wxEXPAND, 0);
    SzSeparator04->AddGrowableCol(1);
    SzSeparator03->Add(SzSeparator04, 0, wxALL|wxEXPAND, 1);
    SzSeparator03->Add(RadioKey, 0, wxALL|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    SzSeparator03->Add(RadioMusic, 0, wxALL|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    NotebookPanel02->SetSizer(SzSeparator03);
    NotebookConditions->AddPage(NotebookPanel01, _("1"));
    NotebookConditions->AddPage(NotebookPanel02, _("2"));
    SzNotebook->Add(new wxNotebookSizer(NotebookConditions), 1, wxEXPAND, 0);
    SzUp->Add(SzNotebook, 1, wxLEFT|wxRIGHT|wxEXPAND, 1);
    SzOptionsRight->Add(ChkException, 0, 0, 0);
    SzUp->Add(SzOptionsRight, 0, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandSetLabel::DlgEventCommandSetLabel(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandSetLabel::DlgEventCommandSetLabel
    SzSpinRight_staticbox = new wxStaticBox(this, -1, _("Label number"));
    SpinLabelNumber = new wxSpinCtrl(this, wxID_ANY, wxT("10"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandSetLabel::set_properties()
{
    // begin wxGlade: DlgEventCommandSetLabel::set_properties
    SetTitle(_("Set label"));
    SpinLabelNumber->SetSize(wxSize(90, -1));
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandSetLabel::do_layout()
{
    // begin wxGlade: DlgEventCommandSetLabel::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzSpinRight = new wxStaticBoxSizer(SzSpinRight_staticbox, wxHORIZONTAL);
    SzSpinRight->Add(SpinLabelNumber, 1, 0, 0);
    SzUp->Add(SzSpinRight, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandGoToLabel::DlgEventCommandGoToLabel(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandGoToLabel::DlgEventCommandGoToLabel
    SzSpinRight_staticbox = new wxStaticBox(this, -1, _("Label number"));
    SpinLabelNumber = new wxSpinCtrl(this, wxID_ANY, wxT("10"), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandGoToLabel::set_properties()
{
    // begin wxGlade: DlgEventCommandGoToLabel::set_properties
    SetTitle(_("Go to label"));
    SpinLabelNumber->SetSize(wxSize(90, -1));
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandGoToLabel::do_layout()
{
    // begin wxGlade: DlgEventCommandGoToLabel::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzSpinRight = new wxStaticBoxSizer(SzSpinRight_staticbox, wxHORIZONTAL);
    SzSpinRight->Add(SpinLabelNumber, 1, 0, 0);
    SzUp->Add(SzSpinRight, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandCallEvent::DlgEventCommandCallEvent(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandCallEvent::DlgEventCommandCallEvent
    SzSeparator01_staticbox = new wxStaticBox(this, -1, _("Event to call"));
    RadioCommonEvent = new wxRadioButton(this, wxID_ANY, _("Common event"));
    const wxString ChoiceCommonEvents_choices[] = {
        
    };
    ChoiceCommonEvents = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, ChoiceCommonEvents_choices, 0);
    RadioMapEvent = new wxRadioButton(this, wxID_ANY, _("Map event"));
    const wxString ChoiceMapEvents_choices[] = {
        
    };
    ChoiceMapEvents = new wxChoice(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, ChoiceMapEvents_choices, 0);
    SpinMapEventPage = new wxSpinCtrl(this, wxID_ANY, wxT(""), wxDefaultPosition, wxDefaultSize, wxSP_ARROW_KEYS, 0, 100);
    LblPag = new wxStaticText(this, wxID_ANY, _("page"));
    RadioMapEventVar = new wxRadioButton(this, wxID_ANY, _("Map event by variable"));
    TextVar01 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    BtnVar01 = new wxButton(this, wxID_ANY, _("..."));
    LblVar01 = new wxStaticText(this, wxID_ANY, _("event to call"));
    TextVar02 = new wxTextCtrl(this, wxID_ANY, wxEmptyString);
    BtnVar02 = new wxButton(this, wxID_ANY, _("..."));
    LblVar02 = new wxStaticText(this, wxID_ANY, _("page"));
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandCallEvent::set_properties()
{
    // begin wxGlade: DlgEventCommandCallEvent::set_properties
    SetTitle(_("Call event"));
    BtnVar01->SetSize(wxSize(25, -1));
    BtnVar02->SetSize(wxSize(25, -1));
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandCallEvent::do_layout()
{
    // begin wxGlade: DlgEventCommandCallEvent::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    wxStaticBoxSizer* SzSeparator01 = new wxStaticBoxSizer(SzSeparator01_staticbox, wxVERTICAL);
    wxFlexGridSizer* SzMapEventVar = new wxFlexGridSizer(2, 3, 2, 0);
    wxBoxSizer* SzEventRight = new wxBoxSizer(wxHORIZONTAL);
    SzSeparator01->Add(RadioCommonEvent, 0, wxBOTTOM|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    SzSeparator01->Add(ChoiceCommonEvents, 0, wxTOP|wxBOTTOM|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    SzSeparator01->Add(RadioMapEvent, 0, wxTOP|wxBOTTOM|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    SzEventRight->Add(ChoiceMapEvents, 1, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzEventRight->Add(SpinMapEventPage, 0, wxLEFT|wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzEventRight->Add(LblPag, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    SzSeparator01->Add(SzEventRight, 0, wxTOP|wxBOTTOM|wxEXPAND, 1);
    SzSeparator01->Add(RadioMapEventVar, 0, wxTOP|wxBOTTOM|wxEXPAND|wxALIGN_CENTER_VERTICAL, 1);
    SzMapEventVar->Add(TextVar01, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    SzMapEventVar->Add(BtnVar01, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzMapEventVar->Add(LblVar01, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    SzMapEventVar->Add(TextVar02, 0, wxEXPAND|wxALIGN_CENTER_VERTICAL, 0);
    SzMapEventVar->Add(BtnVar02, 0, wxRIGHT|wxALIGN_CENTER_VERTICAL, 1);
    SzMapEventVar->Add(LblVar02, 0, wxLEFT|wxALIGN_CENTER_VERTICAL, 1);
    SzMapEventVar->AddGrowableCol(0);
    SzSeparator01->Add(SzMapEventVar, 1, wxTOP|wxEXPAND, 1);
    SzUp->Add(SzSeparator01, 1, wxLEFT|wxRIGHT|wxBOTTOM|wxEXPAND, 1);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandNotes::DlgEventCommandNotes(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandNotes::DlgEventCommandNotes
    LblNote = new wxTextCtrl(this, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE|wxTE_LINEWRAP|wxTE_WORDWRAP);
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);
    BtnHelp = new wxButton(this, wxID_HELP, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandNotes::set_properties()
{
    // begin wxGlade: DlgEventCommandNotes::set_properties
    SetTitle(_("Notes"));
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandNotes::do_layout()
{
    // begin wxGlade: DlgEventCommandNotes::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    SzUp->Add(LblNote, 1, wxALL|wxEXPAND, 1);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzBtnRight->Add(BtnHelp, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandActorGraphics::DlgEventCommandActorGraphics(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandActorGraphics::DlgEventCommandActorGraphics
    const wxString ListActors_choices[] = {
        
    };
    ListActors = new wxListBox(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, ListActors_choices, 0);
    BitmapActors = new wxStaticBitmap(this, wxID_ANY, wxBitmap(wxT("charset.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandActorGraphics::set_properties()
{
    // begin wxGlade: DlgEventCommandActorGraphics::set_properties
    SetTitle(_("Actor graphics"));
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandActorGraphics::do_layout()
{
    // begin wxGlade: DlgEventCommandActorGraphics::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzRight = new wxBoxSizer(wxHORIZONTAL);
    SzRight->Add(ListActors, 1, wxALL|wxEXPAND, 1);
    SzRight->Add(BitmapActors, 0, wxALL, 1);
    SzUp->Add(SzRight, 1, wxEXPAND, 0);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}


DlgEventCommandFaceGraphic::DlgEventCommandFaceGraphic(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER|wxMAXIMIZE_BOX|wxMINIMIZE_BOX|wxTHICK_FRAME)
{
    // begin wxGlade: DlgEventCommandFaceGraphic::DlgEventCommandFaceGraphic
    const wxString ListFaces_choices[] = {
        
    };
    ListFaces = new wxListBox(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 0, ListFaces_choices, 0);
    BitmapFaces = new wxStaticBitmap(this, wxID_ANY, wxBitmap(wxT("charset.png"), wxBITMAP_TYPE_ANY), wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER);
    BtnOk = new wxButton(this, wxID_OK, wxEmptyString);
    BtnCancel = new wxButton(this, wxID_CANCEL, wxEmptyString);

    set_properties();
    do_layout();
    // end wxGlade
}


void DlgEventCommandFaceGraphic::set_properties()
{
    // begin wxGlade: DlgEventCommandFaceGraphic::set_properties
    SetTitle(_("Face Graphic"));
    BtnOk->SetDefault();
    // end wxGlade
}


void DlgEventCommandFaceGraphic::do_layout()
{
    // begin wxGlade: DlgEventCommandFaceGraphic::do_layout
    wxBoxSizer* SzUp = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* SzBtnRight = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* SzRight = new wxBoxSizer(wxHORIZONTAL);
    SzRight->Add(ListFaces, 1, wxALL|wxEXPAND, 1);
    SzRight->Add(BitmapFaces, 0, wxALL, 1);
    SzUp->Add(SzRight, 1, wxEXPAND, 0);
    SzBtnRight->Add(BtnOk, 0, wxALL, 1);
    SzBtnRight->Add(BtnCancel, 0, wxALL, 1);
    SzUp->Add(SzBtnRight, 0, wxALIGN_RIGHT, 0);
    SetSizer(SzUp);
    SzUp->Fit(this);
    Layout();
    // end wxGlade
}



class EasyRPGApp: public wxApp {
public:
    bool OnInit();
};

IMPLEMENT_APP(EasyRPGApp)

bool EasyRPGApp::OnInit()
{
    wxInitAllImageHandlers();
    EasyRPGDialogDatabase* EasyRPGDatabase = new EasyRPGDialogDatabase(NULL, wxID_ANY, wxEmptyString);
    SetTopWindow(EasyRPGDatabase);
    EasyRPGDatabase->Show();
    return true;
}
